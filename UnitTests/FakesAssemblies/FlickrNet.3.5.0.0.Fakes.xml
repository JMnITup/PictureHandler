<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlickrNet.3.5.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException">
            <summary>Shim type of FlickrNet.Exceptions.BadUrlFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.#ctor(FlickrNet.Exceptions.BadUrlFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.ConstructorString">
            <summary>Sets the shim of BadUrlFoundException.BadUrlFoundException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimBadUrlFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException">
            <summary>Shim type of FlickrNet.Exceptions.FormatNotFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.#ctor(FlickrNet.Exceptions.FormatNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.ConstructorString">
            <summary>Sets the shim of FormatNotFoundException.FormatNotFoundException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimFormatNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException">
            <summary>Shim type of FlickrNet.Exceptions.InvalidApiKeyException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.#ctor(FlickrNet.Exceptions.InvalidApiKeyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.ConstructorString">
            <summary>Sets the shim of InvalidApiKeyException.InvalidApiKeyException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimInvalidApiKeyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException">
            <summary>Shim type of FlickrNet.Exceptions.InvalidSignatureException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.#ctor(FlickrNet.Exceptions.InvalidSignatureException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.ConstructorString">
            <summary>Sets the shim of InvalidSignatureException.InvalidSignatureException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimInvalidSignatureException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException">
            <summary>Shim type of FlickrNet.Exceptions.LoginFailedInvalidTokenException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.#ctor(FlickrNet.Exceptions.LoginFailedInvalidTokenException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.ConstructorString">
            <summary>Sets the shim of LoginFailedInvalidTokenException.LoginFailedInvalidTokenException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimLoginFailedInvalidTokenException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException">
            <summary>Shim type of FlickrNet.Exceptions.MethodNotFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.#ctor(FlickrNet.Exceptions.MethodNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.ConstructorString">
            <summary>Sets the shim of MethodNotFoundException.MethodNotFoundException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimMethodNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException">
            <summary>Shim type of FlickrNet.Exceptions.MissingSignatureException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.#ctor(FlickrNet.Exceptions.MissingSignatureException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.ConstructorString">
            <summary>Sets the shim of MissingSignatureException.MissingSignatureException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimMissingSignatureException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException">
            <summary>Shim type of FlickrNet.Exceptions.PermissionDeniedException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.#ctor(FlickrNet.Exceptions.PermissionDeniedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.ConstructorInt32String">
            <summary>Sets the shim of PermissionDeniedException.PermissionDeniedException(Int32 code, String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPermissionDeniedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException">
            <summary>Shim type of FlickrNet.Exceptions.PhotoNotFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.#ctor(FlickrNet.Exceptions.PhotoNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.ConstructorInt32String">
            <summary>Sets the shim of PhotoNotFoundException.PhotoNotFoundException(Int32 code, String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPhotoNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException">
            <summary>Shim type of FlickrNet.Exceptions.PhotosetNotFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.#ctor(FlickrNet.Exceptions.PhotosetNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.ConstructorInt32String">
            <summary>Sets the shim of PhotosetNotFoundException.PhotosetNotFoundException(Int32 code, String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimPhotosetNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException">
            <summary>Shim type of FlickrNet.Exceptions.ServiceUnavailableException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.#ctor(FlickrNet.Exceptions.ServiceUnavailableException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.ConstructorString">
            <summary>Sets the shim of ServiceUnavailableException.ServiceUnavailableException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimServiceUnavailableException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException">
            <summary>Shim type of FlickrNet.Exceptions.UserNotFoundException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.#ctor(FlickrNet.Exceptions.UserNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.ConstructorInt32String">
            <summary>Sets the shim of UserNotFoundException.UserNotFoundException(Int32 code, String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimUserNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException">
            <summary>Shim type of FlickrNet.Exceptions.UserNotLoggedInInsufficientPermissionsException</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.#ctor(FlickrNet.Exceptions.UserNotLoggedInInsufficientPermissionsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.ConstructorString">
            <summary>Sets the shim of UserNotLoggedInInsufficientPermissionsException.UserNotLoggedInInsufficientPermissionsException(String message)</summary>
        </member>
        <member name="T:FlickrNet.Exceptions.Fakes.ShimUserNotLoggedInInsufficientPermissionsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityEvent">
            <summary>Shim type of FlickrNet.ActivityEvent</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityEvent.#ctor(FlickrNet.ActivityEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityEvent.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.CommentIdGet">
            <summary>Sets the shim of ActivityEvent.get_CommentId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.CommentIdSetString">
            <summary>Sets the shim of ActivityEvent.set_CommentId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.Constructor">
            <summary>Sets the shim of ActivityEvent.ActivityEvent()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.DateAddedGet">
            <summary>Sets the shim of ActivityEvent.get_DateAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.DateAddedSetDateTime">
            <summary>Sets the shim of ActivityEvent.set_DateAdded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.EventTypeGet">
            <summary>Sets the shim of ActivityEvent.get_EventType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.EventTypeSetActivityEventType">
            <summary>Sets the shim of ActivityEvent.set_EventType(ActivityEventType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityEvent.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.GalleryIdGet">
            <summary>Sets the shim of ActivityEvent.get_GalleryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.GalleryIdSetString">
            <summary>Sets the shim of ActivityEvent.set_GalleryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.IconFarmGet">
            <summary>Sets the shim of ActivityEvent.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.IconFarmSetString">
            <summary>Sets the shim of ActivityEvent.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.IconServerGet">
            <summary>Sets the shim of ActivityEvent.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.IconServerSetString">
            <summary>Sets the shim of ActivityEvent.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.NoteIdGet">
            <summary>Sets the shim of ActivityEvent.get_NoteId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.NoteIdSetString">
            <summary>Sets the shim of ActivityEvent.set_NoteId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.UserIdGet">
            <summary>Sets the shim of ActivityEvent.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.UserIdSetString">
            <summary>Sets the shim of ActivityEvent.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.UserNameGet">
            <summary>Sets the shim of ActivityEvent.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.UserNameSetString">
            <summary>Sets the shim of ActivityEvent.set_UserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.ValueGet">
            <summary>Sets the shim of ActivityEvent.get_Value()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.ValueSetString">
            <summary>Sets the shim of ActivityEvent.set_Value(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.CommentIdGet">
            <summary>Sets the shim of ActivityEvent.get_CommentId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.CommentIdSetString">
            <summary>Sets the shim of ActivityEvent.set_CommentId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.DateAddedGet">
            <summary>Sets the shim of ActivityEvent.get_DateAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.DateAddedSetDateTime">
            <summary>Sets the shim of ActivityEvent.set_DateAdded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.EventTypeGet">
            <summary>Sets the shim of ActivityEvent.get_EventType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.EventTypeSetActivityEventType">
            <summary>Sets the shim of ActivityEvent.set_EventType(ActivityEventType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityEvent.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.GalleryIdGet">
            <summary>Sets the shim of ActivityEvent.get_GalleryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.GalleryIdSetString">
            <summary>Sets the shim of ActivityEvent.set_GalleryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.IconFarmGet">
            <summary>Sets the shim of ActivityEvent.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.IconFarmSetString">
            <summary>Sets the shim of ActivityEvent.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.IconServerGet">
            <summary>Sets the shim of ActivityEvent.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.IconServerSetString">
            <summary>Sets the shim of ActivityEvent.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.NoteIdGet">
            <summary>Sets the shim of ActivityEvent.get_NoteId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.NoteIdSetString">
            <summary>Sets the shim of ActivityEvent.set_NoteId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.UserIdGet">
            <summary>Sets the shim of ActivityEvent.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.UserIdSetString">
            <summary>Sets the shim of ActivityEvent.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.UserNameGet">
            <summary>Sets the shim of ActivityEvent.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.UserNameSetString">
            <summary>Sets the shim of ActivityEvent.set_UserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.ValueGet">
            <summary>Sets the shim of ActivityEvent.get_Value()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityEvent.AllInstances.ValueSetString">
            <summary>Sets the shim of ActivityEvent.set_Value(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityItem">
            <summary>Shim type of FlickrNet.ActivityItem</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItem.#ctor(FlickrNet.ActivityItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItem.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.CommentsGet">
            <summary>Sets the shim of ActivityItem.get_Comments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.CommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_Comments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.Constructor">
            <summary>Sets the shim of ActivityItem.ActivityItem()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.EventsGet">
            <summary>Sets the shim of ActivityItem.get_Events()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.EventsSetCollectionOfActivityEvent">
            <summary>Sets the shim of ActivityItem.set_Events(Collection`1&lt;ActivityEvent&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.FarmGet">
            <summary>Sets the shim of ActivityItem.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.FarmSetString">
            <summary>Sets the shim of ActivityItem.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.FavoritesGet">
            <summary>Sets the shim of ActivityItem.get_Favorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.FavoritesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Favorites(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityItem.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.IdGet">
            <summary>Sets the shim of ActivityItem.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.IdSetString">
            <summary>Sets the shim of ActivityItem.set_Id(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ItemTypeGet">
            <summary>Sets the shim of ActivityItem.get_ItemType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ItemTypeSetActivityItemType">
            <summary>Sets the shim of ActivityItem.set_ItemType(ActivityItemType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.LoadAttributesXmlReader">
            <summary>Sets the shim of ActivityItem.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.LoadElementsXmlReader">
            <summary>Sets the shim of ActivityItem.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.MediaGet">
            <summary>Sets the shim of ActivityItem.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.MediaSetMediaType">
            <summary>Sets the shim of ActivityItem.set_Media(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.MoreGet">
            <summary>Sets the shim of ActivityItem.get_More()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.MoreSetBoolean">
            <summary>Sets the shim of ActivityItem.set_More(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NewCommentsGet">
            <summary>Sets the shim of ActivityItem.get_NewComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NewCommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_NewComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NewNotesGet">
            <summary>Sets the shim of ActivityItem.get_NewNotes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NewNotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_NewNotes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NotesGet">
            <summary>Sets the shim of ActivityItem.get_Notes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.NotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Notes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OldCommentsGet">
            <summary>Sets the shim of ActivityItem.get_OldComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OldCommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_OldComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OldNotesGet">
            <summary>Sets the shim of ActivityItem.get_OldNotes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OldNotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_OldNotes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerBuddyIconGet">
            <summary>Sets the shim of ActivityItem.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerFarmGet">
            <summary>Sets the shim of ActivityItem.get_OwnerFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerFarmSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerIdGet">
            <summary>Sets the shim of ActivityItem.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerIdSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerNameGet">
            <summary>Sets the shim of ActivityItem.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerNameSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerServerGet">
            <summary>Sets the shim of ActivityItem.get_OwnerServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.OwnerServerSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.PhotosGet">
            <summary>Sets the shim of ActivityItem.get_Photos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.PhotosSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Photos(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.PrimaryPhotoIdGet">
            <summary>Sets the shim of ActivityItem.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.PrimaryPhotoIdSetString">
            <summary>Sets the shim of ActivityItem.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.SecretGet">
            <summary>Sets the shim of ActivityItem.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.SecretSetString">
            <summary>Sets the shim of ActivityItem.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ServerGet">
            <summary>Sets the shim of ActivityItem.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ServerSetString">
            <summary>Sets the shim of ActivityItem.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.SmallUrlGet">
            <summary>Sets the shim of ActivityItem.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.SquareThumbnailUrlGet">
            <summary>Sets the shim of ActivityItem.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.TitleGet">
            <summary>Sets the shim of ActivityItem.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.TitleSetString">
            <summary>Sets the shim of ActivityItem.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ViewsGet">
            <summary>Sets the shim of ActivityItem.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.ViewsSetInt32">
            <summary>Sets the shim of ActivityItem.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.CommentsGet">
            <summary>Sets the shim of ActivityItem.get_Comments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.CommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_Comments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.EventsGet">
            <summary>Sets the shim of ActivityItem.get_Events()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.EventsSetCollectionOfActivityEvent">
            <summary>Sets the shim of ActivityItem.set_Events(Collection`1&lt;ActivityEvent&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.FarmGet">
            <summary>Sets the shim of ActivityItem.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.FarmSetString">
            <summary>Sets the shim of ActivityItem.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.FavoritesGet">
            <summary>Sets the shim of ActivityItem.get_Favorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.FavoritesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Favorites(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityItem.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.IdGet">
            <summary>Sets the shim of ActivityItem.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.IdSetString">
            <summary>Sets the shim of ActivityItem.set_Id(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ItemTypeGet">
            <summary>Sets the shim of ActivityItem.get_ItemType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ItemTypeSetActivityItemType">
            <summary>Sets the shim of ActivityItem.set_ItemType(ActivityItemType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.LoadAttributesXmlReader">
            <summary>Sets the shim of ActivityItem.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.LoadElementsXmlReader">
            <summary>Sets the shim of ActivityItem.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.MediaGet">
            <summary>Sets the shim of ActivityItem.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.MediaSetMediaType">
            <summary>Sets the shim of ActivityItem.set_Media(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.MoreGet">
            <summary>Sets the shim of ActivityItem.get_More()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.MoreSetBoolean">
            <summary>Sets the shim of ActivityItem.set_More(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NewCommentsGet">
            <summary>Sets the shim of ActivityItem.get_NewComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NewCommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_NewComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NewNotesGet">
            <summary>Sets the shim of ActivityItem.get_NewNotes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NewNotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_NewNotes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NotesGet">
            <summary>Sets the shim of ActivityItem.get_Notes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.NotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Notes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OldCommentsGet">
            <summary>Sets the shim of ActivityItem.get_OldComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OldCommentsSetInt32">
            <summary>Sets the shim of ActivityItem.set_OldComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OldNotesGet">
            <summary>Sets the shim of ActivityItem.get_OldNotes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OldNotesSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_OldNotes(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerBuddyIconGet">
            <summary>Sets the shim of ActivityItem.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerFarmGet">
            <summary>Sets the shim of ActivityItem.get_OwnerFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerFarmSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerIdGet">
            <summary>Sets the shim of ActivityItem.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerIdSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerNameGet">
            <summary>Sets the shim of ActivityItem.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerNameSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerServerGet">
            <summary>Sets the shim of ActivityItem.get_OwnerServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.OwnerServerSetString">
            <summary>Sets the shim of ActivityItem.set_OwnerServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.PhotosGet">
            <summary>Sets the shim of ActivityItem.get_Photos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.PhotosSetNullableOfInt32">
            <summary>Sets the shim of ActivityItem.set_Photos(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.PrimaryPhotoIdGet">
            <summary>Sets the shim of ActivityItem.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.PrimaryPhotoIdSetString">
            <summary>Sets the shim of ActivityItem.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.SecretGet">
            <summary>Sets the shim of ActivityItem.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.SecretSetString">
            <summary>Sets the shim of ActivityItem.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ServerGet">
            <summary>Sets the shim of ActivityItem.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ServerSetString">
            <summary>Sets the shim of ActivityItem.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.SmallUrlGet">
            <summary>Sets the shim of ActivityItem.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.SquareThumbnailUrlGet">
            <summary>Sets the shim of ActivityItem.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.TitleGet">
            <summary>Sets the shim of ActivityItem.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.TitleSetString">
            <summary>Sets the shim of ActivityItem.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ViewsGet">
            <summary>Sets the shim of ActivityItem.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItem.AllInstances.ViewsSetInt32">
            <summary>Sets the shim of ActivityItem.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityItemCollection">
            <summary>Shim type of FlickrNet.ActivityItemCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.#ctor(FlickrNet.ActivityItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.ActivityItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.ActivityItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.Generic.IList{FlickrNet.ActivityItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.ActivityItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimActivityItemCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.ActivityItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItemCollection.Constructor">
            <summary>Sets the shim of ActivityItemCollection.ActivityItemCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItemCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityItemCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimActivityItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimActivityItemCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ActivityItemCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAllContexts">
            <summary>Shim type of FlickrNet.AllContexts</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAllContexts.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAllContexts.#ctor(FlickrNet.AllContexts)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAllContexts.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAllContexts.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAllContexts.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.Constructor">
            <summary>Sets the shim of AllContexts.AllContexts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of AllContexts.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.GroupsGet">
            <summary>Sets the shim of AllContexts.get_Groups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.GroupsSetCollectionOfContextGroup">
            <summary>Sets the shim of AllContexts.set_Groups(Collection`1&lt;ContextGroup&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.SetsGet">
            <summary>Sets the shim of AllContexts.get_Sets()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.SetsSetCollectionOfContextSet">
            <summary>Sets the shim of AllContexts.set_Sets(Collection`1&lt;ContextSet&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAllContexts.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of AllContexts.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.AllInstances.GroupsGet">
            <summary>Sets the shim of AllContexts.get_Groups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.AllInstances.GroupsSetCollectionOfContextGroup">
            <summary>Sets the shim of AllContexts.set_Groups(Collection`1&lt;ContextGroup&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.AllInstances.SetsGet">
            <summary>Sets the shim of AllContexts.get_Sets()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAllContexts.AllInstances.SetsSetCollectionOfContextSet">
            <summary>Sets the shim of AllContexts.set_Sets(Collection`1&lt;ContextSet&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimApiKeyRequiredException">
            <summary>Shim type of FlickrNet.ApiKeyRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimApiKeyRequiredException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimApiKeyRequiredException.#ctor(FlickrNet.ApiKeyRequiredException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimApiKeyRequiredException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimApiKeyRequiredException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimApiKeyRequiredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimApiKeyRequiredException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimApiKeyRequiredException.Constructor">
            <summary>Sets the shim of ApiKeyRequiredException.ApiKeyRequiredException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimApiKeyRequiredException.ConstructorString">
            <summary>Sets the shim of ApiKeyRequiredException.ApiKeyRequiredException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimApiKeyRequiredException.ConstructorStringException">
            <summary>Sets the shim of ApiKeyRequiredException.ApiKeyRequiredException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimApiKeyRequiredException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAuth">
            <summary>Shim type of FlickrNet.Auth</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuth.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuth.#ctor(FlickrNet.Auth)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuth.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuth.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuth.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.Constructor">
            <summary>Sets the shim of Auth.Auth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Auth.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.PermissionsGet">
            <summary>Sets the shim of Auth.get_Permissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.PermissionsSetAuthLevel">
            <summary>Sets the shim of Auth.set_Permissions(AuthLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.TokenGet">
            <summary>Sets the shim of Auth.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.TokenSetString">
            <summary>Sets the shim of Auth.set_Token(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.UserGet">
            <summary>Sets the shim of Auth.get_User()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.UserSetFoundUser">
            <summary>Sets the shim of Auth.set_User(FoundUser value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAuth.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Auth.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.PermissionsGet">
            <summary>Sets the shim of Auth.get_Permissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.PermissionsSetAuthLevel">
            <summary>Sets the shim of Auth.set_Permissions(AuthLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.TokenGet">
            <summary>Sets the shim of Auth.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.TokenSetString">
            <summary>Sets the shim of Auth.set_Token(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.UserGet">
            <summary>Sets the shim of Auth.get_User()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuth.AllInstances.UserSetFoundUser">
            <summary>Sets the shim of Auth.set_User(FoundUser value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAuthenticationRequiredException">
            <summary>Shim type of FlickrNet.AuthenticationRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuthenticationRequiredException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuthenticationRequiredException.#ctor(FlickrNet.AuthenticationRequiredException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuthenticationRequiredException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuthenticationRequiredException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimAuthenticationRequiredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuthenticationRequiredException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuthenticationRequiredException.Constructor">
            <summary>Sets the shim of AuthenticationRequiredException.AuthenticationRequiredException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuthenticationRequiredException.ConstructorString">
            <summary>Sets the shim of AuthenticationRequiredException.AuthenticationRequiredException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimAuthenticationRequiredException.ConstructorStringException">
            <summary>Sets the shim of AuthenticationRequiredException.AuthenticationRequiredException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimAuthenticationRequiredException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlog">
            <summary>Shim type of FlickrNet.Blog</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlog.#ctor(FlickrNet.Blog)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlog.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogIdGet">
            <summary>Sets the shim of Blog.get_BlogId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogIdSetString">
            <summary>Sets the shim of Blog.set_BlogId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogNameGet">
            <summary>Sets the shim of Blog.get_BlogName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogNameSetString">
            <summary>Sets the shim of Blog.set_BlogName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogUrlGet">
            <summary>Sets the shim of Blog.get_BlogUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.BlogUrlSetString">
            <summary>Sets the shim of Blog.set_BlogUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.Constructor">
            <summary>Sets the shim of Blog.Blog()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Blog.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.NeedsPasswordGet">
            <summary>Sets the shim of Blog.get_NeedsPassword()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.NeedsPasswordSetBoolean">
            <summary>Sets the shim of Blog.set_NeedsPassword(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.ServiceGet">
            <summary>Sets the shim of Blog.get_Service()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.ServiceSetString">
            <summary>Sets the shim of Blog.set_Service(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogIdGet">
            <summary>Sets the shim of Blog.get_BlogId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogIdSetString">
            <summary>Sets the shim of Blog.set_BlogId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogNameGet">
            <summary>Sets the shim of Blog.get_BlogName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogNameSetString">
            <summary>Sets the shim of Blog.set_BlogName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogUrlGet">
            <summary>Sets the shim of Blog.get_BlogUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.BlogUrlSetString">
            <summary>Sets the shim of Blog.set_BlogUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Blog.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.NeedsPasswordGet">
            <summary>Sets the shim of Blog.get_NeedsPassword()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.NeedsPasswordSetBoolean">
            <summary>Sets the shim of Blog.set_NeedsPassword(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.ServiceGet">
            <summary>Sets the shim of Blog.get_Service()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlog.AllInstances.ServiceSetString">
            <summary>Sets the shim of Blog.set_Service(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogCollection">
            <summary>Shim type of FlickrNet.BlogCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.#ctor(FlickrNet.BlogCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Blog})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Blog})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.Generic.IList{FlickrNet.Blog})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Blog})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Blog})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogCollection.Constructor">
            <summary>Sets the shim of BlogCollection.BlogCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogService">
            <summary>Shim type of FlickrNet.BlogService</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogService.#ctor(FlickrNet.BlogService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogService.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.Constructor">
            <summary>Sets the shim of BlogService.BlogService()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogService.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.IdGet">
            <summary>Sets the shim of BlogService.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.IdSetString">
            <summary>Sets the shim of BlogService.set_Id(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.NameGet">
            <summary>Sets the shim of BlogService.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.NameSetString">
            <summary>Sets the shim of BlogService.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogService.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.AllInstances.IdGet">
            <summary>Sets the shim of BlogService.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.AllInstances.IdSetString">
            <summary>Sets the shim of BlogService.set_Id(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.AllInstances.NameGet">
            <summary>Sets the shim of BlogService.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogService.AllInstances.NameSetString">
            <summary>Sets the shim of BlogService.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogServiceCollection">
            <summary>Shim type of FlickrNet.BlogServiceCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.#ctor(FlickrNet.BlogServiceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.BlogService})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.BlogService})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.Generic.IList{FlickrNet.BlogService})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.BlogService})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBlogServiceCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.BlogService})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogServiceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogServiceCollection.Constructor">
            <summary>Sets the shim of BlogServiceCollection.BlogServiceCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogServiceCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogServiceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBlogServiceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBlogServiceCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of BlogServiceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBoundaryBox">
            <summary>Shim type of FlickrNet.BoundaryBox</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBoundaryBox.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBoundaryBox.#ctor(FlickrNet.BoundaryBox)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBoundaryBox.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimBoundaryBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AccuracyGet">
            <summary>Sets the shim of BoundaryBox.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AccuracySetGeoAccuracy">
            <summary>Sets the shim of BoundaryBox.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.CanadaGet">
            <summary>Sets the shim of BoundaryBox.get_Canada()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.Constructor">
            <summary>Sets the shim of BoundaryBox.BoundaryBox()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ConstructorDoubleDoubleDoubleDouble">
            <summary>Sets the shim of BoundaryBox.BoundaryBox(Double minimumLongitude, Double minimumLatitude, Double maximumLongitude, Double maximumLatitude)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ConstructorDoubleDoubleDoubleDoubleGeoAccuracy">
            <summary>Sets the shim of BoundaryBox.BoundaryBox(Double minimumLongitude, Double minimumLatitude, Double maximumLongitude, Double maximumLatitude, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ConstructorGeoAccuracy">
            <summary>Sets the shim of BoundaryBox.BoundaryBox(GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ConstructorString">
            <summary>Sets the shim of BoundaryBox.BoundaryBox(String points)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ConstructorStringGeoAccuracy">
            <summary>Sets the shim of BoundaryBox.BoundaryBox(String points, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.DiagonalDistance">
            <summary>Sets the shim of BoundaryBox.DiagonalDistance()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.DiagonalDistanceInKM">
            <summary>Sets the shim of BoundaryBox.DiagonalDistanceInKM()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.DiagonalDistanceInMiles">
            <summary>Sets the shim of BoundaryBox.DiagonalDistanceInMiles()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.IsSetGet">
            <summary>Sets the shim of BoundaryBox.get_IsSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MaximumLatitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MaximumLatitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MaximumLatitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MaximumLatitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MaximumLongitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MaximumLongitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MaximumLongitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MaximumLongitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MinimumLatitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MinimumLatitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MinimumLatitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MinimumLatitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MinimumLongitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MinimumLongitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.MinimumLongitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MinimumLongitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.ToString">
            <summary>Sets the shim of BoundaryBox.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.UKGet">
            <summary>Sets the shim of BoundaryBox.get_UK()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.UKNewcastleGet">
            <summary>Sets the shim of BoundaryBox.get_UKNewcastle()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.UsaGet">
            <summary>Sets the shim of BoundaryBox.get_Usa()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.WorldGet">
            <summary>Sets the shim of BoundaryBox.get_World()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimBoundaryBox.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.AccuracyGet">
            <summary>Sets the shim of BoundaryBox.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.AccuracySetGeoAccuracy">
            <summary>Sets the shim of BoundaryBox.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.DiagonalDistance">
            <summary>Sets the shim of BoundaryBox.DiagonalDistance()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.DiagonalDistanceInKM">
            <summary>Sets the shim of BoundaryBox.DiagonalDistanceInKM()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.DiagonalDistanceInMiles">
            <summary>Sets the shim of BoundaryBox.DiagonalDistanceInMiles()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.IsSetGet">
            <summary>Sets the shim of BoundaryBox.get_IsSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MaximumLatitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MaximumLatitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MaximumLatitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MaximumLatitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MaximumLongitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MaximumLongitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MaximumLongitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MaximumLongitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MinimumLatitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MinimumLatitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MinimumLatitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MinimumLatitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MinimumLongitudeGet">
            <summary>Sets the shim of BoundaryBox.get_MinimumLongitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.MinimumLongitudeSetDouble">
            <summary>Sets the shim of BoundaryBox.set_MinimumLongitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimBoundaryBox.AllInstances.ToString01">
            <summary>Sets the shim of BoundaryBox.ToString()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCache">
            <summary>Shim type of FlickrNet.Cache</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheDisabledGet">
            <summary>Sets the shim of Cache.get_CacheDisabled()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheDisabledSetBoolean">
            <summary>Sets the shim of Cache.set_CacheDisabled(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheLocationGet">
            <summary>Sets the shim of Cache.get_CacheLocation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheLocationSetString">
            <summary>Sets the shim of Cache.set_CacheLocation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheSizeLimitGet">
            <summary>Sets the shim of Cache.get_CacheSizeLimit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheSizeLimitSetInt64">
            <summary>Sets the shim of Cache.set_CacheSizeLimit(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheTimeoutGet">
            <summary>Sets the shim of Cache.get_CacheTimeout()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.CacheTimeoutSetTimeSpan">
            <summary>Sets the shim of Cache.set_CacheTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.FlushCache">
            <summary>Sets the shim of Cache.FlushCache()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.FlushCacheUri">
            <summary>Sets the shim of Cache.FlushCache(Uri url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.ResponsesGet">
            <summary>Sets the shim of Cache.get_Responses()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCache.StaticConstructor">
            <summary>Sets the shim of Cache.Cache()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCacheException">
            <summary>Shim type of FlickrNet.CacheException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheException.#ctor(FlickrNet.CacheException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheException.Constructor">
            <summary>Sets the shim of CacheException.CacheException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheException.ConstructorString">
            <summary>Sets the shim of CacheException.CacheException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheException.ConstructorStringException">
            <summary>Sets the shim of CacheException.CacheException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCacheException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCacheItemPersister">
            <summary>Shim type of FlickrNet.CacheItemPersister</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheItemPersister.#ctor(FlickrNet.CacheItemPersister)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheItemPersister.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCacheItemPersister.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheItemPersister.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCacheItemPersister.Constructor">
            <summary>Sets the shim of CacheItemPersister.CacheItemPersister()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCacheItemPersister.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCluster">
            <summary>Shim type of FlickrNet.Cluster</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCluster.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCluster.#ctor(FlickrNet.Cluster)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCluster.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCluster.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCluster.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.ClusterIdGet">
            <summary>Sets the shim of Cluster.get_ClusterId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.ClusterUrlGet">
            <summary>Sets the shim of Cluster.get_ClusterUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.Constructor">
            <summary>Sets the shim of Cluster.Cluster()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Cluster.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.SourceTagGet">
            <summary>Sets the shim of Cluster.get_SourceTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.SourceTagSetString">
            <summary>Sets the shim of Cluster.set_SourceTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.TagsGet">
            <summary>Sets the shim of Cluster.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.TagsSetCollectionOfString">
            <summary>Sets the shim of Cluster.set_Tags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.TotalTagsGet">
            <summary>Sets the shim of Cluster.get_TotalTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.TotalTagsSetInt32">
            <summary>Sets the shim of Cluster.set_TotalTags(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCluster.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.ClusterIdGet">
            <summary>Sets the shim of Cluster.get_ClusterId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.ClusterUrlGet">
            <summary>Sets the shim of Cluster.get_ClusterUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Cluster.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.SourceTagGet">
            <summary>Sets the shim of Cluster.get_SourceTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.SourceTagSetString">
            <summary>Sets the shim of Cluster.set_SourceTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.TagsGet">
            <summary>Sets the shim of Cluster.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.TagsSetCollectionOfString">
            <summary>Sets the shim of Cluster.set_Tags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.TotalTagsGet">
            <summary>Sets the shim of Cluster.get_TotalTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCluster.AllInstances.TotalTagsSetInt32">
            <summary>Sets the shim of Cluster.set_TotalTags(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimClusterCollection">
            <summary>Shim type of FlickrNet.ClusterCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.#ctor(FlickrNet.ClusterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Cluster})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Cluster})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.Generic.IList{FlickrNet.Cluster})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Cluster})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimClusterCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Cluster})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.Constructor">
            <summary>Sets the shim of ClusterCollection.ClusterCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ClusterCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.SourceTagGet">
            <summary>Sets the shim of ClusterCollection.get_SourceTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.SourceTagSetString">
            <summary>Sets the shim of ClusterCollection.set_SourceTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.TotalClustersGet">
            <summary>Sets the shim of ClusterCollection.get_TotalClusters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.TotalClustersSetInt32">
            <summary>Sets the shim of ClusterCollection.set_TotalClusters(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimClusterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ClusterCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.AllInstances.SourceTagGet">
            <summary>Sets the shim of ClusterCollection.get_SourceTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.AllInstances.SourceTagSetString">
            <summary>Sets the shim of ClusterCollection.set_SourceTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.AllInstances.TotalClustersGet">
            <summary>Sets the shim of ClusterCollection.get_TotalClusters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimClusterCollection.AllInstances.TotalClustersSetInt32">
            <summary>Sets the shim of ClusterCollection.set_TotalClusters(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollection">
            <summary>Shim type of FlickrNet.Collection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollection.#ctor(FlickrNet.Collection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.CollectionIdGet">
            <summary>Sets the shim of Collection.get_CollectionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.CollectionIdSetString">
            <summary>Sets the shim of Collection.set_CollectionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.CollectionsGet">
            <summary>Sets the shim of Collection.get_Collections()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.Constructor">
            <summary>Sets the shim of Collection.Collection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.DescriptionGet">
            <summary>Sets the shim of Collection.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.DescriptionSetString">
            <summary>Sets the shim of Collection.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Collection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.IconLargeGet">
            <summary>Sets the shim of Collection.get_IconLarge()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.IconLargeSetString">
            <summary>Sets the shim of Collection.set_IconLarge(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.IconSmallGet">
            <summary>Sets the shim of Collection.get_IconSmall()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.IconSmallSetString">
            <summary>Sets the shim of Collection.set_IconSmall(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.SetsGet">
            <summary>Sets the shim of Collection.get_Sets()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.TitleGet">
            <summary>Sets the shim of Collection.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.TitleSetString">
            <summary>Sets the shim of Collection.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.UrlGet">
            <summary>Sets the shim of Collection.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.UrlSetString">
            <summary>Sets the shim of Collection.set_Url(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.CollectionIdGet">
            <summary>Sets the shim of Collection.get_CollectionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.CollectionIdSetString">
            <summary>Sets the shim of Collection.set_CollectionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.CollectionsGet">
            <summary>Sets the shim of Collection.get_Collections()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.DescriptionGet">
            <summary>Sets the shim of Collection.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Collection.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Collection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.IconLargeGet">
            <summary>Sets the shim of Collection.get_IconLarge()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.IconLargeSetString">
            <summary>Sets the shim of Collection.set_IconLarge(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.IconSmallGet">
            <summary>Sets the shim of Collection.get_IconSmall()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.IconSmallSetString">
            <summary>Sets the shim of Collection.set_IconSmall(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.SetsGet">
            <summary>Sets the shim of Collection.get_Sets()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.TitleGet">
            <summary>Sets the shim of Collection.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.TitleSetString">
            <summary>Sets the shim of Collection.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.UrlGet">
            <summary>Sets the shim of Collection.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollection.AllInstances.UrlSetString">
            <summary>Sets the shim of Collection.set_Url(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionCollection">
            <summary>Shim type of FlickrNet.CollectionCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.#ctor(FlickrNet.CollectionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Collection})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Collection})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.Generic.IList{FlickrNet.Collection})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Collection})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Collection})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionCollection.Constructor">
            <summary>Sets the shim of CollectionCollection.CollectionCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionInfo">
            <summary>Shim type of FlickrNet.CollectionInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionInfo.#ctor(FlickrNet.CollectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.ChildCountGet">
            <summary>Sets the shim of CollectionInfo.get_ChildCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.ChildCountSetInt32">
            <summary>Sets the shim of CollectionInfo.set_ChildCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.CollectionIdGet">
            <summary>Sets the shim of CollectionInfo.get_CollectionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.CollectionIdSetString">
            <summary>Sets the shim of CollectionInfo.set_CollectionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.Constructor">
            <summary>Sets the shim of CollectionInfo.CollectionInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.DateCreatedGet">
            <summary>Sets the shim of CollectionInfo.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.DateCreatedSetDateTime">
            <summary>Sets the shim of CollectionInfo.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.DescriptionGet">
            <summary>Sets the shim of CollectionInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.DescriptionSetString">
            <summary>Sets the shim of CollectionInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.IconLargeGet">
            <summary>Sets the shim of CollectionInfo.get_IconLarge()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.IconLargeSetString">
            <summary>Sets the shim of CollectionInfo.set_IconLarge(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.IconPhotosGet">
            <summary>Sets the shim of CollectionInfo.get_IconPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.IconSmallGet">
            <summary>Sets the shim of CollectionInfo.get_IconSmall()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.IconSmallSetString">
            <summary>Sets the shim of CollectionInfo.set_IconSmall(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.SecretGet">
            <summary>Sets the shim of CollectionInfo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.SecretSetString">
            <summary>Sets the shim of CollectionInfo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.ServerGet">
            <summary>Sets the shim of CollectionInfo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.ServerSetString">
            <summary>Sets the shim of CollectionInfo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.TitleGet">
            <summary>Sets the shim of CollectionInfo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.TitleSetString">
            <summary>Sets the shim of CollectionInfo.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.ChildCountGet">
            <summary>Sets the shim of CollectionInfo.get_ChildCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.ChildCountSetInt32">
            <summary>Sets the shim of CollectionInfo.set_ChildCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.CollectionIdGet">
            <summary>Sets the shim of CollectionInfo.get_CollectionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.CollectionIdSetString">
            <summary>Sets the shim of CollectionInfo.set_CollectionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.DateCreatedGet">
            <summary>Sets the shim of CollectionInfo.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of CollectionInfo.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.DescriptionSetString">
            <summary>Sets the shim of CollectionInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.IconLargeGet">
            <summary>Sets the shim of CollectionInfo.get_IconLarge()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.IconLargeSetString">
            <summary>Sets the shim of CollectionInfo.set_IconLarge(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.IconPhotosGet">
            <summary>Sets the shim of CollectionInfo.get_IconPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.IconSmallGet">
            <summary>Sets the shim of CollectionInfo.get_IconSmall()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.IconSmallSetString">
            <summary>Sets the shim of CollectionInfo.set_IconSmall(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.SecretGet">
            <summary>Sets the shim of CollectionInfo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.SecretSetString">
            <summary>Sets the shim of CollectionInfo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.ServerGet">
            <summary>Sets the shim of CollectionInfo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.ServerSetString">
            <summary>Sets the shim of CollectionInfo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.TitleGet">
            <summary>Sets the shim of CollectionInfo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionInfo.AllInstances.TitleSetString">
            <summary>Sets the shim of CollectionInfo.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionSet">
            <summary>Shim type of FlickrNet.CollectionSet</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionSet.#ctor(FlickrNet.CollectionSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCollectionSet.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.Constructor">
            <summary>Sets the shim of CollectionSet.CollectionSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.DescriptionGet">
            <summary>Sets the shim of CollectionSet.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.DescriptionSetString">
            <summary>Sets the shim of CollectionSet.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionSet.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.SetIdGet">
            <summary>Sets the shim of CollectionSet.get_SetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.SetIdSetString">
            <summary>Sets the shim of CollectionSet.set_SetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.TitleGet">
            <summary>Sets the shim of CollectionSet.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.TitleSetString">
            <summary>Sets the shim of CollectionSet.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCollectionSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionSet.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.DescriptionSetString">
            <summary>Sets the shim of CollectionSet.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CollectionSet.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.SetIdGet">
            <summary>Sets the shim of CollectionSet.get_SetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.SetIdSetString">
            <summary>Sets the shim of CollectionSet.set_SetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.TitleGet">
            <summary>Sets the shim of CollectionSet.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCollectionSet.AllInstances.TitleSetString">
            <summary>Sets the shim of CollectionSet.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContact">
            <summary>Shim type of FlickrNet.Contact</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContact.#ctor(FlickrNet.Contact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContact.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.BuddyIconUrlGet">
            <summary>Sets the shim of Contact.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.Constructor">
            <summary>Sets the shim of Contact.Contact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Contact.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IconFarmGet">
            <summary>Sets the shim of Contact.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IconFarmSetString">
            <summary>Sets the shim of Contact.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IconServerGet">
            <summary>Sets the shim of Contact.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IconServerSetString">
            <summary>Sets the shim of Contact.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsFamilyGet">
            <summary>Sets the shim of Contact.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsFamilySetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsFriendGet">
            <summary>Sets the shim of Contact.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsFriendSetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsIgnoredGet">
            <summary>Sets the shim of Contact.get_IsIgnored()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.IsIgnoredSetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsIgnored(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.LocationGet">
            <summary>Sets the shim of Contact.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.LocationSetString">
            <summary>Sets the shim of Contact.set_Location(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.PathAliasGet">
            <summary>Sets the shim of Contact.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.PathAliasSetString">
            <summary>Sets the shim of Contact.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.PhotosUploadedGet">
            <summary>Sets the shim of Contact.get_PhotosUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.PhotosUploadedSetNullableOfInt32">
            <summary>Sets the shim of Contact.set_PhotosUploaded(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.RealNameGet">
            <summary>Sets the shim of Contact.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.RealNameSetString">
            <summary>Sets the shim of Contact.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.UserIdGet">
            <summary>Sets the shim of Contact.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.UserIdSetString">
            <summary>Sets the shim of Contact.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.UserNameGet">
            <summary>Sets the shim of Contact.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.UserNameSetString">
            <summary>Sets the shim of Contact.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.BuddyIconUrlGet">
            <summary>Sets the shim of Contact.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Contact.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IconFarmGet">
            <summary>Sets the shim of Contact.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IconFarmSetString">
            <summary>Sets the shim of Contact.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IconServerGet">
            <summary>Sets the shim of Contact.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IconServerSetString">
            <summary>Sets the shim of Contact.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsFamilyGet">
            <summary>Sets the shim of Contact.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsFamilySetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsFriendGet">
            <summary>Sets the shim of Contact.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsFriendSetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsIgnoredGet">
            <summary>Sets the shim of Contact.get_IsIgnored()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.IsIgnoredSetNullableOfBoolean">
            <summary>Sets the shim of Contact.set_IsIgnored(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.LocationGet">
            <summary>Sets the shim of Contact.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.LocationSetString">
            <summary>Sets the shim of Contact.set_Location(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.PathAliasGet">
            <summary>Sets the shim of Contact.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.PathAliasSetString">
            <summary>Sets the shim of Contact.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.PhotosUploadedGet">
            <summary>Sets the shim of Contact.get_PhotosUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.PhotosUploadedSetNullableOfInt32">
            <summary>Sets the shim of Contact.set_PhotosUploaded(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.RealNameGet">
            <summary>Sets the shim of Contact.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.RealNameSetString">
            <summary>Sets the shim of Contact.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.UserIdGet">
            <summary>Sets the shim of Contact.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.UserIdSetString">
            <summary>Sets the shim of Contact.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.UserNameGet">
            <summary>Sets the shim of Contact.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContact.AllInstances.UserNameSetString">
            <summary>Sets the shim of Contact.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContactCollection">
            <summary>Shim type of FlickrNet.ContactCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.#ctor(FlickrNet.ContactCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Contact})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Contact})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.Generic.IList{FlickrNet.Contact})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Contact})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContactCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Contact})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.Constructor">
            <summary>Sets the shim of ContactCollection.ContactCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ContactCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PageGet">
            <summary>Sets the shim of ContactCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PageSetInt32">
            <summary>Sets the shim of ContactCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PagesGet">
            <summary>Sets the shim of ContactCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PagesSetInt32">
            <summary>Sets the shim of ContactCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PerPageGet">
            <summary>Sets the shim of ContactCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.PerPageSetInt32">
            <summary>Sets the shim of ContactCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.TotalGet">
            <summary>Sets the shim of ContactCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.TotalSetInt32">
            <summary>Sets the shim of ContactCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContactCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ContactCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PageGet">
            <summary>Sets the shim of ContactCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of ContactCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PagesGet">
            <summary>Sets the shim of ContactCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of ContactCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of ContactCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of ContactCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.TotalGet">
            <summary>Sets the shim of ContactCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContactCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of ContactCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContext">
            <summary>Shim type of FlickrNet.Context</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContext.#ctor(FlickrNet.Context)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContext.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.Constructor">
            <summary>Sets the shim of Context.Context()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.CountGet">
            <summary>Sets the shim of Context.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.CountSetInt32">
            <summary>Sets the shim of Context.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Context.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.NextPhotoGet">
            <summary>Sets the shim of Context.get_NextPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.NextPhotoSetContextPhoto">
            <summary>Sets the shim of Context.set_NextPhoto(ContextPhoto value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.PreviousPhotoGet">
            <summary>Sets the shim of Context.get_PreviousPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.PreviousPhotoSetContextPhoto">
            <summary>Sets the shim of Context.set_PreviousPhoto(ContextPhoto value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.CountGet">
            <summary>Sets the shim of Context.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.CountSetInt32">
            <summary>Sets the shim of Context.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Context.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.NextPhotoGet">
            <summary>Sets the shim of Context.get_NextPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.NextPhotoSetContextPhoto">
            <summary>Sets the shim of Context.set_NextPhoto(ContextPhoto value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.PreviousPhotoGet">
            <summary>Sets the shim of Context.get_PreviousPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContext.AllInstances.PreviousPhotoSetContextPhoto">
            <summary>Sets the shim of Context.set_PreviousPhoto(ContextPhoto value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextGroup">
            <summary>Shim type of FlickrNet.ContextGroup</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextGroup.#ctor(FlickrNet.ContextGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.Constructor">
            <summary>Sets the shim of ContextGroup.ContextGroup()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.GroupIdGet">
            <summary>Sets the shim of ContextGroup.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.GroupIdSetString">
            <summary>Sets the shim of ContextGroup.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.TitleGet">
            <summary>Sets the shim of ContextGroup.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.TitleSetString">
            <summary>Sets the shim of ContextGroup.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.AllInstances.GroupIdGet">
            <summary>Sets the shim of ContextGroup.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.AllInstances.GroupIdSetString">
            <summary>Sets the shim of ContextGroup.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.AllInstances.TitleGet">
            <summary>Sets the shim of ContextGroup.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextGroup.AllInstances.TitleSetString">
            <summary>Sets the shim of ContextGroup.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextPhoto">
            <summary>Shim type of FlickrNet.ContextPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextPhoto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextPhoto.#ctor(FlickrNet.ContextPhoto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextPhoto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextPhoto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextPhoto.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.Constructor">
            <summary>Sets the shim of ContextPhoto.ContextPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.FarmGet">
            <summary>Sets the shim of ContextPhoto.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.FarmSetString">
            <summary>Sets the shim of ContextPhoto.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ContextPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.MediaTypeGet">
            <summary>Sets the shim of ContextPhoto.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.MediaTypeSetMediaType">
            <summary>Sets the shim of ContextPhoto.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.PhotoIdGet">
            <summary>Sets the shim of ContextPhoto.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.PhotoIdSetString">
            <summary>Sets the shim of ContextPhoto.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.SecretGet">
            <summary>Sets the shim of ContextPhoto.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.SecretSetString">
            <summary>Sets the shim of ContextPhoto.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.ServerGet">
            <summary>Sets the shim of ContextPhoto.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.ServerSetString">
            <summary>Sets the shim of ContextPhoto.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.ThumbnailUrlGet">
            <summary>Sets the shim of ContextPhoto.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.ThumbnailUrlSetString">
            <summary>Sets the shim of ContextPhoto.set_ThumbnailUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.TitleGet">
            <summary>Sets the shim of ContextPhoto.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.TitleSetString">
            <summary>Sets the shim of ContextPhoto.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.UrlGet">
            <summary>Sets the shim of ContextPhoto.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.UrlSetString">
            <summary>Sets the shim of ContextPhoto.set_Url(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextPhoto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.FarmGet">
            <summary>Sets the shim of ContextPhoto.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.FarmSetString">
            <summary>Sets the shim of ContextPhoto.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ContextPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.MediaTypeGet">
            <summary>Sets the shim of ContextPhoto.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.MediaTypeSetMediaType">
            <summary>Sets the shim of ContextPhoto.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.PhotoIdGet">
            <summary>Sets the shim of ContextPhoto.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of ContextPhoto.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.SecretGet">
            <summary>Sets the shim of ContextPhoto.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.SecretSetString">
            <summary>Sets the shim of ContextPhoto.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.ServerGet">
            <summary>Sets the shim of ContextPhoto.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.ServerSetString">
            <summary>Sets the shim of ContextPhoto.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.ThumbnailUrlGet">
            <summary>Sets the shim of ContextPhoto.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.ThumbnailUrlSetString">
            <summary>Sets the shim of ContextPhoto.set_ThumbnailUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.TitleGet">
            <summary>Sets the shim of ContextPhoto.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.TitleSetString">
            <summary>Sets the shim of ContextPhoto.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.UrlGet">
            <summary>Sets the shim of ContextPhoto.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextPhoto.AllInstances.UrlSetString">
            <summary>Sets the shim of ContextPhoto.set_Url(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextSet">
            <summary>Shim type of FlickrNet.ContextSet</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextSet.#ctor(FlickrNet.ContextSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimContextSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.Constructor">
            <summary>Sets the shim of ContextSet.ContextSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.PhotosetIdGet">
            <summary>Sets the shim of ContextSet.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.PhotosetIdSetString">
            <summary>Sets the shim of ContextSet.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.TitleGet">
            <summary>Sets the shim of ContextSet.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.TitleSetString">
            <summary>Sets the shim of ContextSet.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimContextSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.AllInstances.PhotosetIdGet">
            <summary>Sets the shim of ContextSet.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.AllInstances.PhotosetIdSetString">
            <summary>Sets the shim of ContextSet.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.AllInstances.TitleGet">
            <summary>Sets the shim of ContextSet.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimContextSet.AllInstances.TitleSetString">
            <summary>Sets the shim of ContextSet.set_Title(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCsvFile">
            <summary>Shim type of FlickrNet.CsvFile</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFile.#ctor(FlickrNet.CsvFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFile.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.Constructor">
            <summary>Sets the shim of CsvFile.CsvFile()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.DateGet">
            <summary>Sets the shim of CsvFile.get_Date()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.DateSetDateTime">
            <summary>Sets the shim of CsvFile.set_Date(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CsvFile.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.HrefGet">
            <summary>Sets the shim of CsvFile.get_Href()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.HrefSetString">
            <summary>Sets the shim of CsvFile.set_Href(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.TypeGet">
            <summary>Sets the shim of CsvFile.get_Type()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.TypeSetString">
            <summary>Sets the shim of CsvFile.set_Type(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCsvFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.DateGet">
            <summary>Sets the shim of CsvFile.get_Date()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.DateSetDateTime">
            <summary>Sets the shim of CsvFile.set_Date(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CsvFile.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.HrefGet">
            <summary>Sets the shim of CsvFile.get_Href()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.HrefSetString">
            <summary>Sets the shim of CsvFile.set_Href(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.TypeGet">
            <summary>Sets the shim of CsvFile.get_Type()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFile.AllInstances.TypeSetString">
            <summary>Sets the shim of CsvFile.set_Type(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCsvFileCollection">
            <summary>Shim type of FlickrNet.CsvFileCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.#ctor(FlickrNet.CsvFileCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.CsvFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.CsvFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.Generic.IList{FlickrNet.CsvFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.CsvFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimCsvFileCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.CsvFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFileCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFileCollection.Constructor">
            <summary>Sets the shim of CsvFileCollection.CsvFileCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFileCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CsvFileCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimCsvFileCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimCsvFileCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of CsvFileCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimEchoResponseDictionary">
            <summary>Shim type of FlickrNet.EchoResponseDictionary</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.#ctor(FlickrNet.EchoResponseDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimEchoResponseDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimEchoResponseDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimEchoResponseDictionary.Constructor">
            <summary>Sets the shim of EchoResponseDictionary.EchoResponseDictionary()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimEchoResponseDictionary.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of EchoResponseDictionary.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimEchoResponseDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimEchoResponseDictionary.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of EchoResponseDictionary.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimExceptionHandler">
            <summary>Shim type of FlickrNet.ExceptionHandler</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExceptionHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExceptionHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExceptionHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExceptionHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExceptionHandler.CreateExceptionFromMessageInt32String">
            <summary>Sets the shim of ExceptionHandler.CreateExceptionFromMessage(Int32 code, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExceptionHandler.CreateExceptionInt32String">
            <summary>Sets the shim of ExceptionHandler.CreateException(Int32 code, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExceptionHandler.CreateResponseExceptionXmlReader">
            <summary>Sets the shim of ExceptionHandler.CreateResponseException(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimExifTag">
            <summary>Shim type of FlickrNet.ExifTag</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTag.#ctor(FlickrNet.ExifTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTag.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.CleanGet">
            <summary>Sets the shim of ExifTag.get_Clean()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.CleanOrRawGet">
            <summary>Sets the shim of ExifTag.get_CleanOrRaw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.CleanSetString">
            <summary>Sets the shim of ExifTag.set_Clean(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.Constructor">
            <summary>Sets the shim of ExifTag.ExifTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ExifTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.LabelGet">
            <summary>Sets the shim of ExifTag.get_Label()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.LabelSetString">
            <summary>Sets the shim of ExifTag.set_Label(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.RawGet">
            <summary>Sets the shim of ExifTag.get_Raw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.RawSetString">
            <summary>Sets the shim of ExifTag.set_Raw(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagGet">
            <summary>Sets the shim of ExifTag.get_Tag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagSetString">
            <summary>Sets the shim of ExifTag.set_Tag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagSpaceGet">
            <summary>Sets the shim of ExifTag.get_TagSpace()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagSpaceIdGet">
            <summary>Sets the shim of ExifTag.get_TagSpaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagSpaceIdSetInt32">
            <summary>Sets the shim of ExifTag.set_TagSpaceId(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.TagSpaceSetString">
            <summary>Sets the shim of ExifTag.set_TagSpace(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimExifTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.CleanGet">
            <summary>Sets the shim of ExifTag.get_Clean()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.CleanOrRawGet">
            <summary>Sets the shim of ExifTag.get_CleanOrRaw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.CleanSetString">
            <summary>Sets the shim of ExifTag.set_Clean(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ExifTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.LabelGet">
            <summary>Sets the shim of ExifTag.get_Label()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.LabelSetString">
            <summary>Sets the shim of ExifTag.set_Label(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.RawGet">
            <summary>Sets the shim of ExifTag.get_Raw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.RawSetString">
            <summary>Sets the shim of ExifTag.set_Raw(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagGet">
            <summary>Sets the shim of ExifTag.get_Tag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagSetString">
            <summary>Sets the shim of ExifTag.set_Tag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagSpaceGet">
            <summary>Sets the shim of ExifTag.get_TagSpace()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagSpaceIdGet">
            <summary>Sets the shim of ExifTag.get_TagSpaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagSpaceIdSetInt32">
            <summary>Sets the shim of ExifTag.set_TagSpaceId(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTag.AllInstances.TagSpaceSetString">
            <summary>Sets the shim of ExifTag.set_TagSpace(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimExifTagCollection">
            <summary>Shim type of FlickrNet.ExifTagCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.#ctor(FlickrNet.ExifTagCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.ExifTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.ExifTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.Generic.IList{FlickrNet.ExifTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.ExifTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimExifTagCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.ExifTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.CameraGet">
            <summary>Sets the shim of ExifTagCollection.get_Camera()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.CameraSetString">
            <summary>Sets the shim of ExifTagCollection.set_Camera(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.Constructor">
            <summary>Sets the shim of ExifTagCollection.ExifTagCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.FarmGet">
            <summary>Sets the shim of ExifTagCollection.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.FarmSetString">
            <summary>Sets the shim of ExifTagCollection.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ExifTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.PhotoIdGet">
            <summary>Sets the shim of ExifTagCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.PhotoIdSetString">
            <summary>Sets the shim of ExifTagCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.SecretGet">
            <summary>Sets the shim of ExifTagCollection.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.SecretSetString">
            <summary>Sets the shim of ExifTagCollection.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.ServerGet">
            <summary>Sets the shim of ExifTagCollection.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.ServerSetString">
            <summary>Sets the shim of ExifTagCollection.set_Server(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimExifTagCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.CameraGet">
            <summary>Sets the shim of ExifTagCollection.get_Camera()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.CameraSetString">
            <summary>Sets the shim of ExifTagCollection.set_Camera(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.FarmGet">
            <summary>Sets the shim of ExifTagCollection.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.FarmSetString">
            <summary>Sets the shim of ExifTagCollection.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ExifTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.PhotoIdGet">
            <summary>Sets the shim of ExifTagCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of ExifTagCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.SecretGet">
            <summary>Sets the shim of ExifTagCollection.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.SecretSetString">
            <summary>Sets the shim of ExifTagCollection.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.ServerGet">
            <summary>Sets the shim of ExifTagCollection.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimExifTagCollection.AllInstances.ServerSetString">
            <summary>Sets the shim of ExifTagCollection.set_Server(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFavoriteContext">
            <summary>Shim type of FlickrNet.FavoriteContext</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContext.#ctor(FlickrNet.FavoriteContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContext.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.Constructor">
            <summary>Sets the shim of FavoriteContext.FavoriteContext()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.CountGet">
            <summary>Sets the shim of FavoriteContext.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.CountSetInt32">
            <summary>Sets the shim of FavoriteContext.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FavoriteContext.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.NextPhotosGet">
            <summary>Sets the shim of FavoriteContext.get_NextPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.NextPhotosSetCollectionOfFavoriteContextPhoto">
            <summary>Sets the shim of FavoriteContext.set_NextPhotos(Collection`1&lt;FavoriteContextPhoto&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.PreviousPhotosGet">
            <summary>Sets the shim of FavoriteContext.get_PreviousPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.PreviousPhotosSetCollectionOfFavoriteContextPhoto">
            <summary>Sets the shim of FavoriteContext.set_PreviousPhotos(Collection`1&lt;FavoriteContextPhoto&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFavoriteContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.CountGet">
            <summary>Sets the shim of FavoriteContext.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.CountSetInt32">
            <summary>Sets the shim of FavoriteContext.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FavoriteContext.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.NextPhotosGet">
            <summary>Sets the shim of FavoriteContext.get_NextPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.NextPhotosSetCollectionOfFavoriteContextPhoto">
            <summary>Sets the shim of FavoriteContext.set_NextPhotos(Collection`1&lt;FavoriteContextPhoto&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.PreviousPhotosGet">
            <summary>Sets the shim of FavoriteContext.get_PreviousPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContext.AllInstances.PreviousPhotosSetCollectionOfFavoriteContextPhoto">
            <summary>Sets the shim of FavoriteContext.set_PreviousPhotos(Collection`1&lt;FavoriteContextPhoto&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFavoriteContextPhoto">
            <summary>Shim type of FlickrNet.FavoriteContextPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContextPhoto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContextPhoto.#ctor(FlickrNet.FavoriteContextPhoto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContextPhoto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContextPhoto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFavoriteContextPhoto.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.Constructor">
            <summary>Sets the shim of FavoriteContextPhoto.FavoriteContextPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.FavoriteThumbnailUrlGet">
            <summary>Sets the shim of FavoriteContextPhoto.get_FavoriteThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.FavoriteThumbnailUrlSetString">
            <summary>Sets the shim of FavoriteContextPhoto.set_FavoriteThumbnailUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.FavoriteUrlGet">
            <summary>Sets the shim of FavoriteContextPhoto.get_FavoriteUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.FavoriteUrlSetString">
            <summary>Sets the shim of FavoriteContextPhoto.set_FavoriteUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FavoriteContextPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances.FavoriteThumbnailUrlGet">
            <summary>Sets the shim of FavoriteContextPhoto.get_FavoriteThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances.FavoriteThumbnailUrlSetString">
            <summary>Sets the shim of FavoriteContextPhoto.set_FavoriteThumbnailUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances.FavoriteUrlGet">
            <summary>Sets the shim of FavoriteContextPhoto.get_FavoriteUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances.FavoriteUrlSetString">
            <summary>Sets the shim of FavoriteContextPhoto.set_FavoriteUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFavoriteContextPhoto.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FavoriteContextPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickr">
            <summary>Shim type of FlickrNet.Flickr</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.#ctor(FlickrNet.Flickr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.DoGetResponseAsyncOf1UriActionOfFlickrResultOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Uri,System.Action{FlickrNet.FlickrResult{``0}}})">
            <summary>Sets the shim of Flickr.DoGetResponseAsync(Uri url, Action`1&lt;FlickrResult`1&lt;!!0&gt;&gt; callback)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.GetResponseAsyncOf1DictionaryOfStringStringActionOfFlickrResultOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.Dictionary{System.String,System.String},System.Action{FlickrNet.FlickrResult{``0}}})">
            <summary>Sets the shim of Flickr.GetResponseAsync(Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;!!0&gt;&gt; callback)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.GetResponseCacheOf1DictionaryOfStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.Dictionary{System.String,System.String},``0})">
            <summary>Sets the shim of Flickr.GetResponseCache(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.GetResponseNoCacheOf1DictionaryOfStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.Dictionary{System.String,System.String},``0})">
            <summary>Sets the shim of Flickr.GetResponseNoCache(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.GetResponseOf1DictionaryOfStringStringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,``0})">
            <summary>Sets the shim of Flickr.GetResponse(Dictionary`2&lt;String,String&gt; parameters, TimeSpan cacheTimeout)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserCommentsAsyncInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserCommentsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserCommentsInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserComments(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotos">
            <summary>Sets the shim of Flickr.ActivityUserPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosAsyncActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosAsyncInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosAsyncInt32StringActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 timePeriod, String timeType, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosAsyncInt32StringInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 timePeriod, String timeType, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosAsyncStringInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(String timeframe, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosInt32String">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 timePeriod, String timeType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosInt32StringInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 timePeriod, String timeType, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ActivityUserPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(String timeframe, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ApiKeyGet">
            <summary>Sets the shim of Flickr.get_ApiKey()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ApiKeySetString">
            <summary>Sets the shim of Flickr.set_ApiKey(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ApiSecretGet">
            <summary>Sets the shim of Flickr.get_ApiSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ApiSecretSetString">
            <summary>Sets the shim of Flickr.set_ApiSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcRevokeUrlString">
            <summary>Sets the shim of Flickr.AuthCalcRevokeUrl(String appToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcUrlMobileStringAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcUrlMobile(String frob, AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcUrlStringAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcUrl(String frob, AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcWebUrlAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcWebUrl(AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcWebUrlAuthLevelString">
            <summary>Sets the shim of Flickr.AuthCalcWebUrl(AuthLevel authLevel, String extra)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCalcWebUrlMobileAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcWebUrlMobile(AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCheckToken">
            <summary>Sets the shim of Flickr.AuthCheckToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCheckTokenAsyncActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthCheckTokenAsync(Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCheckTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthCheckTokenAsync(String token, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthCheckTokenString">
            <summary>Sets the shim of Flickr.AuthCheckToken(String token)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetFrob">
            <summary>Sets the shim of Flickr.AuthGetFrob()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetFrobAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.AuthGetFrobAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetFullTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthGetFullTokenAsync(String miniToken, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetFullTokenString">
            <summary>Sets the shim of Flickr.AuthGetFullToken(String miniToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthGetTokenAsync(String frob, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthGetTokenString">
            <summary>Sets the shim of Flickr.AuthGetToken(String frob)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthOAuthCheckToken">
            <summary>Sets the shim of Flickr.AuthOAuthCheckToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthOAuthCheckTokenAsyncActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthOAuthCheckTokenAsync(Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthOAuthGetAccessToken">
            <summary>Sets the shim of Flickr.AuthOAuthGetAccessToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthOAuthGetAccessTokenAsyncActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.AuthOAuthGetAccessTokenAsync(Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthTokenGet">
            <summary>Sets the shim of Flickr.get_AuthToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthTokenSetString">
            <summary>Sets the shim of Flickr.set_AuthToken(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AuthUrlGet">
            <summary>Sets the shim of Flickr.get_AuthUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BaseUriGet">
            <summary>Sets the shim of Flickr.get_BaseUri()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsGetList">
            <summary>Sets the shim of Flickr.BlogsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsGetListAsyncActionOfFlickrResultOfBlogCollection">
            <summary>Sets the shim of Flickr.BlogsGetListAsync(Action`1&lt;FlickrResult`1&lt;BlogCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsGetServices">
            <summary>Sets the shim of Flickr.BlogsGetServices()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsGetServicesAsyncActionOfFlickrResultOfBlogServiceCollection">
            <summary>Sets the shim of Flickr.BlogsGetServicesAsync(Action`1&lt;FlickrResult`1&lt;BlogServiceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsPostPhotoAsyncStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.BlogsPostPhotoAsync(String blogId, String photoId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsPostPhotoAsyncStringStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.BlogsPostPhotoAsync(String blogId, String photoId, String title, String description, String blogPassword, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsPostPhotoStringStringStringString">
            <summary>Sets the shim of Flickr.BlogsPostPhoto(String blogId, String photoId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.BlogsPostPhotoStringStringStringStringString">
            <summary>Sets the shim of Flickr.BlogsPostPhoto(String blogId, String photoId, String title, String description, String blogPassword)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheDisabledGet">
            <summary>Sets the shim of Flickr.get_CacheDisabled()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheDisabledSetBoolean">
            <summary>Sets the shim of Flickr.set_CacheDisabled(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheLocationGet">
            <summary>Sets the shim of Flickr.get_CacheLocation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheLocationSetString">
            <summary>Sets the shim of Flickr.set_CacheLocation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheSizeLimitGet">
            <summary>Sets the shim of Flickr.get_CacheSizeLimit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheSizeLimitSetInt64">
            <summary>Sets the shim of Flickr.set_CacheSizeLimit(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheTimeoutGet">
            <summary>Sets the shim of Flickr.get_CacheTimeout()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CacheTimeoutSetTimeSpan">
            <summary>Sets the shim of Flickr.set_CacheTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CalculateAuthSignatureDictionaryOfStringString">
            <summary>Sets the shim of Flickr.CalculateAuthSignature(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CalculateUriDictionaryOfStringStringBoolean">
            <summary>Sets the shim of Flickr.CalculateUri(Dictionary`2&lt;String,String&gt; parameters, Boolean includeSignature)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CheckApiKey">
            <summary>Sets the shim of Flickr.CheckApiKey()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CheckRequiresAuthentication">
            <summary>Sets the shim of Flickr.CheckRequiresAuthentication()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CheckSigned">
            <summary>Sets the shim of Flickr.CheckSigned()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsEditMetaStringStringString">
            <summary>Sets the shim of Flickr.CollectionsEditMeta(String collectionId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsEditSetsStringIListOfString">
            <summary>Sets the shim of Flickr.CollectionsEditSets(String collectionId, IList`1&lt;String&gt; photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetInfoAsyncStringActionOfFlickrResultOfCollectionInfo">
            <summary>Sets the shim of Flickr.CollectionsGetInfoAsync(String collectionId, Action`1&lt;FlickrResult`1&lt;CollectionInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetInfoString">
            <summary>Sets the shim of Flickr.CollectionsGetInfo(String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetTree">
            <summary>Sets the shim of Flickr.CollectionsGetTree()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetTreeAsyncActionOfFlickrResultOfCollectionCollection">
            <summary>Sets the shim of Flickr.CollectionsGetTreeAsync(Action`1&lt;FlickrResult`1&lt;CollectionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetTreeAsyncStringStringActionOfFlickrResultOfCollectionCollection">
            <summary>Sets the shim of Flickr.CollectionsGetTreeAsync(String collectionId, String userId, Action`1&lt;FlickrResult`1&lt;CollectionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsGetTreeStringString">
            <summary>Sets the shim of Flickr.CollectionsGetTree(String collectionId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CollectionsRemoveSetStringString">
            <summary>Sets the shim of Flickr.CollectionsRemoveSet(String collectionId, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CommonsGetInstitutions">
            <summary>Sets the shim of Flickr.CommonsGetInstitutions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CommonsGetInstitutionsAsyncActionOfFlickrResultOfInstitutionCollection">
            <summary>Sets the shim of Flickr.CommonsGetInstitutionsAsync(Action`1&lt;FlickrResult`1&lt;InstitutionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.Constructor">
            <summary>Sets the shim of Flickr.Flickr()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ConstructorString">
            <summary>Sets the shim of Flickr.Flickr(String apiKey)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ConstructorStringString">
            <summary>Sets the shim of Flickr.Flickr(String apiKey, String sharedSecret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ConstructorStringStringString">
            <summary>Sets the shim of Flickr.Flickr(String apiKey, String sharedSecret, String token)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetList">
            <summary>Sets the shim of Flickr.ContactsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListAsyncInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListAsyncStringInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(String filter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploaded">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedAsyncDateTimeActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(DateTime dateLastUpdated, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedAsyncDateTimeStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(DateTime dateLastUpdated, String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedDateTime">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(DateTime dateLastUpdated)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedDateTimeString">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(DateTime dateLastUpdated, String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListRecentlyUploadedString">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListString">
            <summary>Sets the shim of Flickr.ContactsGetList(String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetList(String filter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetPublicListAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetPublicListAsync(String userId, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetPublicListAsyncStringInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetPublicListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetPublicListString">
            <summary>Sets the shim of Flickr.ContactsGetPublicList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetPublicListStringInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetPublicList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetTaggingSuggestions">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetTaggingSuggestionsAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestionsAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetTaggingSuggestionsAsyncInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestionsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ContactsGetTaggingSuggestionsInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestions(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ConvertNonSeekableStreamToByteArrayStream">
            <summary>Sets the shim of Flickr.ConvertNonSeekableStreamToByteArray(Stream nonSeekableStream)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CreateUploadDataStreamStringDictionaryOfStringStringString">
            <summary>Sets the shim of Flickr.CreateUploadData(Stream imageStream, String fileName, Dictionary`2&lt;String,String&gt; parameters, String boundary)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CurrentServiceGet">
            <summary>Sets the shim of Flickr.get_CurrentService()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.CurrentServiceSetSupportedService">
            <summary>Sets the shim of Flickr.set_CurrentService(SupportedService value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.DefaultServiceGet">
            <summary>Sets the shim of Flickr.get_DefaultService()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.DefaultServiceSetSupportedService">
            <summary>Sets the shim of Flickr.set_DefaultService(SupportedService value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesAddAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.FavoritesAddAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesAddString">
            <summary>Sets the shim of Flickr.FavoritesAdd(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextAsyncStringStringActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextAsyncStringStringInt32Int32ActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Int32 numPrevious, Int32 numNext, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextAsyncStringStringInt32Int32PhotoSearchExtrasActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Int32 numPrevious, Int32 numNext, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextAsyncStringStringPhotoSearchExtrasActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextStringString">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextStringStringInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, Int32 numPrevious, Int32 numNext)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextStringStringInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, Int32 numPrevious, Int32 numNext, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetContextStringStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetList">
            <summary>Sets the shim of Flickr.FavoritesGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncStringDateTimeDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetList(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListString">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListStringDateTimeDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetListStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetPublicListAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetPublicListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetPublicListAsyncStringDateTimeDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetPublicListAsync(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetPublicListString">
            <summary>Sets the shim of Flickr.FavoritesGetPublicList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesGetPublicListStringDateTimeDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetPublicList(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesRemoveAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.FavoritesRemoveAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FavoritesRemoveString">
            <summary>Sets the shim of Flickr.FavoritesRemove(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FlushCache">
            <summary>Sets the shim of Flickr.FlushCache()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FlushCacheString">
            <summary>Sets the shim of Flickr.FlushCache(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.FlushCacheUri">
            <summary>Sets the shim of Flickr.FlushCache(Uri url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesAddPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesAddPhotoAsync(String galleryId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesAddPhotoAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesAddPhotoAsync(String galleryId, String photoId, String comment, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesAddPhotoStringString">
            <summary>Sets the shim of Flickr.GalleriesAddPhoto(String galleryId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesAddPhotoStringStringString">
            <summary>Sets the shim of Flickr.GalleriesAddPhoto(String galleryId, String photoId, String comment)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesCreateAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesCreateAsync(String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesCreateAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesCreateAsync(String title, String description, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesCreateStringString">
            <summary>Sets the shim of Flickr.GalleriesCreate(String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesCreateStringStringString">
            <summary>Sets the shim of Flickr.GalleriesCreate(String title, String description, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditMetaAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditMetaAsync(String galleryId, String title, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditMetaAsync(String galleryId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditMetaStringString">
            <summary>Sets the shim of Flickr.GalleriesEditMeta(String galleryId, String title)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditMetaStringStringString">
            <summary>Sets the shim of Flickr.GalleriesEditMeta(String galleryId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditPhotoAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditPhotoAsync(String galleryId, String photoId, String comment, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditPhotoStringStringString">
            <summary>Sets the shim of Flickr.GalleriesEditPhoto(String galleryId, String photoId, String comment)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditPhotosAsyncStringStringIEnumerableOfStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditPhotosAsync(String galleryId, String primaryPhotoId, IEnumerable`1&lt;String&gt; photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesEditPhotosStringStringIEnumerableOfString">
            <summary>Sets the shim of Flickr.GalleriesEditPhotos(String galleryId, String primaryPhotoId, IEnumerable`1&lt;String&gt; photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetInfoAsyncStringActionOfFlickrResultOfGallery">
            <summary>Sets the shim of Flickr.GalleriesGetInfoAsync(String galleryId, Action`1&lt;FlickrResult`1&lt;Gallery&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetInfoString">
            <summary>Sets the shim of Flickr.GalleriesGetInfo(String galleryId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetList">
            <summary>Sets the shim of Flickr.GalleriesGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListAsyncActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListAsyncInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListAsyncStringActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListAsyncStringInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListForPhotoAsyncStringActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhotoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListForPhotoAsyncStringInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhotoAsync(String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListForPhotoString">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhoto(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListForPhotoStringInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhoto(String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListString">
            <summary>Sets the shim of Flickr.GalleriesGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetPhotosAsyncStringActionOfFlickrResultOfGalleryPhotoCollection">
            <summary>Sets the shim of Flickr.GalleriesGetPhotosAsync(String galleryId, Action`1&lt;FlickrResult`1&lt;GalleryPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfGalleryPhotoCollection">
            <summary>Sets the shim of Flickr.GalleriesGetPhotosAsync(String galleryId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;GalleryPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetPhotosString">
            <summary>Sets the shim of Flickr.GalleriesGetPhotos(String galleryId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GalleriesGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.GalleriesGetPhotos(String galleryId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsBrowse">
            <summary>Sets the shim of Flickr.GroupsBrowse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsBrowseAsyncActionOfFlickrResultOfGroupCategory">
            <summary>Sets the shim of Flickr.GroupsBrowseAsync(Action`1&lt;FlickrResult`1&lt;GroupCategory&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsBrowseAsyncStringActionOfFlickrResultOfGroupCategory">
            <summary>Sets the shim of Flickr.GroupsBrowseAsync(String catId, Action`1&lt;FlickrResult`1&lt;GroupCategory&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsBrowseString">
            <summary>Sets the shim of Flickr.GroupsBrowse(String catId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesAddAsync(String topicId, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesAddStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesAdd(String topicId, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesDeleteAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesDeleteAsync(String topicId, String replyId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesDeleteStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesDelete(String topicId, String replyId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesEditAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesEditAsync(String topicId, String replyId, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesEditStringStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesEdit(String topicId, String replyId, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesGetInfoAsyncStringStringActionOfFlickrResultOfTopicReply">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetInfoAsync(String topicId, String replyId, Action`1&lt;FlickrResult`1&lt;TopicReply&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesGetInfoStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetInfo(String topicId, String replyId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesGetListAsyncStringInt32Int32ActionOfFlickrResultOfTopicReplyCollection">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetListAsync(String topicId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;TopicReplyCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussRepliesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetList(String topicId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsAddAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsAddAsync(String groupId, String subject, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsAddStringStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsAdd(String groupId, String subject, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsGetInfoAsyncStringActionOfFlickrResultOfTopic">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetInfoAsync(String topicId, Action`1&lt;FlickrResult`1&lt;Topic&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsGetInfoString">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetInfo(String topicId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsGetListAsyncStringInt32Int32ActionOfFlickrResultOfTopicCollection">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetListAsync(String groupId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;TopicCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsDiscussTopicsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetList(String groupId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsGetInfoAsyncStringActionOfFlickrResultOfGroupFullInfo">
            <summary>Sets the shim of Flickr.GroupsGetInfoAsync(String groupId, Action`1&lt;FlickrResult`1&lt;GroupFullInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsGetInfoString">
            <summary>Sets the shim of Flickr.GroupsGetInfo(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinAsync(String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinAsyncStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinAsync(String groupId, Boolean acceptsRules, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinRequestAsyncStringStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinRequestAsync(String groupId, String message, Boolean acceptRules, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinRequestStringStringBoolean">
            <summary>Sets the shim of Flickr.GroupsJoinRequest(String groupId, String message, Boolean acceptRules)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinString">
            <summary>Sets the shim of Flickr.GroupsJoin(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsJoinStringBoolean">
            <summary>Sets the shim of Flickr.GroupsJoin(String groupId, Boolean acceptRules)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsLeaveAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsLeaveAsync(String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsLeaveAsyncStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsLeaveAsync(String groupId, Boolean deletePhotos, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsLeaveString">
            <summary>Sets the shim of Flickr.GroupsLeave(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsLeaveStringBoolean">
            <summary>Sets the shim of Flickr.GroupsLeave(String groupId, Boolean deletePhotos)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsMembersGetListAsyncStringActionOfFlickrResultOfMemberCollection">
            <summary>Sets the shim of Flickr.GroupsMembersGetListAsync(String groupId, Action`1&lt;FlickrResult`1&lt;MemberCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsMembersGetListAsyncStringInt32Int32MemberTypesActionOfFlickrResultOfMemberCollection">
            <summary>Sets the shim of Flickr.GroupsMembersGetListAsync(String groupId, Int32 page, Int32 perPage, MemberTypes memberTypes, Action`1&lt;FlickrResult`1&lt;MemberCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsMembersGetListString">
            <summary>Sets the shim of Flickr.GroupsMembersGetList(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsMembersGetListStringInt32Int32MemberTypes">
            <summary>Sets the shim of Flickr.GroupsMembersGetList(String groupId, Int32 page, Int32 perPage, MemberTypes memberTypes)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsPoolsAddAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsAddStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsAdd(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetContextAsyncStringStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.GroupsPoolsGetContextAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetContextStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetContext(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetGroups">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetGroupsAsyncActionOfFlickrResultOfMemberGroupInfoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroupsAsync(Action`1&lt;FlickrResult`1&lt;MemberGroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetGroupsInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroups(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosAsyncStringStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosAsyncStringStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosAsyncStringStringStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosStringStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsGetPhotosStringStringStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags, String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsRemoveAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsPoolsRemoveAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsPoolsRemoveStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsRemove(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchAsyncStringActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchAsyncStringInt32ActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Int32 page, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchAsyncStringInt32Int32ActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchString">
            <summary>Sets the shim of Flickr.GroupsSearch(String text)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchStringInt32">
            <summary>Sets the shim of Flickr.GroupsSearch(String text, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.GroupsSearchStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsSearch(String text, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.HttpTimeoutGet">
            <summary>Sets the shim of Flickr.get_HttpTimeout()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.HttpTimeoutSetInt32">
            <summary>Sets the shim of Flickr.set_HttpTimeout(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InstanceCacheDisabledGet">
            <summary>Sets the shim of Flickr.get_InstanceCacheDisabled()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InstanceCacheDisabledSetBoolean">
            <summary>Sets the shim of Flickr.set_InstanceCacheDisabled(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetList">
            <summary>Sets the shim of Flickr.InterestingnessGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListAsyncDateTimeActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(DateTime date, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListDateTime">
            <summary>Sets the shim of Flickr.InterestingnessGetList(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.InterestingnessGetList(DateTime date, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.InterestingnessGetListPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.InterestingnessGetList(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.IsAuthenticatedGet">
            <summary>Sets the shim of Flickr.get_IsAuthenticated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.LastRequestGet">
            <summary>Sets the shim of Flickr.get_LastRequest()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.LastResponseGet">
            <summary>Sets the shim of Flickr.get_LastResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespaces">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesAsyncActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesAsyncInt32Int32ActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesAsyncStringActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(String predicate, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesAsyncStringInt32Int32ActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesString">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetNamespacesStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairs">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsAsyncActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsAsyncInt32Int32ActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsAsyncStringStringActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsAsyncStringStringInt32Int32ActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPairsStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicates">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesAsyncActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesAsyncInt32Int32ActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesAsyncStringActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(String namespaceName, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesAsyncStringInt32Int32ActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(String namespaceName, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesString">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(String namespaceName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetPredicatesStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(String namespaceName, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesAsyncDateTimeActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(DateTime addedSince, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesAsyncDateTimeInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(DateTime addedSince, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesAsyncStringStringActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesAsyncStringStringDateTimeInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, DateTime addedSince, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesAsyncStringStringInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesDateTime">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(DateTime addedSince)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(DateTime addedSince, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesStringStringDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate, DateTime addedSince, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetRecentValuesStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetValuesAsyncStringStringActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetValuesAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetValuesAsyncStringStringInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetValuesAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetValuesStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetValues(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.MachineTagsGetValuesStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetValues(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthAccessTokenGet">
            <summary>Sets the shim of Flickr.get_OAuthAccessToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthAccessTokenSecretGet">
            <summary>Sets the shim of Flickr.get_OAuthAccessTokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthAccessTokenSecretSetString">
            <summary>Sets the shim of Flickr.set_OAuthAccessTokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthAccessTokenSetString">
            <summary>Sets the shim of Flickr.set_OAuthAccessToken(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthCalculateAuthorizationUrlStringAuthLevel">
            <summary>Sets the shim of Flickr.OAuthCalculateAuthorizationUrl(String requestToken, AuthLevel perms)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthCalculateAuthorizationUrlStringAuthLevelBoolean">
            <summary>Sets the shim of Flickr.OAuthCalculateAuthorizationUrl(String requestToken, AuthLevel perms, Boolean mobile)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthCalculateSignatureStringStringDictionaryOfStringStringString">
            <summary>Sets the shim of Flickr.OAuthCalculateSignature(String method, String url, Dictionary`2&lt;String,String&gt; parameters, String tokenSecret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetAccessTokenAsyncOAuthRequestTokenStringActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.OAuthGetAccessTokenAsync(OAuthRequestToken requestToken, String verifier, Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetAccessTokenAsyncStringStringStringActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.OAuthGetAccessTokenAsync(String requestToken, String requestTokenSecret, String verifier, Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetAccessTokenOAuthRequestTokenString">
            <summary>Sets the shim of Flickr.OAuthGetAccessToken(OAuthRequestToken requestToken, String verifier)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetAccessTokenStringStringString">
            <summary>Sets the shim of Flickr.OAuthGetAccessToken(String requestToken, String requestTokenSecret, String verifier)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetBasicParameters">
            <summary>Sets the shim of Flickr.OAuthGetBasicParameters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetBasicParametersDictionaryOfStringString">
            <summary>Sets the shim of Flickr.OAuthGetBasicParameters(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetRequestTokenAsyncStringActionOfFlickrResultOfOAuthRequestToken">
            <summary>Sets the shim of Flickr.OAuthGetRequestTokenAsync(String callbackUrl, Action`1&lt;FlickrResult`1&lt;OAuthRequestToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OAuthGetRequestTokenString">
            <summary>Sets the shim of Flickr.OAuthGetRequestToken(String callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OnUploadProgressAddEventHandlerOfUploadProgressEventArgs">
            <summary>Sets the shim of Flickr.add_OnUploadProgress(EventHandler`1&lt;UploadProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.OnUploadProgressRemoveEventHandlerOfUploadProgressEventArgs">
            <summary>Sets the shim of Flickr.remove_OnUploadProgress(EventHandler`1&lt;UploadProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetList">
            <summary>Sets the shim of Flickr.PandaGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetListAsyncActionOfFlickrResultOfStringArray">
            <summary>Sets the shim of Flickr.PandaGetListAsync(Action`1&lt;FlickrResult`1&lt;String[]&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosAsyncStringActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosString">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PandaGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleFindByEmailAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.PeopleFindByEmailAsync(String emailAddress, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleFindByEmailString">
            <summary>Sets the shim of Flickr.PeopleFindByEmail(String emailAddress)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleFindByUserNameAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.PeopleFindByUserNameAsync(String userName, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleFindByUserNameString">
            <summary>Sets the shim of Flickr.PeopleFindByUserName(String userName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetGroupsAsyncStringActionOfFlickrResultOfGroupInfoCollection">
            <summary>Sets the shim of Flickr.PeopleGetGroupsAsync(String userId, Action`1&lt;FlickrResult`1&lt;GroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetGroupsString">
            <summary>Sets the shim of Flickr.PeopleGetGroups(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetInfoAsyncStringActionOfFlickrResultOfPerson">
            <summary>Sets the shim of Flickr.PeopleGetInfoAsync(String userId, Action`1&lt;FlickrResult`1&lt;Person&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetInfoString">
            <summary>Sets the shim of Flickr.PeopleGetInfo(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetLimits">
            <summary>Sets the shim of Flickr.PeopleGetLimits()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetLimitsAsyncActionOfFlickrResultOfPersonLimits">
            <summary>Sets the shim of Flickr.PeopleGetLimitsAsync(Action`1&lt;FlickrResult`1&lt;PersonLimits&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotos">
            <summary>Sets the shim of Flickr.PeopleGetPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosAsyncStringSafetyLevelDateTimeDateTimeDateTimeDateTimeContentTypeSearchPrivacyFilterPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, SafetyLevel safeSearch, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, ContentTypeSearch contentType, PrivacyFilter privacyFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOf">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfAsyncActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfAsyncStringActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfAsyncStringInt32Int32ActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfString">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosOfStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosString">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPhotosStringSafetyLevelDateTimeDateTimeDateTimeDateTimeContentTypeSearchPrivacyFilterPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, SafetyLevel safeSearch, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, ContentTypeSearch contentType, PrivacyFilter privacyFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicGroupsAsyncStringActionOfFlickrResultOfGroupInfoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroupsAsync(String userId, Action`1&lt;FlickrResult`1&lt;GroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicGroupsString">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroups(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicGroupsStringNullableOfBoolean">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroups(String userId, Nullable`1&lt;Boolean&gt; includeInvitationOnly)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosAsyncStringInt32Int32SafetyLevelPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Int32 page, Int32 perPage, SafetyLevel safetyLevel, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosString">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetPublicPhotosStringInt32Int32SafetyLevelPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId, Int32 page, Int32 perPage, SafetyLevel safetyLevel, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetUploadStatus">
            <summary>Sets the shim of Flickr.PeopleGetUploadStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PeopleGetUploadStatusAsyncActionOfFlickrResultOfUserStatus">
            <summary>Sets the shim of Flickr.PeopleGetUploadStatusAsync(Action`1&lt;FlickrResult`1&lt;UserStatus&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosAddTagsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosAddTagsAsync(String photoId, String tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosAddTagsAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosAddTagsAsync(String photoId, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosAddTagsStringString">
            <summary>Sets the shim of Flickr.PhotosAddTags(String photoId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosAddTagsStringStringArray">
            <summary>Sets the shim of Flickr.PhotosAddTags(String photoId, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsAddCommentAsyncStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosCommentsAddCommentAsync(String photoId, String commentText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsAddCommentStringString">
            <summary>Sets the shim of Flickr.PhotosCommentsAddComment(String photoId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsDeleteCommentAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosCommentsDeleteCommentAsync(String commentId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsDeleteCommentString">
            <summary>Sets the shim of Flickr.PhotosCommentsDeleteComment(String commentId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsEditCommentAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosCommentsEditCommentAsync(String commentId, String commentText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsEditCommentStringString">
            <summary>Sets the shim of Flickr.PhotosCommentsEditComment(String commentId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetListAsyncStringActionOfFlickrResultOfPhotoCommentCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetListAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoCommentCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetListString">
            <summary>Sets the shim of Flickr.PhotosCommentsGetList(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContacts">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(DateTime dateLastComment, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsAsyncDateTimeStringArrayPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(DateTime dateLastComment, String[] contactsFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(DateTime dateLastComment, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsDateTimeStringArrayPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(DateTime dateLastComment, String[] contactsFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosCommentsGetRecentForContactsInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosDeleteAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosDeleteString">
            <summary>Sets the shim of Flickr.PhotosDelete(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoBatchCorrectLocationAsyncDoubleDoubleGeoAccuracyStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoBatchCorrectLocationAsync(Double latitude, Double longitude, GeoAccuracy accuracy, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoBatchCorrectLocationDoubleDoubleGeoAccuracyStringString">
            <summary>Sets the shim of Flickr.PhotosGeoBatchCorrectLocation(Double latitude, Double longitude, GeoAccuracy accuracy, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoCorrectLocationAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoCorrectLocationAsync(String photoId, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoCorrectLocationStringStringString">
            <summary>Sets the shim of Flickr.PhotosGeoCorrectLocation(String photoId, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoGetLocationAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PhotosGeoGetLocationAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoGetLocationString">
            <summary>Sets the shim of Flickr.PhotosGeoGetLocation(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoGetPermsAsyncStringActionOfFlickrResultOfGeoPermissions">
            <summary>Sets the shim of Flickr.PhotosGeoGetPermsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;GeoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoGetPermsString">
            <summary>Sets the shim of Flickr.PhotosGeoGetPerms(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoPhotosForLocationAsyncDoubleDoubleGeoAccuracyPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGeoPhotosForLocationAsync(Double latitude, Double longitude, GeoAccuracy accuracy, PhotoSearchExtras extras, Int32 perPage, Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoPhotosForLocationDoubleDoubleGeoAccuracyPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGeoPhotosForLocation(Double latitude, Double longitude, GeoAccuracy accuracy, PhotoSearchExtras extras, Int32 perPage, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoRemoveLocationAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoRemoveLocationAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoRemoveLocationString">
            <summary>Sets the shim of Flickr.PhotosGeoRemoveLocation(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetContextAsyncStringGeoContextActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetContextAsync(String photoId, GeoContext context, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetContextStringGeoContext">
            <summary>Sets the shim of Flickr.PhotosGeoSetContext(String photoId, GeoContext context)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetLocationAsyncStringDoubleDoubleActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocationAsync(String photoId, Double latitude, Double longitude, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetLocationAsyncStringDoubleDoubleGeoAccuracyActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocationAsync(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetLocationStringDoubleDouble">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetLocationStringDoubleDoubleGeoAccuracy">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetLocationStringDoubleDoubleGeoAccuracyGeoContext">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, GeoContext context)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetPermsAsyncStringBooleanBooleanBooleanBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetPermsAsync(String photoId, Boolean isPublic, Boolean isContact, Boolean isFamily, Boolean isFriend, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGeoSetPermsStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.PhotosGeoSetPerms(String photoId, Boolean isPublic, Boolean isContact, Boolean isFamily, Boolean isFriend)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetAllContextsAsyncStringActionOfFlickrResultOfAllContexts">
            <summary>Sets the shim of Flickr.PhotosGetAllContextsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;AllContexts&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetAllContextsString">
            <summary>Sets the shim of Flickr.PhotosGetAllContexts(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotos">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotosAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotosAsyncInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Int32 count, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotosAsyncInt32BooleanBooleanBooleanPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotosInt32">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos(Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPhotosInt32BooleanBooleanBooleanPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos(Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringInt32BooleanBooleanBooleanActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringInt32BooleanBooleanBooleanPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringInt32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosString">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosStringInt32">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosStringInt32BooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosStringInt32BooleanBooleanBooleanPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosStringInt32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContactsPublicPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContextAsyncStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.PhotosGetContextAsync(String photoId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetContextString">
            <summary>Sets the shim of Flickr.PhotosGetContext(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsAsyncDateTimeArrayActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsAsyncDateTimeArrayBooleanActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, Boolean taken, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsAsyncDateTimeArrayDateTimeArrayActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, DateTime[] takenDates, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsDateTimeArray">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsDateTimeArrayBoolean">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates, Boolean taken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetCountsDateTimeArrayDateTimeArray">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates, DateTime[] takenDates)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetExifAsyncStringActionOfFlickrResultOfExifTagCollection">
            <summary>Sets the shim of Flickr.PhotosGetExifAsync(String photoId, Action`1&lt;FlickrResult`1&lt;ExifTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetExifAsyncStringStringActionOfFlickrResultOfExifTagCollection">
            <summary>Sets the shim of Flickr.PhotosGetExifAsync(String photoId, String secret, Action`1&lt;FlickrResult`1&lt;ExifTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetExifString">
            <summary>Sets the shim of Flickr.PhotosGetExif(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetExifStringString">
            <summary>Sets the shim of Flickr.PhotosGetExif(String photoId, String secret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetFavoritesAsyncStringActionOfFlickrResultOfPhotoFavoriteCollection">
            <summary>Sets the shim of Flickr.PhotosGetFavoritesAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoFavoriteCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetFavoritesAsyncStringInt32Int32ActionOfFlickrResultOfPhotoFavoriteCollection">
            <summary>Sets the shim of Flickr.PhotosGetFavoritesAsync(String photoId, Int32 perPage, Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoFavoriteCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetFavoritesString">
            <summary>Sets the shim of Flickr.PhotosGetFavorites(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetFavoritesStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetFavorites(String photoId, Int32 perPage, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetInfoAsyncStringActionOfFlickrResultOfPhotoInfo">
            <summary>Sets the shim of Flickr.PhotosGetInfoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetInfoAsyncStringStringActionOfFlickrResultOfPhotoInfo">
            <summary>Sets the shim of Flickr.PhotosGetInfoAsync(String photoId, String secret, Action`1&lt;FlickrResult`1&lt;PhotoInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetInfoString">
            <summary>Sets the shim of Flickr.PhotosGetInfo(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetInfoStringString">
            <summary>Sets the shim of Flickr.PhotosGetInfo(String photoId, String secret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSet">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetAsyncInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetInt32">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetNotInSetPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetPermsAsyncStringActionOfFlickrResultOfPhotoPermissions">
            <summary>Sets the shim of Flickr.PhotosGetPermsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetPermsString">
            <summary>Sets the shim of Flickr.PhotosGetPerms(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecent">
            <summary>Sets the shim of Flickr.PhotosGetRecent()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetRecent(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetRecent(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetRecentPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetRecent(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetSizesAsyncStringActionOfFlickrResultOfSizeCollection">
            <summary>Sets the shim of Flickr.PhotosGetSizesAsync(String photoId, Action`1&lt;FlickrResult`1&lt;SizeCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetSizesString">
            <summary>Sets the shim of Flickr.PhotosGetSizes(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntagged">
            <summary>Sets the shim of Flickr.PhotosGetUntagged()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetUntaggedPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithGeoData">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithGeoDataAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoDataAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithGeoDataAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoDataAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithGeoDataPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithGeoDataPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithoutGeoData">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithoutGeoDataAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoDataAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithoutGeoDataAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoDataAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithoutGeoDataPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosGetWithoutGeoDataPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosLicensesGetInfo">
            <summary>Sets the shim of Flickr.PhotosLicensesGetInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosLicensesGetInfoAsyncActionOfFlickrResultOfLicenseCollection">
            <summary>Sets the shim of Flickr.PhotosLicensesGetInfoAsync(Action`1&lt;FlickrResult`1&lt;LicenseCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosLicensesSetLicenseAsyncStringLicenseTypeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosLicensesSetLicenseAsync(String photoId, LicenseType license, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosLicensesSetLicenseStringLicenseType">
            <summary>Sets the shim of Flickr.PhotosLicensesSetLicense(String photoId, LicenseType license)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesAddAsyncStringInt32Int32Int32Int32StringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosNotesAddAsync(String photoId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesAddStringInt32Int32Int32Int32String">
            <summary>Sets the shim of Flickr.PhotosNotesAdd(String photoId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosNotesDeleteAsync(String noteId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesDeleteString">
            <summary>Sets the shim of Flickr.PhotosNotesDelete(String noteId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesEditAsyncStringInt32Int32Int32Int32StringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosNotesEditAsync(String noteId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosNotesEditStringInt32Int32Int32Int32String">
            <summary>Sets the shim of Flickr.PhotosNotesEdit(String noteId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleAddAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleAddAsyncStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleAddAsync(String photoId, String userId, Nullable`1&lt;Int32&gt; personX, Nullable`1&lt;Int32&gt; personY, Nullable`1&lt;Int32&gt; personWidth, Nullable`1&lt;Int32&gt; personHeight, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleAddStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleAdd(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleAddStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32">
            <summary>Sets the shim of Flickr.PhotosPeopleAdd(String photoId, String userId, Nullable`1&lt;Int32&gt; personX, Nullable`1&lt;Int32&gt; personY, Nullable`1&lt;Int32&gt; personWidth, Nullable`1&lt;Int32&gt; personHeight)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleDeleteAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleDeleteCoordsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteCoordsAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleDeleteCoordsStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteCoords(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleDeleteStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleDelete(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleEditCoordsAsyncStringStringInt32Int32Int32Int32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleEditCoordsAsync(String photoId, String userId, Int32 personX, Int32 personY, Int32 personWidth, Int32 personHeight, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleEditCoordsStringStringInt32Int32Int32Int32">
            <summary>Sets the shim of Flickr.PhotosPeopleEditCoords(String photoId, String userId, Int32 personX, Int32 personY, Int32 personWidth, Int32 personHeight)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleGetListAsyncStringActionOfFlickrResultOfPhotoPersonCollection">
            <summary>Sets the shim of Flickr.PhotosPeopleGetListAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoPersonCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosPeopleGetListString">
            <summary>Sets the shim of Flickr.PhotosPeopleGetList(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedAsyncDateTimeActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedAsyncDateTimeInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedAsyncDateTimePhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedDateTime">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedDateTimePhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRecentlyUpdatedDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRemoveTagAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosRemoveTagAsync(String tagId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosRemoveTagString">
            <summary>Sets the shim of Flickr.PhotosRemoveTag(String tagId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSearchAsyncPhotoSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosSearchAsync(PhotoSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSearchPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosSearch(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetContentTypeAsyncStringContentTypeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetContentTypeAsync(String photoId, ContentType contentType, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetContentTypeStringContentType">
            <summary>Sets the shim of Flickr.PhotosSetContentType(String photoId, ContentType contentType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesAsyncStringDateTimeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime datePosted, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesAsyncStringDateTimeDateGranularityActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime dateTaken, DateGranularity granularity, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesAsyncStringDateTimeDateTimeDateGranularityActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime datePosted, DateTime dateTaken, DateGranularity granularity, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesStringDateTime">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime datePosted)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesStringDateTimeDateGranularity">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime dateTaken, DateGranularity granularity)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetDatesStringDateTimeDateTimeDateGranularity">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime datePosted, DateTime dateTaken, DateGranularity granularity)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetMetaAsync(String photoId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetMetaStringStringString">
            <summary>Sets the shim of Flickr.PhotosSetMeta(String photoId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetPermsAsyncStringBooleanBooleanBooleanPermissionCommentPermissionAddMetaActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetPermsAsync(String photoId, Boolean isPublic, Boolean isFriend, Boolean isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetPermsAsyncStringInt32Int32Int32PermissionCommentPermissionAddMetaActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetPermsAsync(String photoId, Int32 isPublic, Int32 isFriend, Int32 isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetPermsStringBooleanBooleanBooleanPermissionCommentPermissionAddMeta">
            <summary>Sets the shim of Flickr.PhotosSetPerms(String photoId, Boolean isPublic, Boolean isFriend, Boolean isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetPermsStringInt32Int32Int32PermissionCommentPermissionAddMeta">
            <summary>Sets the shim of Flickr.PhotosSetPerms(String photoId, Int32 isPublic, Int32 isFriend, Int32 isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelAsyncStringHiddenFromSearchActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, HiddenFromSearch hidden, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelAsyncStringSafetyLevelActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, SafetyLevel safetyLevel, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelAsyncStringSafetyLevelHiddenFromSearchActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, SafetyLevel safetyLevel, HiddenFromSearch hidden, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelStringHiddenFromSearch">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, HiddenFromSearch hidden)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelStringSafetyLevel">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, SafetyLevel safetyLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetSafetyLevelStringSafetyLevelHiddenFromSearch">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, SafetyLevel safetyLevel, HiddenFromSearch hidden)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetTagsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetTagsAsync(String photoId, String tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetTagsAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetTagsAsync(String photoId, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetTagsStringString">
            <summary>Sets the shim of Flickr.PhotosSetTags(String photoId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSetTagsStringStringArray">
            <summary>Sets the shim of Flickr.PhotosSetTags(String photoId, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsApproveSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsApproveSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsApproveSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsApproveSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsGetListAsyncStringSuggestionStatusActionOfFlickrResultOfSuggestionCollection">
            <summary>Sets the shim of Flickr.PhotosSuggestionsGetListAsync(String photoId, SuggestionStatus status, Action`1&lt;FlickrResult`1&lt;SuggestionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsGetListStringSuggestionStatus">
            <summary>Sets the shim of Flickr.PhotosSuggestionsGetList(String photoId, SuggestionStatus status)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsRejectSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRejectSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsRejectSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRejectSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsRemoveSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRemoveSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsRemoveSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRemoveSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsSuggestLocationAsyncStringDoubleDoubleGeoAccuracyStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsSuggestLocationAsync(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, String woeId, String placeId, String note, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosSuggestionsSuggestLocationStringDoubleDoubleGeoAccuracyStringStringString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsSuggestLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, String woeId, String placeId, String note)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosTransformRotateAsyncStringInt32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosTransformRotateAsync(String photoId, Int32 degrees, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosTransformRotateStringInt32">
            <summary>Sets the shim of Flickr.PhotosTransformRotate(String photoId, Int32 degrees)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosUploadCheckTicketsAsyncStringArrayActionOfFlickrResultOfTicketCollection">
            <summary>Sets the shim of Flickr.PhotosUploadCheckTicketsAsync(String[] tickets, Action`1&lt;FlickrResult`1&lt;TicketCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosUploadCheckTicketsStringArray">
            <summary>Sets the shim of Flickr.PhotosUploadCheckTickets(String[] tickets)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsAddPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsAddPhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsAddPhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsAddPhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsAddCommentAsyncStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsAddCommentAsync(String photosetId, String commentText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsAddCommentStringString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsAddComment(String photosetId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsDeleteCommentAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsCommentsDeleteCommentAsync(String commentId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsDeleteCommentString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsDeleteComment(String commentId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsEditCommentAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsCommentsEditCommentAsync(String commentId, String commentText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsEditCommentStringString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsEditComment(String commentId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsGetListAsyncStringActionOfFlickrResultOfPhotosetCommentCollection">
            <summary>Sets the shim of Flickr.PhotosetsCommentsGetListAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;PhotosetCommentCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCommentsGetListString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsGetList(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCreateAsyncStringStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsCreateAsync(String title, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCreateAsyncStringStringStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsCreateAsync(String title, String description, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCreateStringString">
            <summary>Sets the shim of Flickr.PhotosetsCreate(String title, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsCreateStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsCreate(String title, String description, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsDeleteAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsDeleteString">
            <summary>Sets the shim of Flickr.PhotosetsDelete(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditMetaAsync(String photosetId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditMetaStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsEditMeta(String photosetId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditPhotosAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotosAsync(String photosetId, String primaryPhotoId, String photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditPhotosAsyncStringStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotosAsync(String photosetId, String primaryPhotoId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditPhotosStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotos(String photosetId, String primaryPhotoId, String photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsEditPhotosStringStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotos(String photosetId, String primaryPhotoId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetContextAsyncStringStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.PhotosetsGetContextAsync(String photoId, String photosetId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetContextStringString">
            <summary>Sets the shim of Flickr.PhotosetsGetContext(String photoId, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetInfoAsyncStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsGetInfoAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetInfoString">
            <summary>Sets the shim of Flickr.PhotosetsGetInfo(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetList">
            <summary>Sets the shim of Flickr.PhotosetsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListAsyncActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListAsyncInt32Int32ActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListAsyncStringActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListAsyncStringInt32Int32ActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListString">
            <summary>Sets the shim of Flickr.PhotosetsGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterInt32Int32MediaTypeActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, MediaType media, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPrivacyFilterActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PrivacyFilter privacyFilter, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosAsyncStringPrivacyFilterInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosString">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilter">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilterInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilterInt32Int32MediaType">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, MediaType media)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPrivacyFilter">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PrivacyFilter privacyFilter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsGetPhotosStringPrivacyFilterInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PrivacyFilter privacyFilter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsOrderSetsAsyncIEnumerableOfStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(IEnumerable`1&lt;String&gt; photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsOrderSetsAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(String photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsOrderSetsAsyncStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(String[] photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsOrderSetsString">
            <summary>Sets the shim of Flickr.PhotosetsOrderSets(String photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsOrderSetsStringArray">
            <summary>Sets the shim of Flickr.PhotosetsOrderSets(String[] photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsRemovePhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsRemovePhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsRemovePhotosAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotosAsync(String photosetId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsRemovePhotosStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotos(String photosetId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsReorderPhotosAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsReorderPhotosAsync(String photosetId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsReorderPhotosStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsReorderPhotos(String photosetId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsSetPrimaryPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsSetPrimaryPhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PhotosetsSetPrimaryPhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsSetPrimaryPhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindAsyncStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesFindAsync(String query, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindByLatLonAsyncDoubleDoubleActionOfFlickrResultOfPlace">
            <summary>Sets the shim of Flickr.PlacesFindByLatLonAsync(Double latitude, Double longitude, Action`1&lt;FlickrResult`1&lt;Place&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindByLatLonAsyncDoubleDoubleGeoAccuracyActionOfFlickrResultOfPlace">
            <summary>Sets the shim of Flickr.PlacesFindByLatLonAsync(Double latitude, Double longitude, GeoAccuracy accuracy, Action`1&lt;FlickrResult`1&lt;Place&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindByLatLonDoubleDouble">
            <summary>Sets the shim of Flickr.PlacesFindByLatLon(Double latitude, Double longitude)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindByLatLonDoubleDoubleGeoAccuracy">
            <summary>Sets the shim of Flickr.PlacesFindByLatLon(Double latitude, Double longitude, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesFindString">
            <summary>Sets the shim of Flickr.PlacesFind(String query)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetChildrenWithPhotosPublicAsyncStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetChildrenWithPhotosPublicAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetChildrenWithPhotosPublicStringString">
            <summary>Sets the shim of Flickr.PlacesGetChildrenWithPhotosPublic(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetInfoAsyncStringStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesGetInfoAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetInfoByUrlAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesGetInfoByUrlAsync(String url, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetInfoByUrlString">
            <summary>Sets the shim of Flickr.PlacesGetInfoByUrl(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetInfoStringString">
            <summary>Sets the shim of Flickr.PlacesGetInfo(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetPlaceTypes">
            <summary>Sets the shim of Flickr.PlacesGetPlaceTypes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetPlaceTypesAsyncActionOfFlickrResultOfPlaceTypeInfoCollection">
            <summary>Sets the shim of Flickr.PlacesGetPlaceTypesAsync(Action`1&lt;FlickrResult`1&lt;PlaceTypeInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetShapeHistoryAsyncStringStringActionOfFlickrResultOfShapeDataCollection">
            <summary>Sets the shim of Flickr.PlacesGetShapeHistoryAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;ShapeDataCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetShapeHistoryStringString">
            <summary>Sets the shim of Flickr.PlacesGetShapeHistory(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListAsyncPlaceTypeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListAsyncPlaceTypeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, DateTime date, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListAsyncPlaceTypeDateTimeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, DateTime date, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListAsyncPlaceTypeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListPlaceType">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListPlaceTypeDateTime">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListPlaceTypeDateTimeStringString">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, DateTime date, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesGetTopPlacesListPlaceTypeStringString">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForBoundingBoxAsyncPlaceTypeStringStringBoundaryBoxActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForBoundingBoxAsync(PlaceType placeType, String woeId, String placeId, BoundaryBox boundaryBox, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForBoundingBoxPlaceTypeStringStringBoundaryBox">
            <summary>Sets the shim of Flickr.PlacesPlacesForBoundingBox(PlaceType placeType, String woeId, String placeId, BoundaryBox boundaryBox)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForContactsAsyncPlaceTypeStringStringInt32ContactSearchDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForContactsAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, ContactSearch contactType, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForContactsPlaceTypeStringStringInt32ContactSearchDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForContacts(PlaceType placeType, String woeId, String placeId, Int32 threshold, ContactSearch contactType, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForTagsAsyncPlaceTypeStringStringInt32StringArrayTagModeStringArrayMachineTagModeDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForTagsAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, String[] tags, TagMode tagMode, String[] machineTags, MachineTagMode machineTagMode, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForTagsPlaceTypeStringStringInt32StringArrayTagModeStringArrayMachineTagModeDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForTags(PlaceType placeType, String woeId, String placeId, Int32 threshold, String[] tags, TagMode tagMode, String[] machineTags, MachineTagMode machineTagMode, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUser">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUserAsyncActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUserAsyncPlaceTypeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(PlaceType placeType, String woeId, String placeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUserAsyncPlaceTypeStringStringInt32DateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUserPlaceTypeStringString">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser(PlaceType placeType, String woeId, String placeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesPlacesForUserPlaceTypeStringStringInt32DateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser(PlaceType placeType, String woeId, String placeId, Int32 threshold, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesResolvePlaceIdAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceIdAsync(String placeId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesResolvePlaceIdString">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceId(String placeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesResolvePlaceUrlAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceUrlAsync(String url, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesResolvePlaceUrlString">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceUrl(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesTagsForPlaceAsyncStringStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.PlacesTagsForPlaceAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesTagsForPlaceAsyncStringStringDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.PlacesTagsForPlaceAsync(String placeId, String woeId, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesTagsForPlaceStringString">
            <summary>Sets the shim of Flickr.PlacesTagsForPlace(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PlacesTagsForPlaceStringStringDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesTagsForPlace(String placeId, String woeId, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetContentType">
            <summary>Sets the shim of Flickr.PrefsGetContentType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetContentTypeAsyncActionOfFlickrResultOfContentType">
            <summary>Sets the shim of Flickr.PrefsGetContentTypeAsync(Action`1&lt;FlickrResult`1&lt;ContentType&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetGeoPerms">
            <summary>Sets the shim of Flickr.PrefsGetGeoPerms()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetGeoPermsAsyncActionOfFlickrResultOfUserGeoPermissions">
            <summary>Sets the shim of Flickr.PrefsGetGeoPermsAsync(Action`1&lt;FlickrResult`1&lt;UserGeoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetHidden">
            <summary>Sets the shim of Flickr.PrefsGetHidden()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetHiddenAsyncActionOfFlickrResultOfHiddenFromSearch">
            <summary>Sets the shim of Flickr.PrefsGetHiddenAsync(Action`1&lt;FlickrResult`1&lt;HiddenFromSearch&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetPrivacy">
            <summary>Sets the shim of Flickr.PrefsGetPrivacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetPrivacyAsyncActionOfFlickrResultOfPrivacyFilter">
            <summary>Sets the shim of Flickr.PrefsGetPrivacyAsync(Action`1&lt;FlickrResult`1&lt;PrivacyFilter&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetSafetyLevel">
            <summary>Sets the shim of Flickr.PrefsGetSafetyLevel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PrefsGetSafetyLevelAsyncActionOfFlickrResultOfSafetyLevel">
            <summary>Sets the shim of Flickr.PrefsGetSafetyLevelAsync(Action`1&lt;FlickrResult`1&lt;SafetyLevel&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ProxyGet">
            <summary>Sets the shim of Flickr.get_Proxy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ProxySetWebProxy">
            <summary>Sets the shim of Flickr.set_Proxy(WebProxy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushGetSubscriptions">
            <summary>Sets the shim of Flickr.PushGetSubscriptions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushGetSubscriptionsAsyncActionOfFlickrResultOfSubscriptionCollection">
            <summary>Sets the shim of Flickr.PushGetSubscriptionsAsync(Action`1&lt;FlickrResult`1&lt;SubscriptionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushGetTopics">
            <summary>Sets the shim of Flickr.PushGetTopics()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushGetTopicsAsyncActionOfFlickrResultOfStringArray">
            <summary>Sets the shim of Flickr.PushGetTopicsAsync(Action`1&lt;FlickrResult`1&lt;String[]&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushSubscribeAsyncStringStringStringStringInt32Int32ArrayStringArrayDoubleDoubleInt32RadiusUnitGeoAccuracyStringArrayStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PushSubscribeAsync(String topic, String callback, String verify, String verifyToken, Int32 leaseSeconds, Int32[] woeIds, String[] placeIds, Double latitude, Double longitude, Int32 radius, RadiusUnit radiusUnits, GeoAccuracy accuracy, String[] nsids, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callbackAction)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushSubscribeStringStringStringStringInt32Int32ArrayStringArrayDoubleDoubleInt32RadiusUnitGeoAccuracyStringArrayStringArray">
            <summary>Sets the shim of Flickr.PushSubscribe(String topic, String callback, String verify, String verifyToken, Int32 leaseSeconds, Int32[] woeIds, String[] placeIds, Double latitude, Double longitude, Int32 radius, RadiusUnit radiusUnits, GeoAccuracy accuracy, String[] nsids, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushUnsubscribeAsyncStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PushUnsubscribeAsync(String topic, String callback, String verify, String verifyToken, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callbackAction)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.PushUnsubscribeStringStringStringString">
            <summary>Sets the shim of Flickr.PushUnsubscribe(String topic, String callback, String verify, String verifyToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReflectionGetMethodInfoAsyncStringActionOfFlickrResultOfMethod">
            <summary>Sets the shim of Flickr.ReflectionGetMethodInfoAsync(String methodName, Action`1&lt;FlickrResult`1&lt;Method&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReflectionGetMethodInfoString">
            <summary>Sets the shim of Flickr.ReflectionGetMethodInfo(String methodName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReflectionGetMethods">
            <summary>Sets the shim of Flickr.ReflectionGetMethods()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReflectionGetMethodsAsyncActionOfFlickrResultOfMethodCollection">
            <summary>Sets the shim of Flickr.ReflectionGetMethodsAsync(Action`1&lt;FlickrResult`1&lt;MethodCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReplacePictureAsyncStreamStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.ReplacePictureAsync(Stream stream, String fileName, String photoId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReplacePictureStreamStringString">
            <summary>Sets the shim of Flickr.ReplacePicture(Stream stream, String fileName, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReplacePictureStringString">
            <summary>Sets the shim of Flickr.ReplacePicture(String fullFileName, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.ReplaceUrlGet">
            <summary>Sets the shim of Flickr.get_ReplaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StaticConstructor">
            <summary>Sets the shim of Flickr.Flickr()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, String collectionId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, String collectionId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, String collectionId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, String collectionId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, String collectionId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, String collectionId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetCollectionStatsAsync(DateTime date, String collectionId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCollectionStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionStats(DateTime date, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCsvFiles">
            <summary>Sets the shim of Flickr.StatsGetCsvFiles()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetCsvFilesAsyncActionOfFlickrResultOfCsvFileCollection">
            <summary>Sets the shim of Flickr.StatsGetCsvFilesAsync(Action`1&lt;FlickrResult`1&lt;CsvFileCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, String photoId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, String photoId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotoStatsAsync(DateTime date, String photoId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotoStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoStats(DateTime date, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, String photosetId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, String photosetId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotosetStatsAsync(DateTime date, String photosetId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotosetStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetStats(DateTime date, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamStatsAsyncDateTimeActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamStatsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPhotostreamStatsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamStats(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotos">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncDateTimeActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncDateTimeInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncDateTimePopularitySortInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, PopularitySort sort, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncPopularitySortActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(PopularitySort sort, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosAsyncPopularitySortInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(PopularitySort sort, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosDateTime">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosDateTimePopularitySortInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date, PopularitySort sort, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosPopularitySort">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(PopularitySort sort)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetPopularPhotosPopularitySortInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(PopularitySort sort, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetTotalViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetTotalViewsAsyncActionOfFlickrResultOfStatViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViewsAsync(Action`1&lt;FlickrResult`1&lt;StatViews&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetTotalViewsAsyncDateTimeActionOfFlickrResultOfStatViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViewsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatViews&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.StatsGetTotalViewsDateTime">
            <summary>Sets the shim of Flickr.StatsGetTotalViews(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosAsyncClusterActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(Cluster cluster, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosAsyncClusterPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(Cluster cluster, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosAsyncStringStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(String tag, String clusterId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosCluster">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(Cluster cluster)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosClusterPhotoSearchExtras">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(Cluster cluster, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClusterPhotosStringStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(String tag, String clusterId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClustersAsyncStringActionOfFlickrResultOfClusterCollection">
            <summary>Sets the shim of Flickr.TagsGetClustersAsync(String tag, Action`1&lt;FlickrResult`1&lt;ClusterCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetClustersString">
            <summary>Sets the shim of Flickr.TagsGetClusters(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetHotList">
            <summary>Sets the shim of Flickr.TagsGetHotList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetHotListAsyncActionOfFlickrResultOfHotTagCollection">
            <summary>Sets the shim of Flickr.TagsGetHotListAsync(Action`1&lt;FlickrResult`1&lt;HotTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetHotListAsyncStringInt32ActionOfFlickrResultOfHotTagCollection">
            <summary>Sets the shim of Flickr.TagsGetHotListAsync(String period, Int32 count, Action`1&lt;FlickrResult`1&lt;HotTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetHotListStringInt32">
            <summary>Sets the shim of Flickr.TagsGetHotList(String period, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListPhotoAsyncStringActionOfFlickrResultOfCollectionOfPhotoInfoTag">
            <summary>Sets the shim of Flickr.TagsGetListPhotoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;Collection`1&lt;PhotoInfoTag&gt;&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListPhotoString">
            <summary>Sets the shim of Flickr.TagsGetListPhoto(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUser">
            <summary>Sets the shim of Flickr.TagsGetListUser()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserAsync(String userId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopular">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularAsyncInt32ActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(Int32 count, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(String userId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularAsyncStringInt32ActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(String userId, Int32 count, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularInt32">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularString">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserPopularStringInt32">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(String userId, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserRaw">
            <summary>Sets the shim of Flickr.TagsGetListUserRaw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserRawAsyncActionOfFlickrResultOfRawTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserRawAsync(Action`1&lt;FlickrResult`1&lt;RawTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserRawAsyncStringActionOfFlickrResultOfRawTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserRawAsync(String tag, Action`1&lt;FlickrResult`1&lt;RawTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserRawString">
            <summary>Sets the shim of Flickr.TagsGetListUserRaw(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetListUserString">
            <summary>Sets the shim of Flickr.TagsGetListUser(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetMostFrequentlyUsed">
            <summary>Sets the shim of Flickr.TagsGetMostFrequentlyUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetMostFrequentlyUsedAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetMostFrequentlyUsedAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetRelatedAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetRelatedAsync(String tag, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TagsGetRelatedString">
            <summary>Sets the shim of Flickr.TagsGetRelated(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestEchoAsyncDictionaryOfStringStringActionOfFlickrResultOfEchoResponseDictionary">
            <summary>Sets the shim of Flickr.TestEchoAsync(Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;EchoResponseDictionary&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestEchoDictionaryOfStringString">
            <summary>Sets the shim of Flickr.TestEcho(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestGenericAsyncStringDictionaryOfStringStringActionOfFlickrResultOfUnknownResponse">
            <summary>Sets the shim of Flickr.TestGenericAsync(String method, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;UnknownResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestGenericStringDictionaryOfStringString">
            <summary>Sets the shim of Flickr.TestGeneric(String method, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestLogin">
            <summary>Sets the shim of Flickr.TestLogin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestLoginAsyncActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.TestLoginAsync(Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestNull">
            <summary>Sets the shim of Flickr.TestNull()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.TestNullAsyncActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.TestNullAsync(Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadDataAsyncStreamStringUriDictionaryOfStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UploadDataAsync(Stream imageStream, String fileName, Uri uploadUri, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadDataStreamStringUriDictionaryOfStringString">
            <summary>Sets the shim of Flickr.UploadData(Stream imageStream, String fileName, Uri uploadUri, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureAsyncStreamStringStringStringStringBooleanBooleanBooleanContentTypeSafetyLevelHiddenFromSearchActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UploadPictureAsync(Stream stream, String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend, ContentType contentType, SafetyLevel safetyLevel, HiddenFromSearch hiddenFromSearch, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureStreamStringStringStringStringBooleanBooleanBooleanContentTypeSafetyLevelHiddenFromSearch">
            <summary>Sets the shim of Flickr.UploadPicture(Stream stream, String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend, ContentType contentType, SafetyLevel safetyLevel, HiddenFromSearch hiddenFromSearch)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureStringStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureStringStringStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadPictureStringStringStringStringBooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UploadUrlGet">
            <summary>Sets the shim of Flickr.get_UploadUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetGroupAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetGroupAsync(String groupId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetGroupString">
            <summary>Sets the shim of Flickr.UrlsGetGroup(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserPhotos">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserPhotosAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotosAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserPhotosAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserPhotosString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserProfile">
            <summary>Sets the shim of Flickr.UrlsGetUserProfile()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserProfileAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfileAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserProfileAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfileAsync(String userId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsGetUserProfileString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfile(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupGalleryAsyncStringActionOfFlickrResultOfGallery">
            <summary>Sets the shim of Flickr.UrlsLookupGalleryAsync(String url, Action`1&lt;FlickrResult`1&lt;Gallery&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupGalleryString">
            <summary>Sets the shim of Flickr.UrlsLookupGallery(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupGroupAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsLookupGroupAsync(String urlToFind, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupGroupString">
            <summary>Sets the shim of Flickr.UrlsLookupGroup(String urlToFind)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupUserAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.UrlsLookupUserAsync(String urlToFind, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.UrlsLookupUserString">
            <summary>Sets the shim of Flickr.UrlsLookupUser(String urlToFind)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr._PhotosGetCountsAsyncb__26DateTime">
            <summary>Sets the shim of Flickr.&lt;PhotosGetCountsAsync&gt;b__26(DateTime d)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr._PhotosGetCountsAsyncb__27DateTime">
            <summary>Sets the shim of Flickr.&lt;PhotosGetCountsAsync&gt;b__27(DateTime d)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr._PhotosGetCountsb__5fDateTime">
            <summary>Sets the shim of Flickr.&lt;PhotosGetCounts&gt;b__5f(DateTime d)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr._PhotosGetCountsb__60DateTime">
            <summary>Sets the shim of Flickr.&lt;PhotosGetCounts&gt;b__60(DateTime d)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.AllInstances.DoGetResponseAsyncOf1UriActionOfFlickrResultOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{FlickrNet.Flickr,System.Uri,System.Action{FlickrNet.FlickrResult{``0}}})">
            <summary>Sets the shim of Flickr.DoGetResponseAsync(Uri url, Action`1&lt;FlickrResult`1&lt;!!0&gt;&gt; callback)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.AllInstances.GetResponseAsyncOf1DictionaryOfStringStringActionOfFlickrResultOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{FlickrNet.Flickr,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{FlickrNet.FlickrResult{``0}}})">
            <summary>Sets the shim of Flickr.GetResponseAsync(Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;!!0&gt;&gt; callback)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.AllInstances.GetResponseCacheOf1DictionaryOfStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{FlickrNet.Flickr,System.Collections.Generic.Dictionary{System.String,System.String},``0})">
            <summary>Sets the shim of Flickr.GetResponseCache(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.AllInstances.GetResponseNoCacheOf1DictionaryOfStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{FlickrNet.Flickr,System.Collections.Generic.Dictionary{System.String,System.String},``0})">
            <summary>Sets the shim of Flickr.GetResponseNoCache(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickr.AllInstances.GetResponseOf1DictionaryOfStringStringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{FlickrNet.Flickr,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,``0})">
            <summary>Sets the shim of Flickr.GetResponse(Dictionary`2&lt;String,String&gt; parameters, TimeSpan cacheTimeout)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserCommentsAsyncInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserCommentsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserCommentsInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserComments(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotos">
            <summary>Sets the shim of Flickr.ActivityUserPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosAsyncActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosAsyncInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosAsyncInt32StringActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 timePeriod, String timeType, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosAsyncInt32StringInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(Int32 timePeriod, String timeType, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosAsyncStringInt32Int32ActionOfFlickrResultOfActivityItemCollection">
            <summary>Sets the shim of Flickr.ActivityUserPhotosAsync(String timeframe, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ActivityItemCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosInt32String">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 timePeriod, String timeType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosInt32StringInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(Int32 timePeriod, String timeType, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ActivityUserPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.ActivityUserPhotos(String timeframe, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ApiKeyGet">
            <summary>Sets the shim of Flickr.get_ApiKey()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ApiKeySetString">
            <summary>Sets the shim of Flickr.set_ApiKey(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ApiSecretGet">
            <summary>Sets the shim of Flickr.get_ApiSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ApiSecretSetString">
            <summary>Sets the shim of Flickr.set_ApiSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcRevokeUrlString">
            <summary>Sets the shim of Flickr.AuthCalcRevokeUrl(String appToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcUrlMobileStringAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcUrlMobile(String frob, AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcUrlStringAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcUrl(String frob, AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcWebUrlAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcWebUrl(AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcWebUrlAuthLevelString">
            <summary>Sets the shim of Flickr.AuthCalcWebUrl(AuthLevel authLevel, String extra)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCalcWebUrlMobileAuthLevel">
            <summary>Sets the shim of Flickr.AuthCalcWebUrlMobile(AuthLevel authLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCheckToken">
            <summary>Sets the shim of Flickr.AuthCheckToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCheckTokenAsyncActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthCheckTokenAsync(Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCheckTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthCheckTokenAsync(String token, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthCheckTokenString">
            <summary>Sets the shim of Flickr.AuthCheckToken(String token)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetFrob">
            <summary>Sets the shim of Flickr.AuthGetFrob()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetFrobAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.AuthGetFrobAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetFullTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthGetFullTokenAsync(String miniToken, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetFullTokenString">
            <summary>Sets the shim of Flickr.AuthGetFullToken(String miniToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetTokenAsyncStringActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthGetTokenAsync(String frob, Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthGetTokenString">
            <summary>Sets the shim of Flickr.AuthGetToken(String frob)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthOAuthCheckToken">
            <summary>Sets the shim of Flickr.AuthOAuthCheckToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthOAuthCheckTokenAsyncActionOfFlickrResultOfAuth">
            <summary>Sets the shim of Flickr.AuthOAuthCheckTokenAsync(Action`1&lt;FlickrResult`1&lt;Auth&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthOAuthGetAccessToken">
            <summary>Sets the shim of Flickr.AuthOAuthGetAccessToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthOAuthGetAccessTokenAsyncActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.AuthOAuthGetAccessTokenAsync(Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthTokenGet">
            <summary>Sets the shim of Flickr.get_AuthToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthTokenSetString">
            <summary>Sets the shim of Flickr.set_AuthToken(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.AuthUrlGet">
            <summary>Sets the shim of Flickr.get_AuthUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BaseUriGet">
            <summary>Sets the shim of Flickr.get_BaseUri()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsGetList">
            <summary>Sets the shim of Flickr.BlogsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsGetListAsyncActionOfFlickrResultOfBlogCollection">
            <summary>Sets the shim of Flickr.BlogsGetListAsync(Action`1&lt;FlickrResult`1&lt;BlogCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsGetServices">
            <summary>Sets the shim of Flickr.BlogsGetServices()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsGetServicesAsyncActionOfFlickrResultOfBlogServiceCollection">
            <summary>Sets the shim of Flickr.BlogsGetServicesAsync(Action`1&lt;FlickrResult`1&lt;BlogServiceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsPostPhotoAsyncStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.BlogsPostPhotoAsync(String blogId, String photoId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsPostPhotoAsyncStringStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.BlogsPostPhotoAsync(String blogId, String photoId, String title, String description, String blogPassword, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsPostPhotoStringStringStringString">
            <summary>Sets the shim of Flickr.BlogsPostPhoto(String blogId, String photoId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.BlogsPostPhotoStringStringStringStringString">
            <summary>Sets the shim of Flickr.BlogsPostPhoto(String blogId, String photoId, String title, String description, String blogPassword)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CalculateAuthSignatureDictionaryOfStringString">
            <summary>Sets the shim of Flickr.CalculateAuthSignature(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CalculateUriDictionaryOfStringStringBoolean">
            <summary>Sets the shim of Flickr.CalculateUri(Dictionary`2&lt;String,String&gt; parameters, Boolean includeSignature)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CheckApiKey">
            <summary>Sets the shim of Flickr.CheckApiKey()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CheckRequiresAuthentication">
            <summary>Sets the shim of Flickr.CheckRequiresAuthentication()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CheckSigned">
            <summary>Sets the shim of Flickr.CheckSigned()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsEditMetaStringStringString">
            <summary>Sets the shim of Flickr.CollectionsEditMeta(String collectionId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsEditSetsStringIListOfString">
            <summary>Sets the shim of Flickr.CollectionsEditSets(String collectionId, IList`1&lt;String&gt; photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetInfoAsyncStringActionOfFlickrResultOfCollectionInfo">
            <summary>Sets the shim of Flickr.CollectionsGetInfoAsync(String collectionId, Action`1&lt;FlickrResult`1&lt;CollectionInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetInfoString">
            <summary>Sets the shim of Flickr.CollectionsGetInfo(String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetTree">
            <summary>Sets the shim of Flickr.CollectionsGetTree()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetTreeAsyncActionOfFlickrResultOfCollectionCollection">
            <summary>Sets the shim of Flickr.CollectionsGetTreeAsync(Action`1&lt;FlickrResult`1&lt;CollectionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetTreeAsyncStringStringActionOfFlickrResultOfCollectionCollection">
            <summary>Sets the shim of Flickr.CollectionsGetTreeAsync(String collectionId, String userId, Action`1&lt;FlickrResult`1&lt;CollectionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsGetTreeStringString">
            <summary>Sets the shim of Flickr.CollectionsGetTree(String collectionId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CollectionsRemoveSetStringString">
            <summary>Sets the shim of Flickr.CollectionsRemoveSet(String collectionId, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CommonsGetInstitutions">
            <summary>Sets the shim of Flickr.CommonsGetInstitutions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CommonsGetInstitutionsAsyncActionOfFlickrResultOfInstitutionCollection">
            <summary>Sets the shim of Flickr.CommonsGetInstitutionsAsync(Action`1&lt;FlickrResult`1&lt;InstitutionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetList">
            <summary>Sets the shim of Flickr.ContactsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListAsyncInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListAsyncStringInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListAsync(String filter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploaded">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedAsyncDateTimeActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(DateTime dateLastUpdated, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedAsyncDateTimeStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(DateTime dateLastUpdated, String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploadedAsync(String filter, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedDateTime">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(DateTime dateLastUpdated)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedDateTimeString">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(DateTime dateLastUpdated, String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListRecentlyUploadedString">
            <summary>Sets the shim of Flickr.ContactsGetListRecentlyUploaded(String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListString">
            <summary>Sets the shim of Flickr.ContactsGetList(String filter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetList(String filter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetPublicListAsyncStringActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetPublicListAsync(String userId, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetPublicListAsyncStringInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetPublicListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetPublicListString">
            <summary>Sets the shim of Flickr.ContactsGetPublicList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetPublicListStringInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetPublicList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetTaggingSuggestions">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetTaggingSuggestionsAsyncActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestionsAsync(Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetTaggingSuggestionsAsyncInt32Int32ActionOfFlickrResultOfContactCollection">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestionsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ContactCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ContactsGetTaggingSuggestionsInt32Int32">
            <summary>Sets the shim of Flickr.ContactsGetTaggingSuggestions(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ConvertNonSeekableStreamToByteArrayStream">
            <summary>Sets the shim of Flickr.ConvertNonSeekableStreamToByteArray(Stream nonSeekableStream)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CreateUploadDataStreamStringDictionaryOfStringStringString">
            <summary>Sets the shim of Flickr.CreateUploadData(Stream imageStream, String fileName, Dictionary`2&lt;String,String&gt; parameters, String boundary)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CurrentServiceGet">
            <summary>Sets the shim of Flickr.get_CurrentService()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.CurrentServiceSetSupportedService">
            <summary>Sets the shim of Flickr.set_CurrentService(SupportedService value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesAddAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.FavoritesAddAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesAddString">
            <summary>Sets the shim of Flickr.FavoritesAdd(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextAsyncStringStringActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextAsyncStringStringInt32Int32ActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Int32 numPrevious, Int32 numNext, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextAsyncStringStringInt32Int32PhotoSearchExtrasActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, Int32 numPrevious, Int32 numNext, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextAsyncStringStringPhotoSearchExtrasActionOfFlickrResultOfFavoriteContext">
            <summary>Sets the shim of Flickr.FavoritesGetContextAsync(String photoId, String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;FavoriteContext&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextStringString">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextStringStringInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, Int32 numPrevious, Int32 numNext)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextStringStringInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, Int32 numPrevious, Int32 numNext, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetContextStringStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetContext(String photoId, String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetList">
            <summary>Sets the shim of Flickr.FavoritesGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncStringDateTimeDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetListAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetList(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListString">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListStringDateTimeDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetListStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetList(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetPublicListAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetPublicListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetPublicListAsyncStringDateTimeDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.FavoritesGetPublicListAsync(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetPublicListString">
            <summary>Sets the shim of Flickr.FavoritesGetPublicList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesGetPublicListStringDateTimeDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.FavoritesGetPublicList(String userId, DateTime minFavoriteDate, DateTime maxFavoriteDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesRemoveAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.FavoritesRemoveAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.FavoritesRemoveString">
            <summary>Sets the shim of Flickr.FavoritesRemove(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesAddPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesAddPhotoAsync(String galleryId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesAddPhotoAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesAddPhotoAsync(String galleryId, String photoId, String comment, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesAddPhotoStringString">
            <summary>Sets the shim of Flickr.GalleriesAddPhoto(String galleryId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesAddPhotoStringStringString">
            <summary>Sets the shim of Flickr.GalleriesAddPhoto(String galleryId, String photoId, String comment)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesCreateAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesCreateAsync(String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesCreateAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesCreateAsync(String title, String description, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesCreateStringString">
            <summary>Sets the shim of Flickr.GalleriesCreate(String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesCreateStringStringString">
            <summary>Sets the shim of Flickr.GalleriesCreate(String title, String description, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditMetaAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditMetaAsync(String galleryId, String title, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditMetaAsync(String galleryId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditMetaStringString">
            <summary>Sets the shim of Flickr.GalleriesEditMeta(String galleryId, String title)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditMetaStringStringString">
            <summary>Sets the shim of Flickr.GalleriesEditMeta(String galleryId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditPhotoAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditPhotoAsync(String galleryId, String photoId, String comment, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditPhotoStringStringString">
            <summary>Sets the shim of Flickr.GalleriesEditPhoto(String galleryId, String photoId, String comment)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditPhotosAsyncStringStringIEnumerableOfStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GalleriesEditPhotosAsync(String galleryId, String primaryPhotoId, IEnumerable`1&lt;String&gt; photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesEditPhotosStringStringIEnumerableOfString">
            <summary>Sets the shim of Flickr.GalleriesEditPhotos(String galleryId, String primaryPhotoId, IEnumerable`1&lt;String&gt; photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetInfoAsyncStringActionOfFlickrResultOfGallery">
            <summary>Sets the shim of Flickr.GalleriesGetInfoAsync(String galleryId, Action`1&lt;FlickrResult`1&lt;Gallery&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetInfoString">
            <summary>Sets the shim of Flickr.GalleriesGetInfo(String galleryId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetList">
            <summary>Sets the shim of Flickr.GalleriesGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListAsyncActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListAsyncInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListAsyncStringActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListAsyncStringInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListForPhotoAsyncStringActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhotoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListForPhotoAsyncStringInt32Int32ActionOfFlickrResultOfGalleryCollection">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhotoAsync(String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GalleryCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListForPhotoString">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhoto(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListForPhotoStringInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetListForPhoto(String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListString">
            <summary>Sets the shim of Flickr.GalleriesGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GalleriesGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetPhotosAsyncStringActionOfFlickrResultOfGalleryPhotoCollection">
            <summary>Sets the shim of Flickr.GalleriesGetPhotosAsync(String galleryId, Action`1&lt;FlickrResult`1&lt;GalleryPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfGalleryPhotoCollection">
            <summary>Sets the shim of Flickr.GalleriesGetPhotosAsync(String galleryId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;GalleryPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetPhotosString">
            <summary>Sets the shim of Flickr.GalleriesGetPhotos(String galleryId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GalleriesGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.GalleriesGetPhotos(String galleryId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsBrowse">
            <summary>Sets the shim of Flickr.GroupsBrowse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsBrowseAsyncActionOfFlickrResultOfGroupCategory">
            <summary>Sets the shim of Flickr.GroupsBrowseAsync(Action`1&lt;FlickrResult`1&lt;GroupCategory&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsBrowseAsyncStringActionOfFlickrResultOfGroupCategory">
            <summary>Sets the shim of Flickr.GroupsBrowseAsync(String catId, Action`1&lt;FlickrResult`1&lt;GroupCategory&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsBrowseString">
            <summary>Sets the shim of Flickr.GroupsBrowse(String catId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesAddAsync(String topicId, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesAddStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesAdd(String topicId, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesDeleteAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesDeleteAsync(String topicId, String replyId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesDeleteStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesDelete(String topicId, String replyId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesEditAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesEditAsync(String topicId, String replyId, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesEditStringStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesEdit(String topicId, String replyId, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesGetInfoAsyncStringStringActionOfFlickrResultOfTopicReply">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetInfoAsync(String topicId, String replyId, Action`1&lt;FlickrResult`1&lt;TopicReply&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesGetInfoStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetInfo(String topicId, String replyId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesGetListAsyncStringInt32Int32ActionOfFlickrResultOfTopicReplyCollection">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetListAsync(String topicId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;TopicReplyCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussRepliesGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsDiscussRepliesGetList(String topicId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsAddAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsAddAsync(String groupId, String subject, String message, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsAddStringStringString">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsAdd(String groupId, String subject, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsGetInfoAsyncStringActionOfFlickrResultOfTopic">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetInfoAsync(String topicId, Action`1&lt;FlickrResult`1&lt;Topic&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsGetInfoString">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetInfo(String topicId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsGetListAsyncStringInt32Int32ActionOfFlickrResultOfTopicCollection">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetListAsync(String groupId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;TopicCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsDiscussTopicsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsDiscussTopicsGetList(String groupId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsGetInfoAsyncStringActionOfFlickrResultOfGroupFullInfo">
            <summary>Sets the shim of Flickr.GroupsGetInfoAsync(String groupId, Action`1&lt;FlickrResult`1&lt;GroupFullInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsGetInfoString">
            <summary>Sets the shim of Flickr.GroupsGetInfo(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinAsync(String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinAsyncStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinAsync(String groupId, Boolean acceptsRules, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinRequestAsyncStringStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsJoinRequestAsync(String groupId, String message, Boolean acceptRules, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinRequestStringStringBoolean">
            <summary>Sets the shim of Flickr.GroupsJoinRequest(String groupId, String message, Boolean acceptRules)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinString">
            <summary>Sets the shim of Flickr.GroupsJoin(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsJoinStringBoolean">
            <summary>Sets the shim of Flickr.GroupsJoin(String groupId, Boolean acceptRules)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsLeaveAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsLeaveAsync(String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsLeaveAsyncStringBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsLeaveAsync(String groupId, Boolean deletePhotos, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsLeaveString">
            <summary>Sets the shim of Flickr.GroupsLeave(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsLeaveStringBoolean">
            <summary>Sets the shim of Flickr.GroupsLeave(String groupId, Boolean deletePhotos)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsMembersGetListAsyncStringActionOfFlickrResultOfMemberCollection">
            <summary>Sets the shim of Flickr.GroupsMembersGetListAsync(String groupId, Action`1&lt;FlickrResult`1&lt;MemberCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsMembersGetListAsyncStringInt32Int32MemberTypesActionOfFlickrResultOfMemberCollection">
            <summary>Sets the shim of Flickr.GroupsMembersGetListAsync(String groupId, Int32 page, Int32 perPage, MemberTypes memberTypes, Action`1&lt;FlickrResult`1&lt;MemberCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsMembersGetListString">
            <summary>Sets the shim of Flickr.GroupsMembersGetList(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsMembersGetListStringInt32Int32MemberTypes">
            <summary>Sets the shim of Flickr.GroupsMembersGetList(String groupId, Int32 page, Int32 perPage, MemberTypes memberTypes)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsPoolsAddAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsAddStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsAdd(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetContextAsyncStringStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.GroupsPoolsGetContextAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetContextStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetContext(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetGroups">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetGroupsAsyncActionOfFlickrResultOfMemberGroupInfoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroupsAsync(Action`1&lt;FlickrResult`1&lt;MemberGroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetGroupsInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetGroups(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosAsyncStringStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosAsyncStringStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosAsyncStringStringStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotosAsync(String groupId, String tags, String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosStringStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsGetPhotosStringStringStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.GroupsPoolsGetPhotos(String groupId, String tags, String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsRemoveAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.GroupsPoolsRemoveAsync(String photoId, String groupId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsPoolsRemoveStringString">
            <summary>Sets the shim of Flickr.GroupsPoolsRemove(String photoId, String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchAsyncStringActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchAsyncStringInt32ActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Int32 page, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchAsyncStringInt32Int32ActionOfFlickrResultOfGroupSearchResultCollection">
            <summary>Sets the shim of Flickr.GroupsSearchAsync(String text, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;GroupSearchResultCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchString">
            <summary>Sets the shim of Flickr.GroupsSearch(String text)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchStringInt32">
            <summary>Sets the shim of Flickr.GroupsSearch(String text, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.GroupsSearchStringInt32Int32">
            <summary>Sets the shim of Flickr.GroupsSearch(String text, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.HttpTimeoutGet">
            <summary>Sets the shim of Flickr.get_HttpTimeout()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.HttpTimeoutSetInt32">
            <summary>Sets the shim of Flickr.set_HttpTimeout(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InstanceCacheDisabledGet">
            <summary>Sets the shim of Flickr.get_InstanceCacheDisabled()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InstanceCacheDisabledSetBoolean">
            <summary>Sets the shim of Flickr.set_InstanceCacheDisabled(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetList">
            <summary>Sets the shim of Flickr.InterestingnessGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListAsyncDateTimeActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(DateTime date, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.InterestingnessGetListAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListDateTime">
            <summary>Sets the shim of Flickr.InterestingnessGetList(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.InterestingnessGetList(DateTime date, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.InterestingnessGetListPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.InterestingnessGetList(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of Flickr.get_IsAuthenticated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.LastRequestGet">
            <summary>Sets the shim of Flickr.get_LastRequest()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.LastResponseGet">
            <summary>Sets the shim of Flickr.get_LastResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespaces">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesAsyncActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesAsyncInt32Int32ActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesAsyncStringActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(String predicate, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesAsyncStringInt32Int32ActionOfFlickrResultOfNamespaceCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespacesAsync(String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;NamespaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesString">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetNamespacesStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetNamespaces(String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairs">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsAsyncActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsAsyncInt32Int32ActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsAsyncStringStringActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsAsyncStringStringInt32Int32ActionOfFlickrResultOfPairCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPairsAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PairCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPairsStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPairs(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicates">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesAsyncActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesAsyncInt32Int32ActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesAsyncStringActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(String namespaceName, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesAsyncStringInt32Int32ActionOfFlickrResultOfPredicateCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicatesAsync(String namespaceName, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PredicateCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesString">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(String namespaceName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetPredicatesStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetPredicates(String namespaceName, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesAsyncDateTimeActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(DateTime addedSince, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesAsyncDateTimeInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(DateTime addedSince, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesAsyncStringStringActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesAsyncStringStringDateTimeInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, DateTime addedSince, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesAsyncStringStringInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValuesAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesDateTime">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(DateTime addedSince)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(DateTime addedSince, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesStringStringDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate, DateTime addedSince, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetRecentValuesStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetRecentValues(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetValuesAsyncStringStringActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetValuesAsync(String namespaceName, String predicate, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetValuesAsyncStringStringInt32Int32ActionOfFlickrResultOfValueCollection">
            <summary>Sets the shim of Flickr.MachineTagsGetValuesAsync(String namespaceName, String predicate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;ValueCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetValuesStringString">
            <summary>Sets the shim of Flickr.MachineTagsGetValues(String namespaceName, String predicate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.MachineTagsGetValuesStringStringInt32Int32">
            <summary>Sets the shim of Flickr.MachineTagsGetValues(String namespaceName, String predicate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthAccessTokenGet">
            <summary>Sets the shim of Flickr.get_OAuthAccessToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthAccessTokenSecretGet">
            <summary>Sets the shim of Flickr.get_OAuthAccessTokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthAccessTokenSecretSetString">
            <summary>Sets the shim of Flickr.set_OAuthAccessTokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthAccessTokenSetString">
            <summary>Sets the shim of Flickr.set_OAuthAccessToken(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthCalculateAuthorizationUrlStringAuthLevel">
            <summary>Sets the shim of Flickr.OAuthCalculateAuthorizationUrl(String requestToken, AuthLevel perms)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthCalculateAuthorizationUrlStringAuthLevelBoolean">
            <summary>Sets the shim of Flickr.OAuthCalculateAuthorizationUrl(String requestToken, AuthLevel perms, Boolean mobile)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthCalculateSignatureStringStringDictionaryOfStringStringString">
            <summary>Sets the shim of Flickr.OAuthCalculateSignature(String method, String url, Dictionary`2&lt;String,String&gt; parameters, String tokenSecret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetAccessTokenAsyncOAuthRequestTokenStringActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.OAuthGetAccessTokenAsync(OAuthRequestToken requestToken, String verifier, Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetAccessTokenAsyncStringStringStringActionOfFlickrResultOfOAuthAccessToken">
            <summary>Sets the shim of Flickr.OAuthGetAccessTokenAsync(String requestToken, String requestTokenSecret, String verifier, Action`1&lt;FlickrResult`1&lt;OAuthAccessToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetAccessTokenOAuthRequestTokenString">
            <summary>Sets the shim of Flickr.OAuthGetAccessToken(OAuthRequestToken requestToken, String verifier)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetAccessTokenStringStringString">
            <summary>Sets the shim of Flickr.OAuthGetAccessToken(String requestToken, String requestTokenSecret, String verifier)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetBasicParameters">
            <summary>Sets the shim of Flickr.OAuthGetBasicParameters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetBasicParametersDictionaryOfStringString">
            <summary>Sets the shim of Flickr.OAuthGetBasicParameters(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetRequestTokenAsyncStringActionOfFlickrResultOfOAuthRequestToken">
            <summary>Sets the shim of Flickr.OAuthGetRequestTokenAsync(String callbackUrl, Action`1&lt;FlickrResult`1&lt;OAuthRequestToken&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OAuthGetRequestTokenString">
            <summary>Sets the shim of Flickr.OAuthGetRequestToken(String callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OnUploadProgressAddEventHandlerOfUploadProgressEventArgs">
            <summary>Sets the shim of Flickr.add_OnUploadProgress(EventHandler`1&lt;UploadProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.OnUploadProgressRemoveEventHandlerOfUploadProgressEventArgs">
            <summary>Sets the shim of Flickr.remove_OnUploadProgress(EventHandler`1&lt;UploadProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetList">
            <summary>Sets the shim of Flickr.PandaGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetListAsyncActionOfFlickrResultOfStringArray">
            <summary>Sets the shim of Flickr.PandaGetListAsync(Action`1&lt;FlickrResult`1&lt;String[]&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosAsyncStringActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPandaPhotoCollection">
            <summary>Sets the shim of Flickr.PandaGetPhotosAsync(String pandaName, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PandaPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosString">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PandaGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PandaGetPhotos(String pandaName, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleFindByEmailAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.PeopleFindByEmailAsync(String emailAddress, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleFindByEmailString">
            <summary>Sets the shim of Flickr.PeopleFindByEmail(String emailAddress)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleFindByUserNameAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.PeopleFindByUserNameAsync(String userName, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleFindByUserNameString">
            <summary>Sets the shim of Flickr.PeopleFindByUserName(String userName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetGroupsAsyncStringActionOfFlickrResultOfGroupInfoCollection">
            <summary>Sets the shim of Flickr.PeopleGetGroupsAsync(String userId, Action`1&lt;FlickrResult`1&lt;GroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetGroupsString">
            <summary>Sets the shim of Flickr.PeopleGetGroups(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetInfoAsyncStringActionOfFlickrResultOfPerson">
            <summary>Sets the shim of Flickr.PeopleGetInfoAsync(String userId, Action`1&lt;FlickrResult`1&lt;Person&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetInfoString">
            <summary>Sets the shim of Flickr.PeopleGetInfo(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetLimits">
            <summary>Sets the shim of Flickr.PeopleGetLimits()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetLimitsAsyncActionOfFlickrResultOfPersonLimits">
            <summary>Sets the shim of Flickr.PeopleGetLimitsAsync(Action`1&lt;FlickrResult`1&lt;PersonLimits&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotos">
            <summary>Sets the shim of Flickr.PeopleGetPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosAsyncStringSafetyLevelDateTimeDateTimeDateTimeDateTimeContentTypeSearchPrivacyFilterPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosAsync(String userId, SafetyLevel safeSearch, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, ContentTypeSearch contentType, PrivacyFilter privacyFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOf">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfAsyncActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfAsyncStringActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfAsyncStringInt32Int32ActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPeoplePhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOfAsync(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PeoplePhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfString">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosOfStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotosOf(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosString">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPhotosStringSafetyLevelDateTimeDateTimeDateTimeDateTimeContentTypeSearchPrivacyFilterPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPhotos(String userId, SafetyLevel safeSearch, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, ContentTypeSearch contentType, PrivacyFilter privacyFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicGroupsAsyncStringActionOfFlickrResultOfGroupInfoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroupsAsync(String userId, Action`1&lt;FlickrResult`1&lt;GroupInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicGroupsString">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroups(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicGroupsStringNullableOfBoolean">
            <summary>Sets the shim of Flickr.PeopleGetPublicGroups(String userId, Nullable`1&lt;Boolean&gt; includeInvitationOnly)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosAsyncStringInt32Int32SafetyLevelPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotosAsync(String userId, Int32 page, Int32 perPage, SafetyLevel safetyLevel, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosString">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetPublicPhotosStringInt32Int32SafetyLevelPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PeopleGetPublicPhotos(String userId, Int32 page, Int32 perPage, SafetyLevel safetyLevel, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetUploadStatus">
            <summary>Sets the shim of Flickr.PeopleGetUploadStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PeopleGetUploadStatusAsyncActionOfFlickrResultOfUserStatus">
            <summary>Sets the shim of Flickr.PeopleGetUploadStatusAsync(Action`1&lt;FlickrResult`1&lt;UserStatus&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosAddTagsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosAddTagsAsync(String photoId, String tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosAddTagsAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosAddTagsAsync(String photoId, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosAddTagsStringString">
            <summary>Sets the shim of Flickr.PhotosAddTags(String photoId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosAddTagsStringStringArray">
            <summary>Sets the shim of Flickr.PhotosAddTags(String photoId, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsAddCommentAsyncStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosCommentsAddCommentAsync(String photoId, String commentText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsAddCommentStringString">
            <summary>Sets the shim of Flickr.PhotosCommentsAddComment(String photoId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsDeleteCommentAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosCommentsDeleteCommentAsync(String commentId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsDeleteCommentString">
            <summary>Sets the shim of Flickr.PhotosCommentsDeleteComment(String commentId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsEditCommentAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosCommentsEditCommentAsync(String commentId, String commentText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsEditCommentStringString">
            <summary>Sets the shim of Flickr.PhotosCommentsEditComment(String commentId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetListAsyncStringActionOfFlickrResultOfPhotoCommentCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetListAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoCommentCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetListString">
            <summary>Sets the shim of Flickr.PhotosCommentsGetList(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContacts">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(DateTime dateLastComment, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsAsyncDateTimeStringArrayPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(DateTime dateLastComment, String[] contactsFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContactsAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(DateTime dateLastComment, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsDateTimeStringArrayPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(DateTime dateLastComment, String[] contactsFilter, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosCommentsGetRecentForContactsInt32Int32">
            <summary>Sets the shim of Flickr.PhotosCommentsGetRecentForContacts(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosDeleteAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosDeleteString">
            <summary>Sets the shim of Flickr.PhotosDelete(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoBatchCorrectLocationAsyncDoubleDoubleGeoAccuracyStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoBatchCorrectLocationAsync(Double latitude, Double longitude, GeoAccuracy accuracy, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoBatchCorrectLocationDoubleDoubleGeoAccuracyStringString">
            <summary>Sets the shim of Flickr.PhotosGeoBatchCorrectLocation(Double latitude, Double longitude, GeoAccuracy accuracy, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoCorrectLocationAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoCorrectLocationAsync(String photoId, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoCorrectLocationStringStringString">
            <summary>Sets the shim of Flickr.PhotosGeoCorrectLocation(String photoId, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoGetLocationAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PhotosGeoGetLocationAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoGetLocationString">
            <summary>Sets the shim of Flickr.PhotosGeoGetLocation(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoGetPermsAsyncStringActionOfFlickrResultOfGeoPermissions">
            <summary>Sets the shim of Flickr.PhotosGeoGetPermsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;GeoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoGetPermsString">
            <summary>Sets the shim of Flickr.PhotosGeoGetPerms(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoPhotosForLocationAsyncDoubleDoubleGeoAccuracyPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGeoPhotosForLocationAsync(Double latitude, Double longitude, GeoAccuracy accuracy, PhotoSearchExtras extras, Int32 perPage, Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoPhotosForLocationDoubleDoubleGeoAccuracyPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGeoPhotosForLocation(Double latitude, Double longitude, GeoAccuracy accuracy, PhotoSearchExtras extras, Int32 perPage, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoRemoveLocationAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoRemoveLocationAsync(String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoRemoveLocationString">
            <summary>Sets the shim of Flickr.PhotosGeoRemoveLocation(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetContextAsyncStringGeoContextActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetContextAsync(String photoId, GeoContext context, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetContextStringGeoContext">
            <summary>Sets the shim of Flickr.PhotosGeoSetContext(String photoId, GeoContext context)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetLocationAsyncStringDoubleDoubleActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocationAsync(String photoId, Double latitude, Double longitude, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetLocationAsyncStringDoubleDoubleGeoAccuracyActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocationAsync(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetLocationStringDoubleDouble">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetLocationStringDoubleDoubleGeoAccuracy">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetLocationStringDoubleDoubleGeoAccuracyGeoContext">
            <summary>Sets the shim of Flickr.PhotosGeoSetLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, GeoContext context)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetPermsAsyncStringBooleanBooleanBooleanBooleanActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosGeoSetPermsAsync(String photoId, Boolean isPublic, Boolean isContact, Boolean isFamily, Boolean isFriend, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGeoSetPermsStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.PhotosGeoSetPerms(String photoId, Boolean isPublic, Boolean isContact, Boolean isFamily, Boolean isFriend)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetAllContextsAsyncStringActionOfFlickrResultOfAllContexts">
            <summary>Sets the shim of Flickr.PhotosGetAllContextsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;AllContexts&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetAllContextsString">
            <summary>Sets the shim of Flickr.PhotosGetAllContexts(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotos">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotosAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotosAsyncInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Int32 count, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotosAsyncInt32BooleanBooleanBooleanPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotosAsync(Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotosInt32">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos(Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPhotosInt32BooleanBooleanBooleanPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPhotos(Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringInt32BooleanBooleanBooleanActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringInt32BooleanBooleanBooleanPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringInt32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, Int32 count, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotosAsync(String userId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosString">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosStringInt32">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosStringInt32BooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosStringInt32BooleanBooleanBooleanPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, Boolean justFriends, Boolean singlePhoto, Boolean includeSelf, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosStringInt32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, Int32 count, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContactsPublicPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetContactsPublicPhotos(String userId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContextAsyncStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.PhotosGetContextAsync(String photoId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetContextString">
            <summary>Sets the shim of Flickr.PhotosGetContext(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsAsyncDateTimeArrayActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsAsyncDateTimeArrayBooleanActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, Boolean taken, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsAsyncDateTimeArrayDateTimeArrayActionOfFlickrResultOfPhotoCountCollection">
            <summary>Sets the shim of Flickr.PhotosGetCountsAsync(DateTime[] dates, DateTime[] takenDates, Action`1&lt;FlickrResult`1&lt;PhotoCountCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsDateTimeArray">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsDateTimeArrayBoolean">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates, Boolean taken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetCountsDateTimeArrayDateTimeArray">
            <summary>Sets the shim of Flickr.PhotosGetCounts(DateTime[] dates, DateTime[] takenDates)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetExifAsyncStringActionOfFlickrResultOfExifTagCollection">
            <summary>Sets the shim of Flickr.PhotosGetExifAsync(String photoId, Action`1&lt;FlickrResult`1&lt;ExifTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetExifAsyncStringStringActionOfFlickrResultOfExifTagCollection">
            <summary>Sets the shim of Flickr.PhotosGetExifAsync(String photoId, String secret, Action`1&lt;FlickrResult`1&lt;ExifTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetExifString">
            <summary>Sets the shim of Flickr.PhotosGetExif(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetExifStringString">
            <summary>Sets the shim of Flickr.PhotosGetExif(String photoId, String secret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetFavoritesAsyncStringActionOfFlickrResultOfPhotoFavoriteCollection">
            <summary>Sets the shim of Flickr.PhotosGetFavoritesAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoFavoriteCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetFavoritesAsyncStringInt32Int32ActionOfFlickrResultOfPhotoFavoriteCollection">
            <summary>Sets the shim of Flickr.PhotosGetFavoritesAsync(String photoId, Int32 perPage, Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoFavoriteCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetFavoritesString">
            <summary>Sets the shim of Flickr.PhotosGetFavorites(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetFavoritesStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetFavorites(String photoId, Int32 perPage, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetInfoAsyncStringActionOfFlickrResultOfPhotoInfo">
            <summary>Sets the shim of Flickr.PhotosGetInfoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetInfoAsyncStringStringActionOfFlickrResultOfPhotoInfo">
            <summary>Sets the shim of Flickr.PhotosGetInfoAsync(String photoId, String secret, Action`1&lt;FlickrResult`1&lt;PhotoInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetInfoString">
            <summary>Sets the shim of Flickr.PhotosGetInfo(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetInfoStringString">
            <summary>Sets the shim of Flickr.PhotosGetInfo(String photoId, String secret)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSet">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetAsyncInt32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetNotInSetAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetInt32">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetNotInSetPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetNotInSet(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetPermsAsyncStringActionOfFlickrResultOfPhotoPermissions">
            <summary>Sets the shim of Flickr.PhotosGetPermsAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetPermsString">
            <summary>Sets the shim of Flickr.PhotosGetPerms(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecent">
            <summary>Sets the shim of Flickr.PhotosGetRecent()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetRecentAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetRecent(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetRecent(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetRecentPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetRecent(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetSizesAsyncStringActionOfFlickrResultOfSizeCollection">
            <summary>Sets the shim of Flickr.PhotosGetSizesAsync(String photoId, Action`1&lt;FlickrResult`1&lt;SizeCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetSizesString">
            <summary>Sets the shim of Flickr.PhotosGetSizes(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntagged">
            <summary>Sets the shim of Flickr.PhotosGetUntagged()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedAsyncInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedAsyncInt32Int32PhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(Int32 page, Int32 perPage, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedAsyncPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetUntaggedAsync(PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedInt32Int32">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(Int32 page, Int32 perPage, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetUntaggedPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosGetUntagged(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithGeoData">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithGeoDataAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoDataAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithGeoDataAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoDataAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithGeoDataPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithGeoDataPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithGeoData(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithoutGeoData">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithoutGeoDataAsyncActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoDataAsync(Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithoutGeoDataAsyncPartialSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoDataAsync(PartialSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithoutGeoDataPartialSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData(PartialSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosGetWithoutGeoDataPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosGetWithoutGeoData(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosLicensesGetInfo">
            <summary>Sets the shim of Flickr.PhotosLicensesGetInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosLicensesGetInfoAsyncActionOfFlickrResultOfLicenseCollection">
            <summary>Sets the shim of Flickr.PhotosLicensesGetInfoAsync(Action`1&lt;FlickrResult`1&lt;LicenseCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosLicensesSetLicenseAsyncStringLicenseTypeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosLicensesSetLicenseAsync(String photoId, LicenseType license, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosLicensesSetLicenseStringLicenseType">
            <summary>Sets the shim of Flickr.PhotosLicensesSetLicense(String photoId, LicenseType license)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesAddAsyncStringInt32Int32Int32Int32StringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosNotesAddAsync(String photoId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesAddStringInt32Int32Int32Int32String">
            <summary>Sets the shim of Flickr.PhotosNotesAdd(String photoId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosNotesDeleteAsync(String noteId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesDeleteString">
            <summary>Sets the shim of Flickr.PhotosNotesDelete(String noteId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesEditAsyncStringInt32Int32Int32Int32StringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosNotesEditAsync(String noteId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosNotesEditStringInt32Int32Int32Int32String">
            <summary>Sets the shim of Flickr.PhotosNotesEdit(String noteId, Int32 noteX, Int32 noteY, Int32 noteWidth, Int32 noteHeight, String noteText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleAddAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleAddAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleAddAsyncStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleAddAsync(String photoId, String userId, Nullable`1&lt;Int32&gt; personX, Nullable`1&lt;Int32&gt; personY, Nullable`1&lt;Int32&gt; personWidth, Nullable`1&lt;Int32&gt; personHeight, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleAddStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleAdd(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleAddStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32">
            <summary>Sets the shim of Flickr.PhotosPeopleAdd(String photoId, String userId, Nullable`1&lt;Int32&gt; personX, Nullable`1&lt;Int32&gt; personY, Nullable`1&lt;Int32&gt; personWidth, Nullable`1&lt;Int32&gt; personHeight)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleDeleteAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleDeleteCoordsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteCoordsAsync(String photoId, String userId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleDeleteCoordsStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleDeleteCoords(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleDeleteStringString">
            <summary>Sets the shim of Flickr.PhotosPeopleDelete(String photoId, String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleEditCoordsAsyncStringStringInt32Int32Int32Int32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosPeopleEditCoordsAsync(String photoId, String userId, Int32 personX, Int32 personY, Int32 personWidth, Int32 personHeight, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleEditCoordsStringStringInt32Int32Int32Int32">
            <summary>Sets the shim of Flickr.PhotosPeopleEditCoords(String photoId, String userId, Int32 personX, Int32 personY, Int32 personWidth, Int32 personHeight)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleGetListAsyncStringActionOfFlickrResultOfPhotoPersonCollection">
            <summary>Sets the shim of Flickr.PhotosPeopleGetListAsync(String photoId, Action`1&lt;FlickrResult`1&lt;PhotoPersonCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosPeopleGetListString">
            <summary>Sets the shim of Flickr.PhotosPeopleGetList(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedAsyncDateTimeActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedAsyncDateTimeInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedAsyncDateTimePhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedAsyncDateTimePhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedDateTime">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedDateTimePhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRecentlyUpdatedDateTimePhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosRecentlyUpdated(DateTime minDate, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRemoveTagAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosRemoveTagAsync(String tagId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosRemoveTagString">
            <summary>Sets the shim of Flickr.PhotosRemoveTag(String tagId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSearchAsyncPhotoSearchOptionsActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosSearchAsync(PhotoSearchOptions options, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSearchPhotoSearchOptions">
            <summary>Sets the shim of Flickr.PhotosSearch(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetContentTypeAsyncStringContentTypeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetContentTypeAsync(String photoId, ContentType contentType, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetContentTypeStringContentType">
            <summary>Sets the shim of Flickr.PhotosSetContentType(String photoId, ContentType contentType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesAsyncStringDateTimeActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime datePosted, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesAsyncStringDateTimeDateGranularityActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime dateTaken, DateGranularity granularity, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesAsyncStringDateTimeDateTimeDateGranularityActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetDatesAsync(String photoId, DateTime datePosted, DateTime dateTaken, DateGranularity granularity, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesStringDateTime">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime datePosted)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesStringDateTimeDateGranularity">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime dateTaken, DateGranularity granularity)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetDatesStringDateTimeDateTimeDateGranularity">
            <summary>Sets the shim of Flickr.PhotosSetDates(String photoId, DateTime datePosted, DateTime dateTaken, DateGranularity granularity)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetMetaAsync(String photoId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetMetaStringStringString">
            <summary>Sets the shim of Flickr.PhotosSetMeta(String photoId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetPermsAsyncStringBooleanBooleanBooleanPermissionCommentPermissionAddMetaActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetPermsAsync(String photoId, Boolean isPublic, Boolean isFriend, Boolean isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetPermsAsyncStringInt32Int32Int32PermissionCommentPermissionAddMetaActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetPermsAsync(String photoId, Int32 isPublic, Int32 isFriend, Int32 isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetPermsStringBooleanBooleanBooleanPermissionCommentPermissionAddMeta">
            <summary>Sets the shim of Flickr.PhotosSetPerms(String photoId, Boolean isPublic, Boolean isFriend, Boolean isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetPermsStringInt32Int32Int32PermissionCommentPermissionAddMeta">
            <summary>Sets the shim of Flickr.PhotosSetPerms(String photoId, Int32 isPublic, Int32 isFriend, Int32 isFamily, PermissionComment permComment, PermissionAddMeta permAddMeta)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelAsyncStringHiddenFromSearchActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, HiddenFromSearch hidden, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelAsyncStringSafetyLevelActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, SafetyLevel safetyLevel, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelAsyncStringSafetyLevelHiddenFromSearchActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevelAsync(String photoId, SafetyLevel safetyLevel, HiddenFromSearch hidden, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelStringHiddenFromSearch">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, HiddenFromSearch hidden)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelStringSafetyLevel">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, SafetyLevel safetyLevel)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetSafetyLevelStringSafetyLevelHiddenFromSearch">
            <summary>Sets the shim of Flickr.PhotosSetSafetyLevel(String photoId, SafetyLevel safetyLevel, HiddenFromSearch hidden)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetTagsAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetTagsAsync(String photoId, String tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetTagsAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSetTagsAsync(String photoId, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetTagsStringString">
            <summary>Sets the shim of Flickr.PhotosSetTags(String photoId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSetTagsStringStringArray">
            <summary>Sets the shim of Flickr.PhotosSetTags(String photoId, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsApproveSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsApproveSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsApproveSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsApproveSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsGetListAsyncStringSuggestionStatusActionOfFlickrResultOfSuggestionCollection">
            <summary>Sets the shim of Flickr.PhotosSuggestionsGetListAsync(String photoId, SuggestionStatus status, Action`1&lt;FlickrResult`1&lt;SuggestionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsGetListStringSuggestionStatus">
            <summary>Sets the shim of Flickr.PhotosSuggestionsGetList(String photoId, SuggestionStatus status)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsRejectSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRejectSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsRejectSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRejectSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsRemoveSuggestionAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRemoveSuggestionAsync(String suggestionId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsRemoveSuggestionString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsRemoveSuggestion(String suggestionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsSuggestLocationAsyncStringDoubleDoubleGeoAccuracyStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosSuggestionsSuggestLocationAsync(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, String woeId, String placeId, String note, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosSuggestionsSuggestLocationStringDoubleDoubleGeoAccuracyStringStringString">
            <summary>Sets the shim of Flickr.PhotosSuggestionsSuggestLocation(String photoId, Double latitude, Double longitude, GeoAccuracy accuracy, String woeId, String placeId, String note)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosTransformRotateAsyncStringInt32ActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosTransformRotateAsync(String photoId, Int32 degrees, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosTransformRotateStringInt32">
            <summary>Sets the shim of Flickr.PhotosTransformRotate(String photoId, Int32 degrees)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosUploadCheckTicketsAsyncStringArrayActionOfFlickrResultOfTicketCollection">
            <summary>Sets the shim of Flickr.PhotosUploadCheckTicketsAsync(String[] tickets, Action`1&lt;FlickrResult`1&lt;TicketCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosUploadCheckTicketsStringArray">
            <summary>Sets the shim of Flickr.PhotosUploadCheckTickets(String[] tickets)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsAddPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsAddPhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsAddPhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsAddPhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsAddCommentAsyncStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsAddCommentAsync(String photosetId, String commentText, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsAddCommentStringString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsAddComment(String photosetId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsDeleteCommentAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsCommentsDeleteCommentAsync(String commentId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsDeleteCommentString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsDeleteComment(String commentId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsEditCommentAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsCommentsEditCommentAsync(String commentId, String commentText, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsEditCommentStringString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsEditComment(String commentId, String commentText)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsGetListAsyncStringActionOfFlickrResultOfPhotosetCommentCollection">
            <summary>Sets the shim of Flickr.PhotosetsCommentsGetListAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;PhotosetCommentCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCommentsGetListString">
            <summary>Sets the shim of Flickr.PhotosetsCommentsGetList(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCreateAsyncStringStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsCreateAsync(String title, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCreateAsyncStringStringStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsCreateAsync(String title, String description, String primaryPhotoId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCreateStringString">
            <summary>Sets the shim of Flickr.PhotosetsCreate(String title, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsCreateStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsCreate(String title, String description, String primaryPhotoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsDeleteAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsDeleteAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsDeleteString">
            <summary>Sets the shim of Flickr.PhotosetsDelete(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditMetaAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditMetaAsync(String photosetId, String title, String description, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditMetaStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsEditMeta(String photosetId, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditPhotosAsyncStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotosAsync(String photosetId, String primaryPhotoId, String photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditPhotosAsyncStringStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotosAsync(String photosetId, String primaryPhotoId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditPhotosStringStringString">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotos(String photosetId, String primaryPhotoId, String photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsEditPhotosStringStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsEditPhotos(String photosetId, String primaryPhotoId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetContextAsyncStringStringActionOfFlickrResultOfContext">
            <summary>Sets the shim of Flickr.PhotosetsGetContextAsync(String photoId, String photosetId, Action`1&lt;FlickrResult`1&lt;Context&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetContextStringString">
            <summary>Sets the shim of Flickr.PhotosetsGetContext(String photoId, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetInfoAsyncStringActionOfFlickrResultOfPhotoset">
            <summary>Sets the shim of Flickr.PhotosetsGetInfoAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;Photoset&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetInfoString">
            <summary>Sets the shim of Flickr.PhotosetsGetInfo(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetList">
            <summary>Sets the shim of Flickr.PhotosetsGetList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListAsyncActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListAsyncInt32Int32ActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListAsyncStringActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(String userId, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListAsyncStringInt32Int32ActionOfFlickrResultOfPhotosetCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetListAsync(String userId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetList(Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListString">
            <summary>Sets the shim of Flickr.PhotosetsGetList(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetListStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetList(String userId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPhotoSearchExtrasPrivacyFilterInt32Int32MediaTypeActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, MediaType media, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPrivacyFilterActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PrivacyFilter privacyFilter, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosAsyncStringPrivacyFilterInt32Int32ActionOfFlickrResultOfPhotosetPhotoCollection">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotosAsync(String photosetId, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PhotosetPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosString">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPhotoSearchExtrasInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilter">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilterInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPhotoSearchExtrasPrivacyFilterInt32Int32MediaType">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, Int32 page, Int32 perPage, MediaType media)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPrivacyFilter">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PrivacyFilter privacyFilter)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsGetPhotosStringPrivacyFilterInt32Int32">
            <summary>Sets the shim of Flickr.PhotosetsGetPhotos(String photosetId, PrivacyFilter privacyFilter, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsOrderSetsAsyncIEnumerableOfStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(IEnumerable`1&lt;String&gt; photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsOrderSetsAsyncStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(String photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsOrderSetsAsyncStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsOrderSetsAsync(String[] photosetIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsOrderSetsString">
            <summary>Sets the shim of Flickr.PhotosetsOrderSets(String photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsOrderSetsStringArray">
            <summary>Sets the shim of Flickr.PhotosetsOrderSets(String[] photosetIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsRemovePhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsRemovePhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsRemovePhotosAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotosAsync(String photosetId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsRemovePhotosStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsRemovePhotos(String photosetId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsReorderPhotosAsyncStringStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsReorderPhotosAsync(String photosetId, String[] photoIds, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsReorderPhotosStringStringArray">
            <summary>Sets the shim of Flickr.PhotosetsReorderPhotos(String photosetId, String[] photoIds)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsSetPrimaryPhotoAsyncStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PhotosetsSetPrimaryPhotoAsync(String photosetId, String photoId, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PhotosetsSetPrimaryPhotoStringString">
            <summary>Sets the shim of Flickr.PhotosetsSetPrimaryPhoto(String photosetId, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindAsyncStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesFindAsync(String query, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindByLatLonAsyncDoubleDoubleActionOfFlickrResultOfPlace">
            <summary>Sets the shim of Flickr.PlacesFindByLatLonAsync(Double latitude, Double longitude, Action`1&lt;FlickrResult`1&lt;Place&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindByLatLonAsyncDoubleDoubleGeoAccuracyActionOfFlickrResultOfPlace">
            <summary>Sets the shim of Flickr.PlacesFindByLatLonAsync(Double latitude, Double longitude, GeoAccuracy accuracy, Action`1&lt;FlickrResult`1&lt;Place&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindByLatLonDoubleDouble">
            <summary>Sets the shim of Flickr.PlacesFindByLatLon(Double latitude, Double longitude)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindByLatLonDoubleDoubleGeoAccuracy">
            <summary>Sets the shim of Flickr.PlacesFindByLatLon(Double latitude, Double longitude, GeoAccuracy accuracy)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesFindString">
            <summary>Sets the shim of Flickr.PlacesFind(String query)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetChildrenWithPhotosPublicAsyncStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetChildrenWithPhotosPublicAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetChildrenWithPhotosPublicStringString">
            <summary>Sets the shim of Flickr.PlacesGetChildrenWithPhotosPublic(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetInfoAsyncStringStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesGetInfoAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetInfoByUrlAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesGetInfoByUrlAsync(String url, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetInfoByUrlString">
            <summary>Sets the shim of Flickr.PlacesGetInfoByUrl(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetInfoStringString">
            <summary>Sets the shim of Flickr.PlacesGetInfo(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetPlaceTypes">
            <summary>Sets the shim of Flickr.PlacesGetPlaceTypes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetPlaceTypesAsyncActionOfFlickrResultOfPlaceTypeInfoCollection">
            <summary>Sets the shim of Flickr.PlacesGetPlaceTypesAsync(Action`1&lt;FlickrResult`1&lt;PlaceTypeInfoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetShapeHistoryAsyncStringStringActionOfFlickrResultOfShapeDataCollection">
            <summary>Sets the shim of Flickr.PlacesGetShapeHistoryAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;ShapeDataCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetShapeHistoryStringString">
            <summary>Sets the shim of Flickr.PlacesGetShapeHistory(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListAsyncPlaceTypeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListAsyncPlaceTypeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, DateTime date, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListAsyncPlaceTypeDateTimeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, DateTime date, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListAsyncPlaceTypeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesListAsync(PlaceType placeType, String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListPlaceType">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListPlaceTypeDateTime">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListPlaceTypeDateTimeStringString">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, DateTime date, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesGetTopPlacesListPlaceTypeStringString">
            <summary>Sets the shim of Flickr.PlacesGetTopPlacesList(PlaceType placeType, String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForBoundingBoxAsyncPlaceTypeStringStringBoundaryBoxActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForBoundingBoxAsync(PlaceType placeType, String woeId, String placeId, BoundaryBox boundaryBox, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForBoundingBoxPlaceTypeStringStringBoundaryBox">
            <summary>Sets the shim of Flickr.PlacesPlacesForBoundingBox(PlaceType placeType, String woeId, String placeId, BoundaryBox boundaryBox)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForContactsAsyncPlaceTypeStringStringInt32ContactSearchDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForContactsAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, ContactSearch contactType, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForContactsPlaceTypeStringStringInt32ContactSearchDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForContacts(PlaceType placeType, String woeId, String placeId, Int32 threshold, ContactSearch contactType, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForTagsAsyncPlaceTypeStringStringInt32StringArrayTagModeStringArrayMachineTagModeDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForTagsAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, String[] tags, TagMode tagMode, String[] machineTags, MachineTagMode machineTagMode, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForTagsPlaceTypeStringStringInt32StringArrayTagModeStringArrayMachineTagModeDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForTags(PlaceType placeType, String woeId, String placeId, Int32 threshold, String[] tags, TagMode tagMode, String[] machineTags, MachineTagMode machineTagMode, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUser">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUserAsyncActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUserAsyncPlaceTypeStringStringActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(PlaceType placeType, String woeId, String placeId, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUserAsyncPlaceTypeStringStringInt32DateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfPlaceCollection">
            <summary>Sets the shim of Flickr.PlacesPlacesForUserAsync(PlaceType placeType, String woeId, String placeId, Int32 threshold, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;PlaceCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUserPlaceTypeStringString">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser(PlaceType placeType, String woeId, String placeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesPlacesForUserPlaceTypeStringStringInt32DateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesPlacesForUser(PlaceType placeType, String woeId, String placeId, Int32 threshold, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesResolvePlaceIdAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceIdAsync(String placeId, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesResolvePlaceIdString">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceId(String placeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesResolvePlaceUrlAsyncStringActionOfFlickrResultOfPlaceInfo">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceUrlAsync(String url, Action`1&lt;FlickrResult`1&lt;PlaceInfo&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesResolvePlaceUrlString">
            <summary>Sets the shim of Flickr.PlacesResolvePlaceUrl(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesTagsForPlaceAsyncStringStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.PlacesTagsForPlaceAsync(String placeId, String woeId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesTagsForPlaceAsyncStringStringDateTimeDateTimeDateTimeDateTimeActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.PlacesTagsForPlaceAsync(String placeId, String woeId, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesTagsForPlaceStringString">
            <summary>Sets the shim of Flickr.PlacesTagsForPlace(String placeId, String woeId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PlacesTagsForPlaceStringStringDateTimeDateTimeDateTimeDateTime">
            <summary>Sets the shim of Flickr.PlacesTagsForPlace(String placeId, String woeId, DateTime minUploadDate, DateTime maxUploadDate, DateTime minTakenDate, DateTime maxTakenDate)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetContentType">
            <summary>Sets the shim of Flickr.PrefsGetContentType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetContentTypeAsyncActionOfFlickrResultOfContentType">
            <summary>Sets the shim of Flickr.PrefsGetContentTypeAsync(Action`1&lt;FlickrResult`1&lt;ContentType&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetGeoPerms">
            <summary>Sets the shim of Flickr.PrefsGetGeoPerms()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetGeoPermsAsyncActionOfFlickrResultOfUserGeoPermissions">
            <summary>Sets the shim of Flickr.PrefsGetGeoPermsAsync(Action`1&lt;FlickrResult`1&lt;UserGeoPermissions&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetHidden">
            <summary>Sets the shim of Flickr.PrefsGetHidden()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetHiddenAsyncActionOfFlickrResultOfHiddenFromSearch">
            <summary>Sets the shim of Flickr.PrefsGetHiddenAsync(Action`1&lt;FlickrResult`1&lt;HiddenFromSearch&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetPrivacy">
            <summary>Sets the shim of Flickr.PrefsGetPrivacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetPrivacyAsyncActionOfFlickrResultOfPrivacyFilter">
            <summary>Sets the shim of Flickr.PrefsGetPrivacyAsync(Action`1&lt;FlickrResult`1&lt;PrivacyFilter&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetSafetyLevel">
            <summary>Sets the shim of Flickr.PrefsGetSafetyLevel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PrefsGetSafetyLevelAsyncActionOfFlickrResultOfSafetyLevel">
            <summary>Sets the shim of Flickr.PrefsGetSafetyLevelAsync(Action`1&lt;FlickrResult`1&lt;SafetyLevel&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ProxyGet">
            <summary>Sets the shim of Flickr.get_Proxy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ProxySetWebProxy">
            <summary>Sets the shim of Flickr.set_Proxy(WebProxy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushGetSubscriptions">
            <summary>Sets the shim of Flickr.PushGetSubscriptions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushGetSubscriptionsAsyncActionOfFlickrResultOfSubscriptionCollection">
            <summary>Sets the shim of Flickr.PushGetSubscriptionsAsync(Action`1&lt;FlickrResult`1&lt;SubscriptionCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushGetTopics">
            <summary>Sets the shim of Flickr.PushGetTopics()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushGetTopicsAsyncActionOfFlickrResultOfStringArray">
            <summary>Sets the shim of Flickr.PushGetTopicsAsync(Action`1&lt;FlickrResult`1&lt;String[]&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushSubscribeAsyncStringStringStringStringInt32Int32ArrayStringArrayDoubleDoubleInt32RadiusUnitGeoAccuracyStringArrayStringArrayActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PushSubscribeAsync(String topic, String callback, String verify, String verifyToken, Int32 leaseSeconds, Int32[] woeIds, String[] placeIds, Double latitude, Double longitude, Int32 radius, RadiusUnit radiusUnits, GeoAccuracy accuracy, String[] nsids, String[] tags, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callbackAction)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushSubscribeStringStringStringStringInt32Int32ArrayStringArrayDoubleDoubleInt32RadiusUnitGeoAccuracyStringArrayStringArray">
            <summary>Sets the shim of Flickr.PushSubscribe(String topic, String callback, String verify, String verifyToken, Int32 leaseSeconds, Int32[] woeIds, String[] placeIds, Double latitude, Double longitude, Int32 radius, RadiusUnit radiusUnits, GeoAccuracy accuracy, String[] nsids, String[] tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushUnsubscribeAsyncStringStringStringStringActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.PushUnsubscribeAsync(String topic, String callback, String verify, String verifyToken, Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callbackAction)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.PushUnsubscribeStringStringStringString">
            <summary>Sets the shim of Flickr.PushUnsubscribe(String topic, String callback, String verify, String verifyToken)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReflectionGetMethodInfoAsyncStringActionOfFlickrResultOfMethod">
            <summary>Sets the shim of Flickr.ReflectionGetMethodInfoAsync(String methodName, Action`1&lt;FlickrResult`1&lt;Method&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReflectionGetMethodInfoString">
            <summary>Sets the shim of Flickr.ReflectionGetMethodInfo(String methodName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReflectionGetMethods">
            <summary>Sets the shim of Flickr.ReflectionGetMethods()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReflectionGetMethodsAsyncActionOfFlickrResultOfMethodCollection">
            <summary>Sets the shim of Flickr.ReflectionGetMethodsAsync(Action`1&lt;FlickrResult`1&lt;MethodCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReplacePictureAsyncStreamStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.ReplacePictureAsync(Stream stream, String fileName, String photoId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReplacePictureStreamStringString">
            <summary>Sets the shim of Flickr.ReplacePicture(Stream stream, String fileName, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReplacePictureStringString">
            <summary>Sets the shim of Flickr.ReplacePicture(String fullFileName, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.ReplaceUrlGet">
            <summary>Sets the shim of Flickr.get_ReplaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, String collectionId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomainsAsync(DateTime date, String collectionId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionDomains(DateTime date, String collectionId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, String collectionId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrersAsync(DateTime date, String domain, String collectionId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetCollectionReferrers(DateTime date, String domain, String collectionId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetCollectionStatsAsync(DateTime date, String collectionId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCollectionStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetCollectionStats(DateTime date, String collectionId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCsvFiles">
            <summary>Sets the shim of Flickr.StatsGetCsvFiles()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetCsvFilesAsyncActionOfFlickrResultOfCsvFileCollection">
            <summary>Sets the shim of Flickr.StatsGetCsvFilesAsync(Action`1&lt;FlickrResult`1&lt;CsvFileCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, String photoId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomainsAsync(DateTime date, String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoDomains(DateTime date, String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, String photoId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrersAsync(DateTime date, String domain, String photoId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotoReferrers(DateTime date, String domain, String photoId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotoStatsAsync(DateTime date, String photoId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotoStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotoStats(DateTime date, String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsAsyncDateTimeStringActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, String photosetId, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomainsAsync(DateTime date, String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetDomainsDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetDomains(DateTime date, String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersAsyncDateTimeStringStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, String photosetId, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersAsyncDateTimeStringStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrersAsync(DateTime date, String domain, String photosetId, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersDateTimeStringString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetReferrersDateTimeStringStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotosetReferrers(DateTime date, String domain, String photosetId, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetStatsAsyncDateTimeStringActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotosetStatsAsync(DateTime date, String photosetId, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotosetStatsDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotosetStats(DateTime date, String photosetId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamDomainsAsyncDateTimeActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomainsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamDomainsAsyncDateTimeInt32Int32ActionOfFlickrResultOfStatDomainCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomainsAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatDomainCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamDomainsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomains(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamDomainsDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamDomains(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamReferrersAsyncDateTimeStringActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrersAsync(DateTime date, String domain, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamReferrersAsyncDateTimeStringInt32Int32ActionOfFlickrResultOfStatReferrerCollection">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrersAsync(DateTime date, String domain, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;StatReferrerCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamReferrersDateTimeString">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrers(DateTime date, String domain)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamReferrersDateTimeStringInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamReferrers(DateTime date, String domain, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamStatsAsyncDateTimeActionOfFlickrResultOfStats">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamStatsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;Stats&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPhotostreamStatsDateTime">
            <summary>Sets the shim of Flickr.StatsGetPhotostreamStats(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotos">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncDateTimeActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncDateTimeInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncDateTimePopularitySortInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(DateTime date, PopularitySort sort, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncPopularitySortActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(PopularitySort sort, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosAsyncPopularitySortInt32Int32ActionOfFlickrResultOfPopularPhotoCollection">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotosAsync(PopularitySort sort, Int32 page, Int32 perPage, Action`1&lt;FlickrResult`1&lt;PopularPhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosDateTime">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosDateTimeInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosDateTimePopularitySortInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(DateTime date, PopularitySort sort, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosPopularitySort">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(PopularitySort sort)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetPopularPhotosPopularitySortInt32Int32">
            <summary>Sets the shim of Flickr.StatsGetPopularPhotos(PopularitySort sort, Int32 page, Int32 perPage)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetTotalViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetTotalViewsAsyncActionOfFlickrResultOfStatViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViewsAsync(Action`1&lt;FlickrResult`1&lt;StatViews&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetTotalViewsAsyncDateTimeActionOfFlickrResultOfStatViews">
            <summary>Sets the shim of Flickr.StatsGetTotalViewsAsync(DateTime date, Action`1&lt;FlickrResult`1&lt;StatViews&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.StatsGetTotalViewsDateTime">
            <summary>Sets the shim of Flickr.StatsGetTotalViews(DateTime date)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosAsyncClusterActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(Cluster cluster, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosAsyncClusterPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(Cluster cluster, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosAsyncStringStringPhotoSearchExtrasActionOfFlickrResultOfPhotoCollection">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotosAsync(String tag, String clusterId, PhotoSearchExtras extras, Action`1&lt;FlickrResult`1&lt;PhotoCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosCluster">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(Cluster cluster)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosClusterPhotoSearchExtras">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(Cluster cluster, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClusterPhotosStringStringPhotoSearchExtras">
            <summary>Sets the shim of Flickr.TagsGetClusterPhotos(String tag, String clusterId, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClustersAsyncStringActionOfFlickrResultOfClusterCollection">
            <summary>Sets the shim of Flickr.TagsGetClustersAsync(String tag, Action`1&lt;FlickrResult`1&lt;ClusterCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetClustersString">
            <summary>Sets the shim of Flickr.TagsGetClusters(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetHotList">
            <summary>Sets the shim of Flickr.TagsGetHotList()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetHotListAsyncActionOfFlickrResultOfHotTagCollection">
            <summary>Sets the shim of Flickr.TagsGetHotListAsync(Action`1&lt;FlickrResult`1&lt;HotTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetHotListAsyncStringInt32ActionOfFlickrResultOfHotTagCollection">
            <summary>Sets the shim of Flickr.TagsGetHotListAsync(String period, Int32 count, Action`1&lt;FlickrResult`1&lt;HotTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetHotListStringInt32">
            <summary>Sets the shim of Flickr.TagsGetHotList(String period, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListPhotoAsyncStringActionOfFlickrResultOfCollectionOfPhotoInfoTag">
            <summary>Sets the shim of Flickr.TagsGetListPhotoAsync(String photoId, Action`1&lt;FlickrResult`1&lt;Collection`1&lt;PhotoInfoTag&gt;&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListPhotoString">
            <summary>Sets the shim of Flickr.TagsGetListPhoto(String photoId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUser">
            <summary>Sets the shim of Flickr.TagsGetListUser()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserAsync(String userId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopular">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularAsyncInt32ActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(Int32 count, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(String userId, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularAsyncStringInt32ActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserPopularAsync(String userId, Int32 count, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularInt32">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularString">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserPopularStringInt32">
            <summary>Sets the shim of Flickr.TagsGetListUserPopular(String userId, Int32 count)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserRaw">
            <summary>Sets the shim of Flickr.TagsGetListUserRaw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserRawAsyncActionOfFlickrResultOfRawTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserRawAsync(Action`1&lt;FlickrResult`1&lt;RawTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserRawAsyncStringActionOfFlickrResultOfRawTagCollection">
            <summary>Sets the shim of Flickr.TagsGetListUserRawAsync(String tag, Action`1&lt;FlickrResult`1&lt;RawTagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserRawString">
            <summary>Sets the shim of Flickr.TagsGetListUserRaw(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetListUserString">
            <summary>Sets the shim of Flickr.TagsGetListUser(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetMostFrequentlyUsed">
            <summary>Sets the shim of Flickr.TagsGetMostFrequentlyUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetMostFrequentlyUsedAsyncActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetMostFrequentlyUsedAsync(Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetRelatedAsyncStringActionOfFlickrResultOfTagCollection">
            <summary>Sets the shim of Flickr.TagsGetRelatedAsync(String tag, Action`1&lt;FlickrResult`1&lt;TagCollection&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TagsGetRelatedString">
            <summary>Sets the shim of Flickr.TagsGetRelated(String tag)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestEchoAsyncDictionaryOfStringStringActionOfFlickrResultOfEchoResponseDictionary">
            <summary>Sets the shim of Flickr.TestEchoAsync(Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;EchoResponseDictionary&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestEchoDictionaryOfStringString">
            <summary>Sets the shim of Flickr.TestEcho(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestGenericAsyncStringDictionaryOfStringStringActionOfFlickrResultOfUnknownResponse">
            <summary>Sets the shim of Flickr.TestGenericAsync(String method, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;UnknownResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestGenericStringDictionaryOfStringString">
            <summary>Sets the shim of Flickr.TestGeneric(String method, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestLogin">
            <summary>Sets the shim of Flickr.TestLogin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestLoginAsyncActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.TestLoginAsync(Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestNull">
            <summary>Sets the shim of Flickr.TestNull()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.TestNullAsyncActionOfFlickrResultOfNoResponse">
            <summary>Sets the shim of Flickr.TestNullAsync(Action`1&lt;FlickrResult`1&lt;NoResponse&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadDataAsyncStreamStringUriDictionaryOfStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UploadDataAsync(Stream imageStream, String fileName, Uri uploadUri, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadDataStreamStringUriDictionaryOfStringString">
            <summary>Sets the shim of Flickr.UploadData(Stream imageStream, String fileName, Uri uploadUri, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureAsyncStreamStringStringStringStringBooleanBooleanBooleanContentTypeSafetyLevelHiddenFromSearchActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UploadPictureAsync(Stream stream, String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend, ContentType contentType, SafetyLevel safetyLevel, HiddenFromSearch hiddenFromSearch, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureStreamStringStringStringStringBooleanBooleanBooleanContentTypeSafetyLevelHiddenFromSearch">
            <summary>Sets the shim of Flickr.UploadPicture(Stream stream, String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend, ContentType contentType, SafetyLevel safetyLevel, HiddenFromSearch hiddenFromSearch)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureStringStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureStringStringStringString">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadPictureStringStringStringStringBooleanBooleanBoolean">
            <summary>Sets the shim of Flickr.UploadPicture(String fileName, String title, String description, String tags, Boolean isPublic, Boolean isFamily, Boolean isFriend)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UploadUrlGet">
            <summary>Sets the shim of Flickr.get_UploadUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetGroupAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetGroupAsync(String groupId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetGroupString">
            <summary>Sets the shim of Flickr.UrlsGetGroup(String groupId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserPhotos">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserPhotosAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotosAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserPhotosAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotosAsync(String userId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserPhotosString">
            <summary>Sets the shim of Flickr.UrlsGetUserPhotos(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserProfile">
            <summary>Sets the shim of Flickr.UrlsGetUserProfile()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserProfileAsyncActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfileAsync(Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserProfileAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfileAsync(String userId, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsGetUserProfileString">
            <summary>Sets the shim of Flickr.UrlsGetUserProfile(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupGalleryAsyncStringActionOfFlickrResultOfGallery">
            <summary>Sets the shim of Flickr.UrlsLookupGalleryAsync(String url, Action`1&lt;FlickrResult`1&lt;Gallery&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupGalleryString">
            <summary>Sets the shim of Flickr.UrlsLookupGallery(String url)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupGroupAsyncStringActionOfFlickrResultOfString">
            <summary>Sets the shim of Flickr.UrlsLookupGroupAsync(String urlToFind, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupGroupString">
            <summary>Sets the shim of Flickr.UrlsLookupGroup(String urlToFind)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupUserAsyncStringActionOfFlickrResultOfFoundUser">
            <summary>Sets the shim of Flickr.UrlsLookupUserAsync(String urlToFind, Action`1&lt;FlickrResult`1&lt;FoundUser&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickr.AllInstances.UrlsLookupUserString">
            <summary>Sets the shim of Flickr.UrlsLookupUser(String urlToFind)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrApiException">
            <summary>Shim type of FlickrNet.FlickrApiException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrApiException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrApiException.#ctor(FlickrNet.FlickrApiException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrApiException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrApiException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrApiException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.CodeGet">
            <summary>Sets the shim of FlickrApiException.get_Code()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.CodeSetInt32">
            <summary>Sets the shim of FlickrApiException.set_Code(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.Constructor">
            <summary>Sets the shim of FlickrApiException.FlickrApiException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.ConstructorInt32String">
            <summary>Sets the shim of FlickrApiException.FlickrApiException(Int32 code, String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.ConstructorString">
            <summary>Sets the shim of FlickrApiException.FlickrApiException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.ConstructorStringException">
            <summary>Sets the shim of FlickrApiException.FlickrApiException(String message, Exception innerException)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.MessageGet">
            <summary>Sets the shim of FlickrApiException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.OriginalMessageGet">
            <summary>Sets the shim of FlickrApiException.get_OriginalMessage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.OriginalMessageSetString">
            <summary>Sets the shim of FlickrApiException.set_OriginalMessage(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrApiException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.AllInstances.CodeGet">
            <summary>Sets the shim of FlickrApiException.get_Code()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.AllInstances.CodeSetInt32">
            <summary>Sets the shim of FlickrApiException.set_Code(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.AllInstances.MessageGet">
            <summary>Sets the shim of FlickrApiException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.AllInstances.OriginalMessageGet">
            <summary>Sets the shim of FlickrApiException.get_OriginalMessage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrApiException.AllInstances.OriginalMessageSetString">
            <summary>Sets the shim of FlickrApiException.set_OriginalMessage(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrException">
            <summary>Shim type of FlickrNet.FlickrException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrException.#ctor(FlickrNet.FlickrException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrException.Constructor">
            <summary>Sets the shim of FlickrException.FlickrException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrException.ConstructorString">
            <summary>Sets the shim of FlickrException.FlickrException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrException.ConstructorStringException">
            <summary>Sets the shim of FlickrException.FlickrException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrResponder">
            <summary>Shim type of FlickrNet.FlickrResponder</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResponder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResponder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResponder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.DownloadDataAsyncStringStringStringStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of FlickrResponder.DownloadDataAsync(String method, String baseUrl, String data, String contentType, String authHeader, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.DownloadDataStringStringStringStringString">
            <summary>Sets the shim of FlickrResponder.DownloadData(String method, String baseUrl, String data, String contentType, String authHeader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseAsyncFlickrStringDictionaryOfStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of FlickrResponder.GetDataResponseAsync(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseFlickrStringDictionaryOfStringString">
            <summary>Sets the shim of FlickrResponder.GetDataResponse(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseNormalAsyncFlickrStringDictionaryOfStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of FlickrResponder.GetDataResponseNormalAsync(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseNormalFlickrStringDictionaryOfStringString">
            <summary>Sets the shim of FlickrResponder.GetDataResponseNormal(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseOAuthAsyncFlickrStringDictionaryOfStringStringActionOfFlickrResultOfString">
            <summary>Sets the shim of FlickrResponder.GetDataResponseOAuthAsync(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters, Action`1&lt;FlickrResult`1&lt;String&gt;&gt; callback)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.GetDataResponseOAuthFlickrStringDictionaryOfStringString">
            <summary>Sets the shim of FlickrResponder.GetDataResponseOAuth(Flickr flickr, String baseUrl, Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.OAuthCalculateAuthHeaderDictionaryOfStringString">
            <summary>Sets the shim of FlickrResponder.OAuthCalculateAuthHeader(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResponder.OAuthCalculatePostDataDictionaryOfStringString">
            <summary>Sets the shim of FlickrResponder.OAuthCalculatePostData(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrResult`1">
            <summary>Shim type of FlickrNet.FlickrResult`1</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResult`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResult`1.#ctor(FlickrNet.FlickrResult{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResult`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrResult`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.Constructor">
            <summary>Sets the shim of FlickrResult`1.FlickrResult`1()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorCodeGet">
            <summary>Sets the shim of FlickrResult`1.get_ErrorCode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorCodeSetInt32">
            <summary>Sets the shim of FlickrResult`1.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorGet">
            <summary>Sets the shim of FlickrResult`1.get_Error()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorMessageGet">
            <summary>Sets the shim of FlickrResult`1.get_ErrorMessage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorMessageSetString">
            <summary>Sets the shim of FlickrResult`1.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ErrorSetException">
            <summary>Sets the shim of FlickrResult`1.set_Error(Exception value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.HasErrorGet">
            <summary>Sets the shim of FlickrResult`1.get_HasError()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.HasErrorSetBoolean">
            <summary>Sets the shim of FlickrResult`1.set_HasError(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ResultGet">
            <summary>Sets the shim of FlickrResult`1.get_Result()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.ResultSetT0">
            <summary>Sets the shim of FlickrResult`1.set_Result(!0 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of FlickrResult`1.get_ErrorCode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorCodeSetInt32">
            <summary>Sets the shim of FlickrResult`1.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorGet">
            <summary>Sets the shim of FlickrResult`1.get_Error()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of FlickrResult`1.get_ErrorMessage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorMessageSetString">
            <summary>Sets the shim of FlickrResult`1.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ErrorSetException">
            <summary>Sets the shim of FlickrResult`1.set_Error(Exception value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.HasErrorGet">
            <summary>Sets the shim of FlickrResult`1.get_HasError()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.HasErrorSetBoolean">
            <summary>Sets the shim of FlickrResult`1.set_HasError(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ResultGet">
            <summary>Sets the shim of FlickrResult`1.get_Result()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrResult`1.AllInstances.ResultSetT0">
            <summary>Sets the shim of FlickrResult`1.set_Result(!0 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrWebException">
            <summary>Shim type of FlickrNet.FlickrWebException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrWebException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrWebException.#ctor(FlickrNet.FlickrWebException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrWebException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrWebException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFlickrWebException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrWebException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrWebException.Constructor">
            <summary>Sets the shim of FlickrWebException.FlickrWebException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrWebException.ConstructorString">
            <summary>Sets the shim of FlickrWebException.FlickrWebException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFlickrWebException.ConstructorStringException">
            <summary>Sets the shim of FlickrWebException.FlickrWebException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFlickrWebException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFoundUser">
            <summary>Shim type of FlickrNet.FoundUser</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFoundUser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFoundUser.#ctor(FlickrNet.FoundUser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFoundUser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFoundUser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimFoundUser.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.Constructor">
            <summary>Sets the shim of FoundUser.FoundUser()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FoundUser.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.FullNameGet">
            <summary>Sets the shim of FoundUser.get_FullName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.FullNameSetString">
            <summary>Sets the shim of FoundUser.set_FullName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.UserIdGet">
            <summary>Sets the shim of FoundUser.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.UserIdSetString">
            <summary>Sets the shim of FoundUser.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.UserNameGet">
            <summary>Sets the shim of FoundUser.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.UserNameSetString">
            <summary>Sets the shim of FoundUser.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimFoundUser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of FoundUser.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.FullNameGet">
            <summary>Sets the shim of FoundUser.get_FullName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.FullNameSetString">
            <summary>Sets the shim of FoundUser.set_FullName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.UserIdGet">
            <summary>Sets the shim of FoundUser.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.UserIdSetString">
            <summary>Sets the shim of FoundUser.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.UserNameGet">
            <summary>Sets the shim of FoundUser.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimFoundUser.AllInstances.UserNameSetString">
            <summary>Sets the shim of FoundUser.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGallery">
            <summary>Shim type of FlickrNet.Gallery</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGallery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGallery.#ctor(FlickrNet.Gallery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGallery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGallery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGallery.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.CommentCountGet">
            <summary>Sets the shim of Gallery.get_CommentCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.CommentCountSetInt32">
            <summary>Sets the shim of Gallery.set_CommentCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.Constructor">
            <summary>Sets the shim of Gallery.Gallery()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DateCreatedGet">
            <summary>Sets the shim of Gallery.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DateCreatedSetDateTime">
            <summary>Sets the shim of Gallery.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DateLastUpdatedGet">
            <summary>Sets the shim of Gallery.get_DateLastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DateLastUpdatedSetDateTime">
            <summary>Sets the shim of Gallery.set_DateLastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DescriptionGet">
            <summary>Sets the shim of Gallery.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.DescriptionSetString">
            <summary>Sets the shim of Gallery.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Gallery.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.GalleryIdGet">
            <summary>Sets the shim of Gallery.get_GalleryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.GalleryIdSetString">
            <summary>Sets the shim of Gallery.set_GalleryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.GalleryUrlGet">
            <summary>Sets the shim of Gallery.get_GalleryUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.GalleryUrlSetString">
            <summary>Sets the shim of Gallery.set_GalleryUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerBuddyIconGet">
            <summary>Sets the shim of Gallery.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerFarmGet">
            <summary>Sets the shim of Gallery.get_OwnerFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerFarmSetString">
            <summary>Sets the shim of Gallery.set_OwnerFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerIdGet">
            <summary>Sets the shim of Gallery.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerIdSetString">
            <summary>Sets the shim of Gallery.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerServerGet">
            <summary>Sets the shim of Gallery.get_OwnerServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.OwnerServerSetString">
            <summary>Sets the shim of Gallery.set_OwnerServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PhotosCountGet">
            <summary>Sets the shim of Gallery.get_PhotosCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PhotosCountSetInt32">
            <summary>Sets the shim of Gallery.set_PhotosCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoFarmGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoFarmSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoIdGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoIdSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoMediumUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoMediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoSecretGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoSecretSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoServerGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoServerSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoSmallUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoSquareThumbnailUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.PrimaryPhotoThumbnailUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.TitleGet">
            <summary>Sets the shim of Gallery.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.TitleSetString">
            <summary>Sets the shim of Gallery.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.UsernameGet">
            <summary>Sets the shim of Gallery.get_Username()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.UsernameSetString">
            <summary>Sets the shim of Gallery.set_Username(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.VideosCountGet">
            <summary>Sets the shim of Gallery.get_VideosCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.VideosCountSetInt32">
            <summary>Sets the shim of Gallery.set_VideosCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.ViewCountGet">
            <summary>Sets the shim of Gallery.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.ViewCountSetInt32">
            <summary>Sets the shim of Gallery.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGallery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.CommentCountGet">
            <summary>Sets the shim of Gallery.get_CommentCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.CommentCountSetInt32">
            <summary>Sets the shim of Gallery.set_CommentCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DateCreatedGet">
            <summary>Sets the shim of Gallery.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of Gallery.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DateLastUpdatedGet">
            <summary>Sets the shim of Gallery.get_DateLastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DateLastUpdatedSetDateTime">
            <summary>Sets the shim of Gallery.set_DateLastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DescriptionGet">
            <summary>Sets the shim of Gallery.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Gallery.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Gallery.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.GalleryIdGet">
            <summary>Sets the shim of Gallery.get_GalleryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.GalleryIdSetString">
            <summary>Sets the shim of Gallery.set_GalleryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.GalleryUrlGet">
            <summary>Sets the shim of Gallery.get_GalleryUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.GalleryUrlSetString">
            <summary>Sets the shim of Gallery.set_GalleryUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerBuddyIconGet">
            <summary>Sets the shim of Gallery.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerFarmGet">
            <summary>Sets the shim of Gallery.get_OwnerFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerFarmSetString">
            <summary>Sets the shim of Gallery.set_OwnerFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerIdGet">
            <summary>Sets the shim of Gallery.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerIdSetString">
            <summary>Sets the shim of Gallery.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerServerGet">
            <summary>Sets the shim of Gallery.get_OwnerServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.OwnerServerSetString">
            <summary>Sets the shim of Gallery.set_OwnerServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PhotosCountGet">
            <summary>Sets the shim of Gallery.get_PhotosCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PhotosCountSetInt32">
            <summary>Sets the shim of Gallery.set_PhotosCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoFarmGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoFarmSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoIdGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoIdSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoMediumUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoMediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoSecretGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoSecretSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoServerGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoServerSetString">
            <summary>Sets the shim of Gallery.set_PrimaryPhotoServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoSmallUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoSquareThumbnailUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.PrimaryPhotoThumbnailUrlGet">
            <summary>Sets the shim of Gallery.get_PrimaryPhotoThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.TitleGet">
            <summary>Sets the shim of Gallery.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.TitleSetString">
            <summary>Sets the shim of Gallery.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.UsernameGet">
            <summary>Sets the shim of Gallery.get_Username()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.UsernameSetString">
            <summary>Sets the shim of Gallery.set_Username(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.VideosCountGet">
            <summary>Sets the shim of Gallery.get_VideosCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.VideosCountSetInt32">
            <summary>Sets the shim of Gallery.set_VideosCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.ViewCountGet">
            <summary>Sets the shim of Gallery.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGallery.AllInstances.ViewCountSetInt32">
            <summary>Sets the shim of Gallery.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryCollection">
            <summary>Shim type of FlickrNet.GalleryCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.#ctor(FlickrNet.GalleryCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Gallery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Gallery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.Generic.IList{FlickrNet.Gallery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Gallery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Gallery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.Constructor">
            <summary>Sets the shim of GalleryCollection.GalleryCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PageGet">
            <summary>Sets the shim of GalleryCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PageSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PagesGet">
            <summary>Sets the shim of GalleryCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PagesSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PerPageGet">
            <summary>Sets the shim of GalleryCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PerPageSetInt32">
            <summary>Sets the shim of GalleryCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PhotoIdGet">
            <summary>Sets the shim of GalleryCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.PhotoIdSetString">
            <summary>Sets the shim of GalleryCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.TotalGet">
            <summary>Sets the shim of GalleryCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.TotalSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.UserIdGet">
            <summary>Sets the shim of GalleryCollection.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.UserIdSetString">
            <summary>Sets the shim of GalleryCollection.set_UserId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PageGet">
            <summary>Sets the shim of GalleryCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PagesGet">
            <summary>Sets the shim of GalleryCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of GalleryCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of GalleryCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PhotoIdGet">
            <summary>Sets the shim of GalleryCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of GalleryCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.TotalGet">
            <summary>Sets the shim of GalleryCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of GalleryCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.UserIdGet">
            <summary>Sets the shim of GalleryCollection.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryCollection.AllInstances.UserIdSetString">
            <summary>Sets the shim of GalleryCollection.set_UserId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryPhoto">
            <summary>Shim type of FlickrNet.GalleryPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhoto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhoto.#ctor(FlickrNet.GalleryPhoto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhoto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhoto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhoto.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.CommentGet">
            <summary>Sets the shim of GalleryPhoto.get_Comment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.CommentSetString">
            <summary>Sets the shim of GalleryPhoto.set_Comment(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.Constructor">
            <summary>Sets the shim of GalleryPhoto.GalleryPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryPhoto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.AllInstances.CommentGet">
            <summary>Sets the shim of GalleryPhoto.get_Comment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.AllInstances.CommentSetString">
            <summary>Sets the shim of GalleryPhoto.set_Comment(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhoto.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryPhotoCollection">
            <summary>Shim type of FlickrNet.GalleryPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.#ctor(FlickrNet.GalleryPhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.GalleryPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.GalleryPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.GalleryPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.GalleryPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGalleryPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.GalleryPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.Constructor">
            <summary>Sets the shim of GalleryPhotoCollection.GalleryPhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PageGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PageSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PagesGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PagesSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PerPageGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.PerPageSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.TotalGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.TotalSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GalleryPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PageGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PagesGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of GalleryPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGalleryPhotoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of GalleryPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGeoPermissions">
            <summary>Shim type of FlickrNet.GeoPermissions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGeoPermissions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGeoPermissions.#ctor(FlickrNet.GeoPermissions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGeoPermissions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGeoPermissions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGeoPermissions.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.Constructor">
            <summary>Sets the shim of GeoPermissions.GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GeoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsContactGet">
            <summary>Sets the shim of GeoPermissions.get_IsContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsContactSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsContact(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsFamilyGet">
            <summary>Sets the shim of GeoPermissions.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsFamilySetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsFriendGet">
            <summary>Sets the shim of GeoPermissions.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsFriendSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsPublicGet">
            <summary>Sets the shim of GeoPermissions.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.IsPublicSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.PhotoIdGet">
            <summary>Sets the shim of GeoPermissions.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.PhotoIdSetString">
            <summary>Sets the shim of GeoPermissions.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGeoPermissions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GeoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsContactGet">
            <summary>Sets the shim of GeoPermissions.get_IsContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsContactSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsContact(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsFamilyGet">
            <summary>Sets the shim of GeoPermissions.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsFamilySetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsFriendGet">
            <summary>Sets the shim of GeoPermissions.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsFriendSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsPublicGet">
            <summary>Sets the shim of GeoPermissions.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.IsPublicSetBoolean">
            <summary>Sets the shim of GeoPermissions.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.PhotoIdGet">
            <summary>Sets the shim of GeoPermissions.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGeoPermissions.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of GeoPermissions.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroup">
            <summary>Shim type of FlickrNet.Group</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroup.#ctor(FlickrNet.Group)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.Constructor">
            <summary>Sets the shim of Group.Group()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.GroupIdGet">
            <summary>Sets the shim of Group.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.GroupIdSetString">
            <summary>Sets the shim of Group.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.GroupNameGet">
            <summary>Sets the shim of Group.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.GroupNameSetString">
            <summary>Sets the shim of Group.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.MembersGet">
            <summary>Sets the shim of Group.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.MembersSetInt32">
            <summary>Sets the shim of Group.set_Members(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.GroupIdGet">
            <summary>Sets the shim of Group.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.GroupIdSetString">
            <summary>Sets the shim of Group.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.GroupNameGet">
            <summary>Sets the shim of Group.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.GroupNameSetString">
            <summary>Sets the shim of Group.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.MembersGet">
            <summary>Sets the shim of Group.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroup.AllInstances.MembersSetInt32">
            <summary>Sets the shim of Group.set_Members(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupCategory">
            <summary>Shim type of FlickrNet.GroupCategory</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupCategory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupCategory.#ctor(FlickrNet.GroupCategory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupCategory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupCategory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupCategory.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.CategoryNameGet">
            <summary>Sets the shim of GroupCategory.get_CategoryName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.CategoryNameSetString">
            <summary>Sets the shim of GroupCategory.set_CategoryName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.Constructor">
            <summary>Sets the shim of GroupCategory.GroupCategory()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupCategory.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.GroupsGet">
            <summary>Sets the shim of GroupCategory.get_Groups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.GroupsSetCollectionOfGroup">
            <summary>Sets the shim of GroupCategory.set_Groups(Collection`1&lt;Group&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.PathGet">
            <summary>Sets the shim of GroupCategory.get_Path()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.PathIdsGet">
            <summary>Sets the shim of GroupCategory.get_PathIds()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.PathIdsSetString">
            <summary>Sets the shim of GroupCategory.set_PathIds(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.PathSetString">
            <summary>Sets the shim of GroupCategory.set_Path(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.SubcategoriesGet">
            <summary>Sets the shim of GroupCategory.get_Subcategories()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.SubcategoriesSetCollectionOfSubcategory">
            <summary>Sets the shim of GroupCategory.set_Subcategories(Collection`1&lt;Subcategory&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupCategory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.CategoryNameGet">
            <summary>Sets the shim of GroupCategory.get_CategoryName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.CategoryNameSetString">
            <summary>Sets the shim of GroupCategory.set_CategoryName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupCategory.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.GroupsGet">
            <summary>Sets the shim of GroupCategory.get_Groups()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.GroupsSetCollectionOfGroup">
            <summary>Sets the shim of GroupCategory.set_Groups(Collection`1&lt;Group&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.PathGet">
            <summary>Sets the shim of GroupCategory.get_Path()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.PathIdsGet">
            <summary>Sets the shim of GroupCategory.get_PathIds()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.PathIdsSetString">
            <summary>Sets the shim of GroupCategory.set_PathIds(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.PathSetString">
            <summary>Sets the shim of GroupCategory.set_Path(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.SubcategoriesGet">
            <summary>Sets the shim of GroupCategory.get_Subcategories()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupCategory.AllInstances.SubcategoriesSetCollectionOfSubcategory">
            <summary>Sets the shim of GroupCategory.set_Subcategories(Collection`1&lt;Subcategory&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupFullInfo">
            <summary>Shim type of FlickrNet.GroupFullInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupFullInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupFullInfo.#ctor(FlickrNet.GroupFullInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupFullInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupFullInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupFullInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AdminRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_AdminRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AdminRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_AdminRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastDateAddedGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastDateAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastDateAddedSetNullableOfDateTime">
            <summary>Sets the shim of GroupFullInfo.set_BlastDateAdded(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastHtmlGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastHtml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastHtmlSetString">
            <summary>Sets the shim of GroupFullInfo.set_BlastHtml(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastUserIdGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.BlastUserIdSetString">
            <summary>Sets the shim of GroupFullInfo.set_BlastUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.Constructor">
            <summary>Sets the shim of GroupFullInfo.GroupFullInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.DescriptionGet">
            <summary>Sets the shim of GroupFullInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.DescriptionSetString">
            <summary>Sets the shim of GroupFullInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupFullInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.GroupIconUrlGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.GroupIdGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.GroupIdSetString">
            <summary>Sets the shim of GroupFullInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.GroupNameGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.GroupNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IconFarmGet">
            <summary>Sets the shim of GroupFullInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IconFarmSetString">
            <summary>Sets the shim of GroupFullInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IconServerGet">
            <summary>Sets the shim of GroupFullInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IconServerSetString">
            <summary>Sets the shim of GroupFullInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ImplicitOpGroupFullInfoGroup">
            <summary>Sets the shim of GroupFullInfo.op_Implicit(GroupFullInfo groupInfo)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IsPoolModeratedGet">
            <summary>Sets the shim of GroupFullInfo.get_IsPoolModerated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.IsPoolModeratedSetBoolean">
            <summary>Sets the shim of GroupFullInfo.set_IsPoolModerated(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.LanguageGet">
            <summary>Sets the shim of GroupFullInfo.get_Language()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.LanguageSetString">
            <summary>Sets the shim of GroupFullInfo.set_Language(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.MemberRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_MemberRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.MemberRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_MemberRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.MembersGet">
            <summary>Sets the shim of GroupFullInfo.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.MembersSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ModeratorRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_ModeratorRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ModeratorRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_ModeratorRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.PoolCountGet">
            <summary>Sets the shim of GroupFullInfo.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.PoolCountSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_PoolCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.PrivacyGet">
            <summary>Sets the shim of GroupFullInfo.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.PrivacySetPoolPrivacy">
            <summary>Sets the shim of GroupFullInfo.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.RestrictionsGet">
            <summary>Sets the shim of GroupFullInfo.get_Restrictions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.RestrictionsSetGroupInfoRestrictions">
            <summary>Sets the shim of GroupFullInfo.set_Restrictions(GroupInfoRestrictions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.RulesGet">
            <summary>Sets the shim of GroupFullInfo.get_Rules()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.RulesSetString">
            <summary>Sets the shim of GroupFullInfo.set_Rules(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ThrottleInfoGet">
            <summary>Sets the shim of GroupFullInfo.get_ThrottleInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ThrottleInfoSetGroupThrottleInfo">
            <summary>Sets the shim of GroupFullInfo.set_ThrottleInfo(GroupThrottleInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.ToGroup">
            <summary>Sets the shim of GroupFullInfo.ToGroup()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.TopicCountGet">
            <summary>Sets the shim of GroupFullInfo.get_TopicCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.TopicCountSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_TopicCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.AdminRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_AdminRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.AdminRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_AdminRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastDateAddedGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastDateAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastDateAddedSetNullableOfDateTime">
            <summary>Sets the shim of GroupFullInfo.set_BlastDateAdded(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastHtmlGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastHtml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastHtmlSetString">
            <summary>Sets the shim of GroupFullInfo.set_BlastHtml(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastUserIdGet">
            <summary>Sets the shim of GroupFullInfo.get_BlastUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.BlastUserIdSetString">
            <summary>Sets the shim of GroupFullInfo.set_BlastUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of GroupFullInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.DescriptionSetString">
            <summary>Sets the shim of GroupFullInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupFullInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.GroupIdGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.GroupIdSetString">
            <summary>Sets the shim of GroupFullInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.GroupNameGet">
            <summary>Sets the shim of GroupFullInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.GroupNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IconFarmGet">
            <summary>Sets the shim of GroupFullInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IconFarmSetString">
            <summary>Sets the shim of GroupFullInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IconServerGet">
            <summary>Sets the shim of GroupFullInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IconServerSetString">
            <summary>Sets the shim of GroupFullInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IsPoolModeratedGet">
            <summary>Sets the shim of GroupFullInfo.get_IsPoolModerated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.IsPoolModeratedSetBoolean">
            <summary>Sets the shim of GroupFullInfo.set_IsPoolModerated(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.LanguageGet">
            <summary>Sets the shim of GroupFullInfo.get_Language()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.LanguageSetString">
            <summary>Sets the shim of GroupFullInfo.set_Language(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.MemberRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_MemberRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.MemberRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_MemberRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.MembersGet">
            <summary>Sets the shim of GroupFullInfo.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.MembersSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.ModeratorRoleNameGet">
            <summary>Sets the shim of GroupFullInfo.get_ModeratorRoleName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.ModeratorRoleNameSetString">
            <summary>Sets the shim of GroupFullInfo.set_ModeratorRoleName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.PoolCountGet">
            <summary>Sets the shim of GroupFullInfo.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.PoolCountSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_PoolCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.PrivacyGet">
            <summary>Sets the shim of GroupFullInfo.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.PrivacySetPoolPrivacy">
            <summary>Sets the shim of GroupFullInfo.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.RestrictionsGet">
            <summary>Sets the shim of GroupFullInfo.get_Restrictions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.RestrictionsSetGroupInfoRestrictions">
            <summary>Sets the shim of GroupFullInfo.set_Restrictions(GroupInfoRestrictions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.RulesGet">
            <summary>Sets the shim of GroupFullInfo.get_Rules()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.RulesSetString">
            <summary>Sets the shim of GroupFullInfo.set_Rules(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.ThrottleInfoGet">
            <summary>Sets the shim of GroupFullInfo.get_ThrottleInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.ThrottleInfoSetGroupThrottleInfo">
            <summary>Sets the shim of GroupFullInfo.set_ThrottleInfo(GroupThrottleInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.ToGroup">
            <summary>Sets the shim of GroupFullInfo.ToGroup()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.TopicCountGet">
            <summary>Sets the shim of GroupFullInfo.get_TopicCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupFullInfo.AllInstances.TopicCountSetInt32">
            <summary>Sets the shim of GroupFullInfo.set_TopicCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfo">
            <summary>Shim type of FlickrNet.GroupInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfo.#ctor(FlickrNet.GroupInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.Constructor">
            <summary>Sets the shim of GroupInfo.GroupInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.EighteenPlusGet">
            <summary>Sets the shim of GroupInfo.get_EighteenPlus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.EighteenPlusSetBoolean">
            <summary>Sets the shim of GroupInfo.set_EighteenPlus(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupIconUrlGet">
            <summary>Sets the shim of GroupInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupIdGet">
            <summary>Sets the shim of GroupInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupIdSetString">
            <summary>Sets the shim of GroupInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupNameGet">
            <summary>Sets the shim of GroupInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupNameSetString">
            <summary>Sets the shim of GroupInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.GroupUrlGet">
            <summary>Sets the shim of GroupInfo.get_GroupUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IconFarmGet">
            <summary>Sets the shim of GroupInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IconFarmSetString">
            <summary>Sets the shim of GroupInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IconServerGet">
            <summary>Sets the shim of GroupInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IconServerSetString">
            <summary>Sets the shim of GroupInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.InvitationOnlyGet">
            <summary>Sets the shim of GroupInfo.get_InvitationOnly()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.InvitationOnlySetBoolean">
            <summary>Sets the shim of GroupInfo.set_InvitationOnly(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IsAdminGet">
            <summary>Sets the shim of GroupInfo.get_IsAdmin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.IsAdminSetBoolean">
            <summary>Sets the shim of GroupInfo.set_IsAdmin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.MembersGet">
            <summary>Sets the shim of GroupInfo.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.MembersSetInt32">
            <summary>Sets the shim of GroupInfo.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.PoolCountGet">
            <summary>Sets the shim of GroupInfo.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.PoolCountSetInt64">
            <summary>Sets the shim of GroupInfo.set_PoolCount(Int64 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.EighteenPlusGet">
            <summary>Sets the shim of GroupInfo.get_EighteenPlus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.EighteenPlusSetBoolean">
            <summary>Sets the shim of GroupInfo.set_EighteenPlus(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of GroupInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupIdGet">
            <summary>Sets the shim of GroupInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupIdSetString">
            <summary>Sets the shim of GroupInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupNameGet">
            <summary>Sets the shim of GroupInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupNameSetString">
            <summary>Sets the shim of GroupInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.GroupUrlGet">
            <summary>Sets the shim of GroupInfo.get_GroupUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IconFarmGet">
            <summary>Sets the shim of GroupInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IconFarmSetString">
            <summary>Sets the shim of GroupInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IconServerGet">
            <summary>Sets the shim of GroupInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IconServerSetString">
            <summary>Sets the shim of GroupInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.InvitationOnlyGet">
            <summary>Sets the shim of GroupInfo.get_InvitationOnly()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.InvitationOnlySetBoolean">
            <summary>Sets the shim of GroupInfo.set_InvitationOnly(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IsAdminGet">
            <summary>Sets the shim of GroupInfo.get_IsAdmin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.IsAdminSetBoolean">
            <summary>Sets the shim of GroupInfo.set_IsAdmin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.MembersGet">
            <summary>Sets the shim of GroupInfo.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.MembersSetInt32">
            <summary>Sets the shim of GroupInfo.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.PoolCountGet">
            <summary>Sets the shim of GroupInfo.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfo.AllInstances.PoolCountSetInt64">
            <summary>Sets the shim of GroupInfo.set_PoolCount(Int64 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfoCollection">
            <summary>Shim type of FlickrNet.GroupInfoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.#ctor(FlickrNet.GroupInfoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.GroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.GroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.Generic.IList{FlickrNet.GroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.GroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.GroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoCollection.Constructor">
            <summary>Sets the shim of GroupInfoCollection.GroupInfoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfoRestrictions">
            <summary>Shim type of FlickrNet.GroupInfoRestrictions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoRestrictions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoRestrictions.#ctor(FlickrNet.GroupInfoRestrictions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoRestrictions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoRestrictions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupInfoRestrictions.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ArtIllustrationsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ArtIllustrationsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ArtIllustrationsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ArtIllustrationsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.Constructor">
            <summary>Sets the shim of GroupInfoRestrictions.GroupInfoRestrictions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfoRestrictions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.GeoInfoRequiredGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_GeoInfoRequired()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.GeoInfoRequiredSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_GeoInfoRequired(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ImagesAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ImagesAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ImagesAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ImagesAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ModeratedItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ModeratedItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ModeratedItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ModeratedItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.PhotosAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_PhotosAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.PhotosAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_PhotosAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.RestrictedItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_RestrictedItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.RestrictedItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_RestrictedItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.SafeItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_SafeItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.SafeItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_SafeItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ScreenshotsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ScreenshotsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.ScreenshotsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ScreenshotsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.VideosAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_VideosAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.VideosAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_VideosAccepted(Boolean value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ArtIllustrationsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ArtIllustrationsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ArtIllustrationsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ArtIllustrationsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupInfoRestrictions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.GeoInfoRequiredGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_GeoInfoRequired()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.GeoInfoRequiredSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_GeoInfoRequired(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ImagesAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ImagesAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ImagesAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ImagesAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ModeratedItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ModeratedItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ModeratedItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ModeratedItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.PhotosAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_PhotosAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.PhotosAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_PhotosAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.RestrictedItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_RestrictedItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.RestrictedItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_RestrictedItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.SafeItemsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_SafeItemsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.SafeItemsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_SafeItemsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ScreenshotsAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_ScreenshotsAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.ScreenshotsAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_ScreenshotsAccepted(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.VideosAcceptedGet">
            <summary>Sets the shim of GroupInfoRestrictions.get_VideosAccepted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupInfoRestrictions.AllInstances.VideosAcceptedSetBoolean">
            <summary>Sets the shim of GroupInfoRestrictions.set_VideosAccepted(Boolean value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupSearchResult">
            <summary>Shim type of FlickrNet.GroupSearchResult</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResult.#ctor(FlickrNet.GroupSearchResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResult.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.Constructor">
            <summary>Sets the shim of GroupSearchResult.GroupSearchResult()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.EighteenPlusGet">
            <summary>Sets the shim of GroupSearchResult.get_EighteenPlus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.EighteenPlusSetBoolean">
            <summary>Sets the shim of GroupSearchResult.set_EighteenPlus(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupSearchResult.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.GroupIconUrlGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.GroupIdGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.GroupIdSetString">
            <summary>Sets the shim of GroupSearchResult.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.GroupNameGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.GroupNameSetString">
            <summary>Sets the shim of GroupSearchResult.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.IconFarmGet">
            <summary>Sets the shim of GroupSearchResult.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.IconFarmSetString">
            <summary>Sets the shim of GroupSearchResult.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.IconServerGet">
            <summary>Sets the shim of GroupSearchResult.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.IconServerSetString">
            <summary>Sets the shim of GroupSearchResult.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.MembersGet">
            <summary>Sets the shim of GroupSearchResult.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.MembersSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.PoolCountGet">
            <summary>Sets the shim of GroupSearchResult.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.PoolCountSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_PoolCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.TopicCountGet">
            <summary>Sets the shim of GroupSearchResult.get_TopicCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.TopicCountSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_TopicCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.EighteenPlusGet">
            <summary>Sets the shim of GroupSearchResult.get_EighteenPlus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.EighteenPlusSetBoolean">
            <summary>Sets the shim of GroupSearchResult.set_EighteenPlus(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupSearchResult.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.GroupIdGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.GroupIdSetString">
            <summary>Sets the shim of GroupSearchResult.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.GroupNameGet">
            <summary>Sets the shim of GroupSearchResult.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.GroupNameSetString">
            <summary>Sets the shim of GroupSearchResult.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.IconFarmGet">
            <summary>Sets the shim of GroupSearchResult.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.IconFarmSetString">
            <summary>Sets the shim of GroupSearchResult.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.IconServerGet">
            <summary>Sets the shim of GroupSearchResult.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.IconServerSetString">
            <summary>Sets the shim of GroupSearchResult.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.MembersGet">
            <summary>Sets the shim of GroupSearchResult.get_Members()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.MembersSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_Members(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.PoolCountGet">
            <summary>Sets the shim of GroupSearchResult.get_PoolCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.PoolCountSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_PoolCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.TopicCountGet">
            <summary>Sets the shim of GroupSearchResult.get_TopicCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResult.AllInstances.TopicCountSetInt32">
            <summary>Sets the shim of GroupSearchResult.set_TopicCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupSearchResultCollection">
            <summary>Shim type of FlickrNet.GroupSearchResultCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.#ctor(FlickrNet.GroupSearchResultCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.GroupSearchResult})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.GroupSearchResult})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.Generic.IList{FlickrNet.GroupSearchResult})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.GroupSearchResult})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupSearchResultCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.GroupSearchResult})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.Constructor">
            <summary>Sets the shim of GroupSearchResultCollection.GroupSearchResultCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupSearchResultCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PageGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PageSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PagesGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PagesSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PerPageGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.PerPageSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.TotalGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.TotalSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupSearchResultCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PageGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PagesGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.TotalGet">
            <summary>Sets the shim of GroupSearchResultCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupSearchResultCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of GroupSearchResultCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupThrottleInfo">
            <summary>Shim type of FlickrNet.GroupThrottleInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupThrottleInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupThrottleInfo.#ctor(FlickrNet.GroupThrottleInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupThrottleInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupThrottleInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimGroupThrottleInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.Constructor">
            <summary>Sets the shim of GroupThrottleInfo.GroupThrottleInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.CountGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.CountSetInt32">
            <summary>Sets the shim of GroupThrottleInfo.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupThrottleInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.ModeGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Mode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.ModeSetGroupThrottleMode">
            <summary>Sets the shim of GroupThrottleInfo.set_Mode(GroupThrottleMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.ParseModeString">
            <summary>Sets the shim of GroupThrottleInfo.ParseMode(String mode)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.RemainingGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Remaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.RemainingSetInt32">
            <summary>Sets the shim of GroupThrottleInfo.set_Remaining(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.CountGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.CountSetInt32">
            <summary>Sets the shim of GroupThrottleInfo.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of GroupThrottleInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.ModeGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Mode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.ModeSetGroupThrottleMode">
            <summary>Sets the shim of GroupThrottleInfo.set_Mode(GroupThrottleMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.RemainingGet">
            <summary>Sets the shim of GroupThrottleInfo.get_Remaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimGroupThrottleInfo.AllInstances.RemainingSetInt32">
            <summary>Sets the shim of GroupThrottleInfo.set_Remaining(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimHotTag">
            <summary>Shim type of FlickrNet.HotTag</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTag.#ctor(FlickrNet.HotTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTag.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.Constructor">
            <summary>Sets the shim of HotTag.HotTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of HotTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.ScoreGet">
            <summary>Sets the shim of HotTag.get_Score()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.ScoreSetInt32">
            <summary>Sets the shim of HotTag.set_Score(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.TagGet">
            <summary>Sets the shim of HotTag.get_Tag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.TagSetString">
            <summary>Sets the shim of HotTag.set_Tag(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimHotTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of HotTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.AllInstances.ScoreGet">
            <summary>Sets the shim of HotTag.get_Score()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.AllInstances.ScoreSetInt32">
            <summary>Sets the shim of HotTag.set_Score(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.AllInstances.TagGet">
            <summary>Sets the shim of HotTag.get_Tag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTag.AllInstances.TagSetString">
            <summary>Sets the shim of HotTag.set_Tag(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimHotTagCollection">
            <summary>Shim type of FlickrNet.HotTagCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.#ctor(FlickrNet.HotTagCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.HotTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.HotTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.Generic.IList{FlickrNet.HotTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.HotTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimHotTagCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.HotTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.Constructor">
            <summary>Sets the shim of HotTagCollection.HotTagCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of HotTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.PeriodGet">
            <summary>Sets the shim of HotTagCollection.get_Period()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.PeriodSetString">
            <summary>Sets the shim of HotTagCollection.set_Period(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.TagCountGet">
            <summary>Sets the shim of HotTagCollection.get_TagCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.TagCountSetInt32">
            <summary>Sets the shim of HotTagCollection.set_TagCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimHotTagCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of HotTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.AllInstances.PeriodGet">
            <summary>Sets the shim of HotTagCollection.get_Period()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.AllInstances.PeriodSetString">
            <summary>Sets the shim of HotTagCollection.set_Period(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.AllInstances.TagCountGet">
            <summary>Sets the shim of HotTagCollection.get_TagCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimHotTagCollection.AllInstances.TagCountSetInt32">
            <summary>Sets the shim of HotTagCollection.set_TagCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimInstitution">
            <summary>Shim type of FlickrNet.Institution</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitution.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitution.#ctor(FlickrNet.Institution)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitution.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitution.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitution.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.Constructor">
            <summary>Sets the shim of Institution.Institution()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.DateLaunchedGet">
            <summary>Sets the shim of Institution.get_DateLaunched()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.DateLaunchedSetDateTime">
            <summary>Sets the shim of Institution.set_DateLaunched(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Institution.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.FlickrUrlGet">
            <summary>Sets the shim of Institution.get_FlickrUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.FlickrUrlSetString">
            <summary>Sets the shim of Institution.set_FlickrUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.InstitutionIdGet">
            <summary>Sets the shim of Institution.get_InstitutionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.InstitutionIdSetString">
            <summary>Sets the shim of Institution.set_InstitutionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.InstitutionNameGet">
            <summary>Sets the shim of Institution.get_InstitutionName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.InstitutionNameSetString">
            <summary>Sets the shim of Institution.set_InstitutionName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.LicenseUrlGet">
            <summary>Sets the shim of Institution.get_LicenseUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.LicenseUrlSetString">
            <summary>Sets the shim of Institution.set_LicenseUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.SiteUrlGet">
            <summary>Sets the shim of Institution.get_SiteUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.SiteUrlSetString">
            <summary>Sets the shim of Institution.set_SiteUrl(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimInstitution.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.DateLaunchedGet">
            <summary>Sets the shim of Institution.get_DateLaunched()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.DateLaunchedSetDateTime">
            <summary>Sets the shim of Institution.set_DateLaunched(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Institution.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.FlickrUrlGet">
            <summary>Sets the shim of Institution.get_FlickrUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.FlickrUrlSetString">
            <summary>Sets the shim of Institution.set_FlickrUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.InstitutionIdGet">
            <summary>Sets the shim of Institution.get_InstitutionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.InstitutionIdSetString">
            <summary>Sets the shim of Institution.set_InstitutionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.InstitutionNameGet">
            <summary>Sets the shim of Institution.get_InstitutionName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.InstitutionNameSetString">
            <summary>Sets the shim of Institution.set_InstitutionName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.LicenseUrlGet">
            <summary>Sets the shim of Institution.get_LicenseUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.LicenseUrlSetString">
            <summary>Sets the shim of Institution.set_LicenseUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.SiteUrlGet">
            <summary>Sets the shim of Institution.get_SiteUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitution.AllInstances.SiteUrlSetString">
            <summary>Sets the shim of Institution.set_SiteUrl(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimInstitutionCollection">
            <summary>Shim type of FlickrNet.InstitutionCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.#ctor(FlickrNet.InstitutionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Institution})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Institution})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.Generic.IList{FlickrNet.Institution})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Institution})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimInstitutionCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Institution})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitutionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitutionCollection.Constructor">
            <summary>Sets the shim of InstitutionCollection.InstitutionCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitutionCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of InstitutionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimInstitutionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimInstitutionCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of InstitutionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimLicense">
            <summary>Shim type of FlickrNet.License</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicense.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicense.#ctor(FlickrNet.License)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicense.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicense.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicense.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.Constructor">
            <summary>Sets the shim of License.License()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of License.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseIdGet">
            <summary>Sets the shim of License.get_LicenseId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseIdSetLicenseType">
            <summary>Sets the shim of License.set_LicenseId(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseNameGet">
            <summary>Sets the shim of License.get_LicenseName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseNameSetString">
            <summary>Sets the shim of License.set_LicenseName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseUrlGet">
            <summary>Sets the shim of License.get_LicenseUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.LicenseUrlSetString">
            <summary>Sets the shim of License.set_LicenseUrl(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimLicense.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of License.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseIdGet">
            <summary>Sets the shim of License.get_LicenseId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseIdSetLicenseType">
            <summary>Sets the shim of License.set_LicenseId(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseNameGet">
            <summary>Sets the shim of License.get_LicenseName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseNameSetString">
            <summary>Sets the shim of License.set_LicenseName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseUrlGet">
            <summary>Sets the shim of License.get_LicenseUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicense.AllInstances.LicenseUrlSetString">
            <summary>Sets the shim of License.set_LicenseUrl(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimLicenseCollection">
            <summary>Shim type of FlickrNet.LicenseCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.#ctor(FlickrNet.LicenseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.License})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.License})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.Generic.IList{FlickrNet.License})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.License})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimLicenseCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.License})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicenseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicenseCollection.Constructor">
            <summary>Sets the shim of LicenseCollection.LicenseCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicenseCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of LicenseCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimLicenseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimLicenseCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of LicenseCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMember">
            <summary>Shim type of FlickrNet.Member</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMember.#ctor(FlickrNet.Member)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMember.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.Constructor">
            <summary>Sets the shim of Member.Member()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Member.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.IconFarmGet">
            <summary>Sets the shim of Member.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.IconFarmSetString">
            <summary>Sets the shim of Member.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.IconServerGet">
            <summary>Sets the shim of Member.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.IconServerSetString">
            <summary>Sets the shim of Member.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.IconUrlGet">
            <summary>Sets the shim of Member.get_IconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.MemberIdGet">
            <summary>Sets the shim of Member.get_MemberId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.MemberIdSetString">
            <summary>Sets the shim of Member.set_MemberId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.MemberTypeGet">
            <summary>Sets the shim of Member.get_MemberType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.MemberTypeSetMemberTypes">
            <summary>Sets the shim of Member.set_MemberType(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.UserNameGet">
            <summary>Sets the shim of Member.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.UserNameSetString">
            <summary>Sets the shim of Member.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Member.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.IconFarmGet">
            <summary>Sets the shim of Member.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.IconFarmSetString">
            <summary>Sets the shim of Member.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.IconServerGet">
            <summary>Sets the shim of Member.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.IconServerSetString">
            <summary>Sets the shim of Member.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.IconUrlGet">
            <summary>Sets the shim of Member.get_IconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.MemberIdGet">
            <summary>Sets the shim of Member.get_MemberId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.MemberIdSetString">
            <summary>Sets the shim of Member.set_MemberId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.MemberTypeGet">
            <summary>Sets the shim of Member.get_MemberType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.MemberTypeSetMemberTypes">
            <summary>Sets the shim of Member.set_MemberType(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.UserNameGet">
            <summary>Sets the shim of Member.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMember.AllInstances.UserNameSetString">
            <summary>Sets the shim of Member.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberCollection">
            <summary>Shim type of FlickrNet.MemberCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.#ctor(FlickrNet.MemberCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Member})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Member})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.Generic.IList{FlickrNet.Member})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Member})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Member})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.Constructor">
            <summary>Sets the shim of MemberCollection.MemberCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PageGet">
            <summary>Sets the shim of MemberCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PageSetInt32">
            <summary>Sets the shim of MemberCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PagesGet">
            <summary>Sets the shim of MemberCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PagesSetInt32">
            <summary>Sets the shim of MemberCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PerPageGet">
            <summary>Sets the shim of MemberCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.PerPageSetInt32">
            <summary>Sets the shim of MemberCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.TotalGet">
            <summary>Sets the shim of MemberCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.TotalSetInt32">
            <summary>Sets the shim of MemberCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PageGet">
            <summary>Sets the shim of MemberCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of MemberCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PagesGet">
            <summary>Sets the shim of MemberCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of MemberCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of MemberCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of MemberCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.TotalGet">
            <summary>Sets the shim of MemberCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of MemberCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberGroupInfo">
            <summary>Shim type of FlickrNet.MemberGroupInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfo.#ctor(FlickrNet.MemberGroupInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.Constructor">
            <summary>Sets the shim of MemberGroupInfo.MemberGroupInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberGroupInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupIconUrlGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupIdGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupIdSetString">
            <summary>Sets the shim of MemberGroupInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupNameGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupNameSetString">
            <summary>Sets the shim of MemberGroupInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.GroupUrlGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IconFarmGet">
            <summary>Sets the shim of MemberGroupInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IconFarmSetString">
            <summary>Sets the shim of MemberGroupInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IconServerGet">
            <summary>Sets the shim of MemberGroupInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IconServerSetString">
            <summary>Sets the shim of MemberGroupInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IsAdminGet">
            <summary>Sets the shim of MemberGroupInfo.get_IsAdmin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.IsAdminSetBoolean">
            <summary>Sets the shim of MemberGroupInfo.set_IsAdmin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.PhotosGet">
            <summary>Sets the shim of MemberGroupInfo.get_Photos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.PhotosSetInt64">
            <summary>Sets the shim of MemberGroupInfo.set_Photos(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.PrivacyGet">
            <summary>Sets the shim of MemberGroupInfo.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.PrivacySetPoolPrivacy">
            <summary>Sets the shim of MemberGroupInfo.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberGroupInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupIdGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupIdSetString">
            <summary>Sets the shim of MemberGroupInfo.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupNameGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupNameSetString">
            <summary>Sets the shim of MemberGroupInfo.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.GroupUrlGet">
            <summary>Sets the shim of MemberGroupInfo.get_GroupUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IconFarmGet">
            <summary>Sets the shim of MemberGroupInfo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IconFarmSetString">
            <summary>Sets the shim of MemberGroupInfo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IconServerGet">
            <summary>Sets the shim of MemberGroupInfo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IconServerSetString">
            <summary>Sets the shim of MemberGroupInfo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IsAdminGet">
            <summary>Sets the shim of MemberGroupInfo.get_IsAdmin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.IsAdminSetBoolean">
            <summary>Sets the shim of MemberGroupInfo.set_IsAdmin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.PhotosGet">
            <summary>Sets the shim of MemberGroupInfo.get_Photos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.PhotosSetInt64">
            <summary>Sets the shim of MemberGroupInfo.set_Photos(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.PrivacyGet">
            <summary>Sets the shim of MemberGroupInfo.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfo.AllInstances.PrivacySetPoolPrivacy">
            <summary>Sets the shim of MemberGroupInfo.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberGroupInfoCollection">
            <summary>Shim type of FlickrNet.MemberGroupInfoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.#ctor(FlickrNet.MemberGroupInfoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.MemberGroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.MemberGroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.Generic.IList{FlickrNet.MemberGroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.MemberGroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.MemberGroupInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.Constructor">
            <summary>Sets the shim of MemberGroupInfoCollection.MemberGroupInfoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberGroupInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PageGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PageSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PagesGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PagesSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PerPageGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.PerPageSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.TotalGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.TotalSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MemberGroupInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PageGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PagesGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of MemberGroupInfoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMemberGroupInfoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of MemberGroupInfoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethod">
            <summary>Shim type of FlickrNet.Method</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethod.#ctor(FlickrNet.Method)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethod.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ArgumentsGet">
            <summary>Sets the shim of Method.get_Arguments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ArgumentsSetCollectionOfMethodArgument">
            <summary>Sets the shim of Method.set_Arguments(Collection`1&lt;MethodArgument&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.Constructor">
            <summary>Sets the shim of Method.Method()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.DescriptionGet">
            <summary>Sets the shim of Method.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.DescriptionSetString">
            <summary>Sets the shim of Method.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ErrorsGet">
            <summary>Sets the shim of Method.get_Errors()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ErrorsSetCollectionOfMethodError">
            <summary>Sets the shim of Method.set_Errors(Collection`1&lt;MethodError&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ExplanationGet">
            <summary>Sets the shim of Method.get_Explanation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ExplanationSetString">
            <summary>Sets the shim of Method.set_Explanation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Method.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NameGet">
            <summary>Sets the shim of Method.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NameSetString">
            <summary>Sets the shim of Method.set_Name(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NeedsLoginGet">
            <summary>Sets the shim of Method.get_NeedsLogin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NeedsLoginSetBoolean">
            <summary>Sets the shim of Method.set_NeedsLogin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NeedsSigningGet">
            <summary>Sets the shim of Method.get_NeedsSigning()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.NeedsSigningSetBoolean">
            <summary>Sets the shim of Method.set_NeedsSigning(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.RequiredPermissionsGet">
            <summary>Sets the shim of Method.get_RequiredPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.RequiredPermissionsSetMethodPermission">
            <summary>Sets the shim of Method.set_RequiredPermissions(MethodPermission value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ResponseGet">
            <summary>Sets the shim of Method.get_Response()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.ResponseSetString">
            <summary>Sets the shim of Method.set_Response(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ArgumentsGet">
            <summary>Sets the shim of Method.get_Arguments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ArgumentsSetCollectionOfMethodArgument">
            <summary>Sets the shim of Method.set_Arguments(Collection`1&lt;MethodArgument&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.DescriptionGet">
            <summary>Sets the shim of Method.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Method.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ErrorsGet">
            <summary>Sets the shim of Method.get_Errors()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ErrorsSetCollectionOfMethodError">
            <summary>Sets the shim of Method.set_Errors(Collection`1&lt;MethodError&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ExplanationGet">
            <summary>Sets the shim of Method.get_Explanation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ExplanationSetString">
            <summary>Sets the shim of Method.set_Explanation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Method.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NameGet">
            <summary>Sets the shim of Method.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NameSetString">
            <summary>Sets the shim of Method.set_Name(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NeedsLoginGet">
            <summary>Sets the shim of Method.get_NeedsLogin()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NeedsLoginSetBoolean">
            <summary>Sets the shim of Method.set_NeedsLogin(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NeedsSigningGet">
            <summary>Sets the shim of Method.get_NeedsSigning()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.NeedsSigningSetBoolean">
            <summary>Sets the shim of Method.set_NeedsSigning(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.RequiredPermissionsGet">
            <summary>Sets the shim of Method.get_RequiredPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.RequiredPermissionsSetMethodPermission">
            <summary>Sets the shim of Method.set_RequiredPermissions(MethodPermission value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ResponseGet">
            <summary>Sets the shim of Method.get_Response()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethod.AllInstances.ResponseSetString">
            <summary>Sets the shim of Method.set_Response(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodArgument">
            <summary>Shim type of FlickrNet.MethodArgument</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodArgument.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodArgument.#ctor(FlickrNet.MethodArgument)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodArgument.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodArgument.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodArgument.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.Constructor">
            <summary>Sets the shim of MethodArgument.MethodArgument()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.DescriptionGet">
            <summary>Sets the shim of MethodArgument.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.DescriptionSetString">
            <summary>Sets the shim of MethodArgument.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodArgument.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.IsOptionalGet">
            <summary>Sets the shim of MethodArgument.get_IsOptional()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.IsOptionalSetBoolean">
            <summary>Sets the shim of MethodArgument.set_IsOptional(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.NameGet">
            <summary>Sets the shim of MethodArgument.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.NameSetString">
            <summary>Sets the shim of MethodArgument.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodArgument.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.DescriptionGet">
            <summary>Sets the shim of MethodArgument.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.DescriptionSetString">
            <summary>Sets the shim of MethodArgument.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodArgument.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.IsOptionalGet">
            <summary>Sets the shim of MethodArgument.get_IsOptional()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.IsOptionalSetBoolean">
            <summary>Sets the shim of MethodArgument.set_IsOptional(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.NameGet">
            <summary>Sets the shim of MethodArgument.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodArgument.AllInstances.NameSetString">
            <summary>Sets the shim of MethodArgument.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodCollection">
            <summary>Shim type of FlickrNet.MethodCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.#ctor(FlickrNet.MethodCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IList{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodCollection.Constructor">
            <summary>Sets the shim of MethodCollection.MethodCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodError">
            <summary>Shim type of FlickrNet.MethodError</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodError.#ctor(FlickrNet.MethodError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimMethodError.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.CodeGet">
            <summary>Sets the shim of MethodError.get_Code()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.CodeSetInt32">
            <summary>Sets the shim of MethodError.set_Code(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.Constructor">
            <summary>Sets the shim of MethodError.MethodError()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.DescriptionGet">
            <summary>Sets the shim of MethodError.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.DescriptionSetString">
            <summary>Sets the shim of MethodError.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodError.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.MessageGet">
            <summary>Sets the shim of MethodError.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.MessageSetString">
            <summary>Sets the shim of MethodError.set_Message(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimMethodError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.CodeGet">
            <summary>Sets the shim of MethodError.get_Code()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.CodeSetInt32">
            <summary>Sets the shim of MethodError.set_Code(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.DescriptionGet">
            <summary>Sets the shim of MethodError.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.DescriptionSetString">
            <summary>Sets the shim of MethodError.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of MethodError.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.MessageGet">
            <summary>Sets the shim of MethodError.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimMethodError.AllInstances.MessageSetString">
            <summary>Sets the shim of MethodError.set_Message(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNamespace">
            <summary>Shim type of FlickrNet.Namespace</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespace.#ctor(FlickrNet.Namespace)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespace.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.Constructor">
            <summary>Sets the shim of Namespace.Namespace()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Namespace.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.NamespaceNameGet">
            <summary>Sets the shim of Namespace.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.NamespaceNameSetString">
            <summary>Sets the shim of Namespace.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.PredicatesGet">
            <summary>Sets the shim of Namespace.get_Predicates()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.PredicatesSetInt32">
            <summary>Sets the shim of Namespace.set_Predicates(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.UsageGet">
            <summary>Sets the shim of Namespace.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.UsageSetInt32">
            <summary>Sets the shim of Namespace.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNamespace.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Namespace.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of Namespace.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of Namespace.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.PredicatesGet">
            <summary>Sets the shim of Namespace.get_Predicates()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.PredicatesSetInt32">
            <summary>Sets the shim of Namespace.set_Predicates(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.UsageGet">
            <summary>Sets the shim of Namespace.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespace.AllInstances.UsageSetInt32">
            <summary>Sets the shim of Namespace.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNamespaceCollection">
            <summary>Shim type of FlickrNet.NamespaceCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.#ctor(FlickrNet.NamespaceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Namespace})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Namespace})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.Generic.IList{FlickrNet.Namespace})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Namespace})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNamespaceCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Namespace})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.Constructor">
            <summary>Sets the shim of NamespaceCollection.NamespaceCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of NamespaceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PageGet">
            <summary>Sets the shim of NamespaceCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PageSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PagesGet">
            <summary>Sets the shim of NamespaceCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PagesSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PerPageGet">
            <summary>Sets the shim of NamespaceCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.PerPageSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.TotalGet">
            <summary>Sets the shim of NamespaceCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.TotalSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of NamespaceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PageGet">
            <summary>Sets the shim of NamespaceCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PagesGet">
            <summary>Sets the shim of NamespaceCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of NamespaceCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.TotalGet">
            <summary>Sets the shim of NamespaceCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNamespaceCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of NamespaceCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNoResponse">
            <summary>Shim type of FlickrNet.NoResponse</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNoResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNoResponse.#ctor(FlickrNet.NoResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNoResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNoResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimNoResponse.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNoResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNoResponse.Constructor">
            <summary>Sets the shim of NoResponse.NoResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNoResponse.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of NoResponse.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimNoResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimNoResponse.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of NoResponse.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthAccessToken">
            <summary>Shim type of FlickrNet.OAuthAccessToken</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthAccessToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthAccessToken.#ctor(FlickrNet.OAuthAccessToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthAccessToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthAccessToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthAccessToken.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.Constructor">
            <summary>Sets the shim of OAuthAccessToken.OAuthAccessToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of OAuthAccessToken.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.FullNameGet">
            <summary>Sets the shim of OAuthAccessToken.get_FullName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.FullNameSetString">
            <summary>Sets the shim of OAuthAccessToken.set_FullName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.ParseResponseString">
            <summary>Sets the shim of OAuthAccessToken.ParseResponse(String response)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.TokenGet">
            <summary>Sets the shim of OAuthAccessToken.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.TokenSecretGet">
            <summary>Sets the shim of OAuthAccessToken.get_TokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.TokenSecretSetString">
            <summary>Sets the shim of OAuthAccessToken.set_TokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.TokenSetString">
            <summary>Sets the shim of OAuthAccessToken.set_Token(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.UserIdGet">
            <summary>Sets the shim of OAuthAccessToken.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.UserIdSetString">
            <summary>Sets the shim of OAuthAccessToken.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.UsernameGet">
            <summary>Sets the shim of OAuthAccessToken.get_Username()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.UsernameSetString">
            <summary>Sets the shim of OAuthAccessToken.set_Username(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of OAuthAccessToken.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.FullNameGet">
            <summary>Sets the shim of OAuthAccessToken.get_FullName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.FullNameSetString">
            <summary>Sets the shim of OAuthAccessToken.set_FullName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.TokenGet">
            <summary>Sets the shim of OAuthAccessToken.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.TokenSecretGet">
            <summary>Sets the shim of OAuthAccessToken.get_TokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.TokenSecretSetString">
            <summary>Sets the shim of OAuthAccessToken.set_TokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.TokenSetString">
            <summary>Sets the shim of OAuthAccessToken.set_Token(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.UserIdGet">
            <summary>Sets the shim of OAuthAccessToken.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.UserIdSetString">
            <summary>Sets the shim of OAuthAccessToken.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.UsernameGet">
            <summary>Sets the shim of OAuthAccessToken.get_Username()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthAccessToken.AllInstances.UsernameSetString">
            <summary>Sets the shim of OAuthAccessToken.set_Username(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthException">
            <summary>Shim type of FlickrNet.OAuthException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthException.#ctor(FlickrNet.OAuthException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.ConstructorException">
            <summary>Sets the shim of OAuthException.OAuthException(Exception innerException)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.ConstructorStringException">
            <summary>Sets the shim of OAuthException.OAuthException(String response, Exception innerException)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.FullResponseGet">
            <summary>Sets the shim of OAuthException.get_FullResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.FullResponseSetString">
            <summary>Sets the shim of OAuthException.set_FullResponse(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.MessageGet">
            <summary>Sets the shim of OAuthException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.OAuthErrorPametersGet">
            <summary>Sets the shim of OAuthException.get_OAuthErrorPameters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.OAuthErrorPametersSetDictionaryOfStringString">
            <summary>Sets the shim of OAuthException.set_OAuthErrorPameters(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.AllInstances.FullResponseGet">
            <summary>Sets the shim of OAuthException.get_FullResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.AllInstances.FullResponseSetString">
            <summary>Sets the shim of OAuthException.set_FullResponse(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.AllInstances.MessageGet">
            <summary>Sets the shim of OAuthException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.AllInstances.OAuthErrorPametersGet">
            <summary>Sets the shim of OAuthException.get_OAuthErrorPameters()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthException.AllInstances.OAuthErrorPametersSetDictionaryOfStringString">
            <summary>Sets the shim of OAuthException.set_OAuthErrorPameters(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthRequestToken">
            <summary>Shim type of FlickrNet.OAuthRequestToken</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthRequestToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthRequestToken.#ctor(FlickrNet.OAuthRequestToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthRequestToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimOAuthRequestToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.Constructor">
            <summary>Sets the shim of OAuthRequestToken.OAuthRequestToken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.ParseResponseString">
            <summary>Sets the shim of OAuthRequestToken.ParseResponse(String response)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.TokenGet">
            <summary>Sets the shim of OAuthRequestToken.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.TokenSecretGet">
            <summary>Sets the shim of OAuthRequestToken.get_TokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.TokenSecretSetString">
            <summary>Sets the shim of OAuthRequestToken.set_TokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.TokenSetString">
            <summary>Sets the shim of OAuthRequestToken.set_Token(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimOAuthRequestToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.AllInstances.TokenGet">
            <summary>Sets the shim of OAuthRequestToken.get_Token()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.AllInstances.TokenSecretGet">
            <summary>Sets the shim of OAuthRequestToken.get_TokenSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.AllInstances.TokenSecretSetString">
            <summary>Sets the shim of OAuthRequestToken.set_TokenSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimOAuthRequestToken.AllInstances.TokenSetString">
            <summary>Sets the shim of OAuthRequestToken.set_Token(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPagedPhotoCollection">
            <summary>Shim type of FlickrNet.PagedPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.#ctor(FlickrNet.PagedPhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPagedPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.Constructor">
            <summary>Sets the shim of PagedPhotoCollection.PagedPhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PageGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PageSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PagesGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PagesSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PerPageGet">
            <summary>Sets the shim of PagedPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.PerPageSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.TotalGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.TotalSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PageGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PagedPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PagedPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPagedPhotoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PagedPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPair">
            <summary>Shim type of FlickrNet.Pair</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPair.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPair.#ctor(FlickrNet.Pair)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPair.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.Constructor">
            <summary>Sets the shim of Pair.Pair()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Pair.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.NamespaceNameGet">
            <summary>Sets the shim of Pair.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.NamespaceNameSetString">
            <summary>Sets the shim of Pair.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.PairNameGet">
            <summary>Sets the shim of Pair.get_PairName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.PairNameSetString">
            <summary>Sets the shim of Pair.set_PairName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.PredicateNameGet">
            <summary>Sets the shim of Pair.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.PredicateNameSetString">
            <summary>Sets the shim of Pair.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.UsageGet">
            <summary>Sets the shim of Pair.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.UsageSetInt32">
            <summary>Sets the shim of Pair.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPair.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Pair.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of Pair.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of Pair.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.PairNameGet">
            <summary>Sets the shim of Pair.get_PairName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.PairNameSetString">
            <summary>Sets the shim of Pair.set_PairName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.PredicateNameGet">
            <summary>Sets the shim of Pair.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.PredicateNameSetString">
            <summary>Sets the shim of Pair.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.UsageGet">
            <summary>Sets the shim of Pair.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPair.AllInstances.UsageSetInt32">
            <summary>Sets the shim of Pair.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPairCollection">
            <summary>Shim type of FlickrNet.PairCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.#ctor(FlickrNet.PairCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Pair})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Pair})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.Generic.IList{FlickrNet.Pair})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Pair})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPairCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Pair})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.Constructor">
            <summary>Sets the shim of PairCollection.PairCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PairCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.NamespaceNameGet">
            <summary>Sets the shim of PairCollection.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.NamespaceNameSetString">
            <summary>Sets the shim of PairCollection.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PageGet">
            <summary>Sets the shim of PairCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PageSetInt32">
            <summary>Sets the shim of PairCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PagesGet">
            <summary>Sets the shim of PairCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PagesSetInt32">
            <summary>Sets the shim of PairCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PerPageGet">
            <summary>Sets the shim of PairCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PerPageSetInt32">
            <summary>Sets the shim of PairCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PredicateNameGet">
            <summary>Sets the shim of PairCollection.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.PredicateNameSetString">
            <summary>Sets the shim of PairCollection.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.TotalGet">
            <summary>Sets the shim of PairCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.TotalSetInt32">
            <summary>Sets the shim of PairCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPairCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PairCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of PairCollection.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of PairCollection.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PageGet">
            <summary>Sets the shim of PairCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PairCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PairCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PairCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PairCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PairCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PredicateNameGet">
            <summary>Sets the shim of PairCollection.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.PredicateNameSetString">
            <summary>Sets the shim of PairCollection.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PairCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPairCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PairCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPandaPhotoCollection">
            <summary>Shim type of FlickrNet.PandaPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.#ctor(FlickrNet.PandaPhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPandaPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.Constructor">
            <summary>Sets the shim of PandaPhotoCollection.PandaPhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PandaPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.IntervalGet">
            <summary>Sets the shim of PandaPhotoCollection.get_Interval()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.IntervalSetInt32">
            <summary>Sets the shim of PandaPhotoCollection.set_Interval(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.LastUpdatedGet">
            <summary>Sets the shim of PandaPhotoCollection.get_LastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.LastUpdatedSetDateTime">
            <summary>Sets the shim of PandaPhotoCollection.set_LastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.PandaNameGet">
            <summary>Sets the shim of PandaPhotoCollection.get_PandaName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.PandaNameSetString">
            <summary>Sets the shim of PandaPhotoCollection.set_PandaName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.TotalGet">
            <summary>Sets the shim of PandaPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.TotalSetInt32">
            <summary>Sets the shim of PandaPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PandaPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.IntervalGet">
            <summary>Sets the shim of PandaPhotoCollection.get_Interval()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.IntervalSetInt32">
            <summary>Sets the shim of PandaPhotoCollection.set_Interval(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.LastUpdatedGet">
            <summary>Sets the shim of PandaPhotoCollection.get_LastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.LastUpdatedSetDateTime">
            <summary>Sets the shim of PandaPhotoCollection.set_LastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.PandaNameGet">
            <summary>Sets the shim of PandaPhotoCollection.get_PandaName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.PandaNameSetString">
            <summary>Sets the shim of PandaPhotoCollection.set_PandaName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PandaPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPandaPhotoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PandaPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimParsingException">
            <summary>Shim type of FlickrNet.ParsingException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimParsingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimParsingException.#ctor(FlickrNet.ParsingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimParsingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimParsingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimParsingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimParsingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimParsingException.Constructor">
            <summary>Sets the shim of ParsingException.ParsingException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimParsingException.ConstructorString">
            <summary>Sets the shim of ParsingException.ParsingException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimParsingException.ConstructorStringException">
            <summary>Sets the shim of ParsingException.ParsingException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimParsingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPartialSearchOptions">
            <summary>Shim type of FlickrNet.PartialSearchOptions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPartialSearchOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPartialSearchOptions.#ctor(FlickrNet.PartialSearchOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPartialSearchOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPartialSearchOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.Constructor">
            <summary>Sets the shim of PartialSearchOptions.PartialSearchOptions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ConstructorInt32Int32">
            <summary>Sets the shim of PartialSearchOptions.PartialSearchOptions(Int32 perPage, Int32 page)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ConstructorInt32Int32PhotoSearchExtras">
            <summary>Sets the shim of PartialSearchOptions.PartialSearchOptions(Int32 perPage, Int32 page, PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ConstructorPhotoSearchExtras">
            <summary>Sets the shim of PartialSearchOptions.PartialSearchOptions(PhotoSearchExtras extras)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ConstructorPhotoSearchOptions">
            <summary>Sets the shim of PartialSearchOptions.PartialSearchOptions(PhotoSearchOptions options)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ExtrasGet">
            <summary>Sets the shim of PartialSearchOptions.get_Extras()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ExtrasSetPhotoSearchExtras">
            <summary>Sets the shim of PartialSearchOptions.set_Extras(PhotoSearchExtras value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.ExtrasStringGet">
            <summary>Sets the shim of PartialSearchOptions.get_ExtrasString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MaxTakenDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MaxTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MaxTakenDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MaxTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MaxUploadDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MaxUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MaxUploadDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MaxUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MinTakenDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MinTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MinTakenDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MinTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MinUploadDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MinUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.MinUploadDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MinUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PageGet">
            <summary>Sets the shim of PartialSearchOptions.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PageSetInt32">
            <summary>Sets the shim of PartialSearchOptions.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PerPageGet">
            <summary>Sets the shim of PartialSearchOptions.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PerPageSetInt32">
            <summary>Sets the shim of PartialSearchOptions.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PrivacyFilterGet">
            <summary>Sets the shim of PartialSearchOptions.get_PrivacyFilter()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.PrivacyFilterSetPrivacyFilter">
            <summary>Sets the shim of PartialSearchOptions.set_PrivacyFilter(PrivacyFilter value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.SortOrderGet">
            <summary>Sets the shim of PartialSearchOptions.get_SortOrder()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.SortOrderSetPhotoSearchSortOrder">
            <summary>Sets the shim of PartialSearchOptions.set_SortOrder(PhotoSearchSortOrder value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.SortOrderStringGet">
            <summary>Sets the shim of PartialSearchOptions.get_SortOrderString()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.ExtrasGet">
            <summary>Sets the shim of PartialSearchOptions.get_Extras()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.ExtrasSetPhotoSearchExtras">
            <summary>Sets the shim of PartialSearchOptions.set_Extras(PhotoSearchExtras value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.ExtrasStringGet">
            <summary>Sets the shim of PartialSearchOptions.get_ExtrasString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MaxTakenDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MaxTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MaxTakenDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MaxTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MaxUploadDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MaxUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MaxUploadDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MaxUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MinTakenDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MinTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MinTakenDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MinTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MinUploadDateGet">
            <summary>Sets the shim of PartialSearchOptions.get_MinUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.MinUploadDateSetDateTime">
            <summary>Sets the shim of PartialSearchOptions.set_MinUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PageGet">
            <summary>Sets the shim of PartialSearchOptions.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PageSetInt32">
            <summary>Sets the shim of PartialSearchOptions.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PerPageGet">
            <summary>Sets the shim of PartialSearchOptions.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PartialSearchOptions.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PrivacyFilterGet">
            <summary>Sets the shim of PartialSearchOptions.get_PrivacyFilter()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.PrivacyFilterSetPrivacyFilter">
            <summary>Sets the shim of PartialSearchOptions.set_PrivacyFilter(PrivacyFilter value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.SortOrderGet">
            <summary>Sets the shim of PartialSearchOptions.get_SortOrder()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.SortOrderSetPhotoSearchSortOrder">
            <summary>Sets the shim of PartialSearchOptions.set_SortOrder(PhotoSearchSortOrder value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPartialSearchOptions.AllInstances.SortOrderStringGet">
            <summary>Sets the shim of PartialSearchOptions.get_SortOrderString()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPeoplePhotoCollection">
            <summary>Shim type of FlickrNet.PeoplePhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.#ctor(FlickrNet.PeoplePhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPeoplePhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.Constructor">
            <summary>Sets the shim of PeoplePhotoCollection.PeoplePhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PeoplePhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.HasNextPageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_HasNextPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.HasNextPageSetBoolean">
            <summary>Sets the shim of PeoplePhotoCollection.set_HasNextPage(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PageSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PagesGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PagesSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PerPageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.PerPageSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.TotalGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.TotalSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PeoplePhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.HasNextPageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_HasNextPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.HasNextPageSetBoolean">
            <summary>Sets the shim of PeoplePhotoCollection.set_HasNextPage(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PeoplePhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPeoplePhotoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PeoplePhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersistentCache">
            <summary>Shim type of FlickrNet.PersistentCache</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersistentCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersistentCache.#ctor(FlickrNet.PersistentCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersistentCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersistentCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersistentCache.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.ConstructorStringCacheItemPersister">
            <summary>Sets the shim of PersistentCache.PersistentCache(String filename, CacheItemPersister persister)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.ExpiredDateTimeTimeSpan">
            <summary>Sets the shim of PersistentCache.Expired(DateTime test, TimeSpan age)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.Flush">
            <summary>Sets the shim of PersistentCache.Flush()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.GetStringTimeSpanBoolean">
            <summary>Sets the shim of PersistentCache.Get(String key, TimeSpan maxAge, Boolean removeIfExpired)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.InternalGetAllTypeStringArrayOutArrayOut">
            <summary>Sets the shim of PersistentCache.InternalGetAll(Type valueType, String[]&amp; keys, Array&amp; values)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.InternalGetString">
            <summary>Sets the shim of PersistentCache.InternalGet(String key)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.InternalSetStringICacheItem">
            <summary>Sets the shim of PersistentCache.InternalSet(String key, ICacheItem value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.ItemSetStringICacheItem">
            <summary>Sets the shim of PersistentCache.set_Item(String key, ICacheItem value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.LoadStream">
            <summary>Sets the shim of PersistentCache.Load(Stream s)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.Persist">
            <summary>Sets the shim of PersistentCache.Persist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.Refresh">
            <summary>Sets the shim of PersistentCache.Refresh()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.RemoveKeyString">
            <summary>Sets the shim of PersistentCache.RemoveKey(String key)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.ShrinkInt64">
            <summary>Sets the shim of PersistentCache.Shrink(Int64 size)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.StoreStreamDictionaryOfStringICacheItem">
            <summary>Sets the shim of PersistentCache.Store(Stream s, Dictionary`2&lt;String,ICacheItem&gt; table)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.SystemIDisposableDispose">
            <summary>Sets the shim of PersistentCache.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.ToArrayType">
            <summary>Sets the shim of PersistentCache.ToArray(Type valueType)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersistentCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.Flush">
            <summary>Sets the shim of PersistentCache.Flush()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.GetStringTimeSpanBoolean">
            <summary>Sets the shim of PersistentCache.Get(String key, TimeSpan maxAge, Boolean removeIfExpired)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.InternalGetAllTypeStringArrayOutArrayOut">
            <summary>Sets the shim of PersistentCache.InternalGetAll(Type valueType, String[]&amp; keys, Array&amp; values)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.InternalGetString">
            <summary>Sets the shim of PersistentCache.InternalGet(String key)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.InternalSetStringICacheItem">
            <summary>Sets the shim of PersistentCache.InternalSet(String key, ICacheItem value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.ItemSetStringICacheItem">
            <summary>Sets the shim of PersistentCache.set_Item(String key, ICacheItem value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.LoadStream">
            <summary>Sets the shim of PersistentCache.Load(Stream s)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.Persist">
            <summary>Sets the shim of PersistentCache.Persist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.Refresh">
            <summary>Sets the shim of PersistentCache.Refresh()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.RemoveKeyString">
            <summary>Sets the shim of PersistentCache.RemoveKey(String key)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.ShrinkInt64">
            <summary>Sets the shim of PersistentCache.Shrink(Int64 size)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.StoreStreamDictionaryOfStringICacheItem">
            <summary>Sets the shim of PersistentCache.Store(Stream s, Dictionary`2&lt;String,ICacheItem&gt; table)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of PersistentCache.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersistentCache.AllInstances.ToArrayType">
            <summary>Sets the shim of PersistentCache.ToArray(Type valueType)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPerson">
            <summary>Shim type of FlickrNet.Person</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPerson.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPerson.#ctor(FlickrNet.Person)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPerson.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPerson.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPerson.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.BuddyIconUrlGet">
            <summary>Sets the shim of Person.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.Constructor">
            <summary>Sets the shim of Person.Person()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.DescriptionGet">
            <summary>Sets the shim of Person.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.DescriptionSetString">
            <summary>Sets the shim of Person.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Person.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.GenderGet">
            <summary>Sets the shim of Person.get_Gender()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.GenderSetString">
            <summary>Sets the shim of Person.set_Gender(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IconFarmGet">
            <summary>Sets the shim of Person.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IconFarmSetString">
            <summary>Sets the shim of Person.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IconServerGet">
            <summary>Sets the shim of Person.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IconServerSetString">
            <summary>Sets the shim of Person.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsContactGet">
            <summary>Sets the shim of Person.get_IsContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsContactSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsContact(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsFamilyGet">
            <summary>Sets the shim of Person.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsFamilySetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsFriendGet">
            <summary>Sets the shim of Person.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsFriendSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsIgnoredGet">
            <summary>Sets the shim of Person.get_IsIgnored()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsIgnoredSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsIgnored(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsProGet">
            <summary>Sets the shim of Person.get_IsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsProSetBoolean">
            <summary>Sets the shim of Person.set_IsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseContactGet">
            <summary>Sets the shim of Person.get_IsReverseContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseContactSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseContact(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseFamilyGet">
            <summary>Sets the shim of Person.get_IsReverseFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseFamilySetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseFriendGet">
            <summary>Sets the shim of Person.get_IsReverseFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.IsReverseFriendSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.LoadAttributesXmlReader">
            <summary>Sets the shim of Person.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.LoadElementsXmlReader">
            <summary>Sets the shim of Person.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.LocationGet">
            <summary>Sets the shim of Person.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.LocationSetString">
            <summary>Sets the shim of Person.set_Location(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.MailboxSha1HashGet">
            <summary>Sets the shim of Person.get_MailboxSha1Hash()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.MailboxSha1HashSetString">
            <summary>Sets the shim of Person.set_MailboxSha1Hash(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.MobileUrlGet">
            <summary>Sets the shim of Person.get_MobileUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.MobileUrlSetString">
            <summary>Sets the shim of Person.set_MobileUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PathAliasGet">
            <summary>Sets the shim of Person.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PathAliasSetString">
            <summary>Sets the shim of Person.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PhotosSummaryGet">
            <summary>Sets the shim of Person.get_PhotosSummary()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PhotosSummarySetPersonPhotosSummary">
            <summary>Sets the shim of Person.set_PhotosSummary(PersonPhotosSummary value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PhotosUrlGet">
            <summary>Sets the shim of Person.get_PhotosUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.PhotosUrlSetString">
            <summary>Sets the shim of Person.set_PhotosUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.ProfileUrlGet">
            <summary>Sets the shim of Person.get_ProfileUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.ProfileUrlSetString">
            <summary>Sets the shim of Person.set_ProfileUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.RealNameGet">
            <summary>Sets the shim of Person.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.RealNameSetString">
            <summary>Sets the shim of Person.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.TimeZoneLabelGet">
            <summary>Sets the shim of Person.get_TimeZoneLabel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.TimeZoneLabelSetString">
            <summary>Sets the shim of Person.set_TimeZoneLabel(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.TimeZoneOffsetGet">
            <summary>Sets the shim of Person.get_TimeZoneOffset()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.TimeZoneOffsetSetString">
            <summary>Sets the shim of Person.set_TimeZoneOffset(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.UserIdGet">
            <summary>Sets the shim of Person.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.UserIdSetString">
            <summary>Sets the shim of Person.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.UserNameGet">
            <summary>Sets the shim of Person.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.UserNameSetString">
            <summary>Sets the shim of Person.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPerson.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.BuddyIconUrlGet">
            <summary>Sets the shim of Person.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.DescriptionGet">
            <summary>Sets the shim of Person.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Person.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Person.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.GenderGet">
            <summary>Sets the shim of Person.get_Gender()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.GenderSetString">
            <summary>Sets the shim of Person.set_Gender(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IconFarmGet">
            <summary>Sets the shim of Person.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IconFarmSetString">
            <summary>Sets the shim of Person.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IconServerGet">
            <summary>Sets the shim of Person.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IconServerSetString">
            <summary>Sets the shim of Person.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsContactGet">
            <summary>Sets the shim of Person.get_IsContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsContactSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsContact(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsFamilyGet">
            <summary>Sets the shim of Person.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsFamilySetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsFriendGet">
            <summary>Sets the shim of Person.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsFriendSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsIgnoredGet">
            <summary>Sets the shim of Person.get_IsIgnored()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsIgnoredSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsIgnored(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsProGet">
            <summary>Sets the shim of Person.get_IsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsProSetBoolean">
            <summary>Sets the shim of Person.set_IsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseContactGet">
            <summary>Sets the shim of Person.get_IsReverseContact()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseContactSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseContact(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseFamilyGet">
            <summary>Sets the shim of Person.get_IsReverseFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseFamilySetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseFamily(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseFriendGet">
            <summary>Sets the shim of Person.get_IsReverseFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.IsReverseFriendSetNullableOfBoolean">
            <summary>Sets the shim of Person.set_IsReverseFriend(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.LoadAttributesXmlReader">
            <summary>Sets the shim of Person.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.LoadElementsXmlReader">
            <summary>Sets the shim of Person.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.LocationGet">
            <summary>Sets the shim of Person.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.LocationSetString">
            <summary>Sets the shim of Person.set_Location(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.MailboxSha1HashGet">
            <summary>Sets the shim of Person.get_MailboxSha1Hash()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.MailboxSha1HashSetString">
            <summary>Sets the shim of Person.set_MailboxSha1Hash(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.MobileUrlGet">
            <summary>Sets the shim of Person.get_MobileUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.MobileUrlSetString">
            <summary>Sets the shim of Person.set_MobileUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PathAliasGet">
            <summary>Sets the shim of Person.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PathAliasSetString">
            <summary>Sets the shim of Person.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PhotosSummaryGet">
            <summary>Sets the shim of Person.get_PhotosSummary()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PhotosSummarySetPersonPhotosSummary">
            <summary>Sets the shim of Person.set_PhotosSummary(PersonPhotosSummary value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PhotosUrlGet">
            <summary>Sets the shim of Person.get_PhotosUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.PhotosUrlSetString">
            <summary>Sets the shim of Person.set_PhotosUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.ProfileUrlGet">
            <summary>Sets the shim of Person.get_ProfileUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.ProfileUrlSetString">
            <summary>Sets the shim of Person.set_ProfileUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.RealNameGet">
            <summary>Sets the shim of Person.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.RealNameSetString">
            <summary>Sets the shim of Person.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.TimeZoneLabelGet">
            <summary>Sets the shim of Person.get_TimeZoneLabel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.TimeZoneLabelSetString">
            <summary>Sets the shim of Person.set_TimeZoneLabel(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.TimeZoneOffsetGet">
            <summary>Sets the shim of Person.get_TimeZoneOffset()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.TimeZoneOffsetSetString">
            <summary>Sets the shim of Person.set_TimeZoneOffset(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.UserIdGet">
            <summary>Sets the shim of Person.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.UserIdSetString">
            <summary>Sets the shim of Person.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.UserNameGet">
            <summary>Sets the shim of Person.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPerson.AllInstances.UserNameSetString">
            <summary>Sets the shim of Person.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersonLimits">
            <summary>Shim type of FlickrNet.PersonLimits</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonLimits.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonLimits.#ctor(FlickrNet.PersonLimits)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonLimits.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonLimits.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonLimits.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.Constructor">
            <summary>Sets the shim of PersonLimits.PersonLimits()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PersonLimits.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumDisplayPixelsGet">
            <summary>Sets the shim of PersonLimits.get_MaximumDisplayPixels()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumDisplayPixelsSetInt32">
            <summary>Sets the shim of PersonLimits.set_MaximumDisplayPixels(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumPhotoUploadGet">
            <summary>Sets the shim of PersonLimits.get_MaximumPhotoUpload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumPhotoUploadSetInt64">
            <summary>Sets the shim of PersonLimits.set_MaximumPhotoUpload(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumVideoDurationGet">
            <summary>Sets the shim of PersonLimits.get_MaximumVideoDuration()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumVideoDurationSetInt32">
            <summary>Sets the shim of PersonLimits.set_MaximumVideoDuration(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumVideoUploadGet">
            <summary>Sets the shim of PersonLimits.get_MaximumVideoUpload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.MaximumVideoUploadSetInt64">
            <summary>Sets the shim of PersonLimits.set_MaximumVideoUpload(Int64 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersonLimits.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PersonLimits.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumDisplayPixelsGet">
            <summary>Sets the shim of PersonLimits.get_MaximumDisplayPixels()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumDisplayPixelsSetInt32">
            <summary>Sets the shim of PersonLimits.set_MaximumDisplayPixels(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumPhotoUploadGet">
            <summary>Sets the shim of PersonLimits.get_MaximumPhotoUpload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumPhotoUploadSetInt64">
            <summary>Sets the shim of PersonLimits.set_MaximumPhotoUpload(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumVideoDurationGet">
            <summary>Sets the shim of PersonLimits.get_MaximumVideoDuration()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumVideoDurationSetInt32">
            <summary>Sets the shim of PersonLimits.set_MaximumVideoDuration(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumVideoUploadGet">
            <summary>Sets the shim of PersonLimits.get_MaximumVideoUpload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonLimits.AllInstances.MaximumVideoUploadSetInt64">
            <summary>Sets the shim of PersonLimits.set_MaximumVideoUpload(Int64 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersonPhotosSummary">
            <summary>Shim type of FlickrNet.PersonPhotosSummary</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonPhotosSummary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonPhotosSummary.#ctor(FlickrNet.PersonPhotosSummary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonPhotosSummary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonPhotosSummary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPersonPhotosSummary.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.Constructor">
            <summary>Sets the shim of PersonPhotosSummary.PersonPhotosSummary()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.FirstDateGet">
            <summary>Sets the shim of PersonPhotosSummary.get_FirstDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.FirstDateSetDateTime">
            <summary>Sets the shim of PersonPhotosSummary.set_FirstDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.FirstTakenDateGet">
            <summary>Sets the shim of PersonPhotosSummary.get_FirstTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.FirstTakenDateSetDateTime">
            <summary>Sets the shim of PersonPhotosSummary.set_FirstTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PersonPhotosSummary.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.PhotoCountGet">
            <summary>Sets the shim of PersonPhotosSummary.get_PhotoCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.PhotoCountSetInt32">
            <summary>Sets the shim of PersonPhotosSummary.set_PhotoCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.ViewsGet">
            <summary>Sets the shim of PersonPhotosSummary.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.ViewsSetInt32">
            <summary>Sets the shim of PersonPhotosSummary.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.FirstDateGet">
            <summary>Sets the shim of PersonPhotosSummary.get_FirstDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.FirstDateSetDateTime">
            <summary>Sets the shim of PersonPhotosSummary.set_FirstDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.FirstTakenDateGet">
            <summary>Sets the shim of PersonPhotosSummary.get_FirstTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.FirstTakenDateSetDateTime">
            <summary>Sets the shim of PersonPhotosSummary.set_FirstTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PersonPhotosSummary.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.PhotoCountGet">
            <summary>Sets the shim of PersonPhotosSummary.get_PhotoCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.PhotoCountSetInt32">
            <summary>Sets the shim of PersonPhotosSummary.set_PhotoCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.ViewsGet">
            <summary>Sets the shim of PersonPhotosSummary.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPersonPhotosSummary.AllInstances.ViewsSetInt32">
            <summary>Sets the shim of PersonPhotosSummary.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhoto">
            <summary>Shim type of FlickrNet.Photo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhoto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhoto.#ctor(FlickrNet.Photo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhoto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhoto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhoto.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AccuracyGet">
            <summary>Sets the shim of Photo.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AccuracySetGeoAccuracy">
            <summary>Sets the shim of Photo.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanAddMetaGet">
            <summary>Sets the shim of Photo.get_CanAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanAddMetaSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanAddMeta(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanBlogGet">
            <summary>Sets the shim of Photo.get_CanBlog()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanBlogSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanBlog(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanCommentGet">
            <summary>Sets the shim of Photo.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanCommentSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanComment(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanDownloadGet">
            <summary>Sets the shim of Photo.get_CanDownload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanDownloadSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanDownload(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanPrintGet">
            <summary>Sets the shim of Photo.get_CanPrint()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanPrintSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanPrint(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanShareGet">
            <summary>Sets the shim of Photo.get_CanShare()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.CanShareSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanShare(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Constructor">
            <summary>Sets the shim of Photo.Photo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateAddedToGroupGet">
            <summary>Sets the shim of Photo.get_DateAddedToGroup()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateAddedToGroupSetNullableOfDateTime">
            <summary>Sets the shim of Photo.set_DateAddedToGroup(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateFavoritedGet">
            <summary>Sets the shim of Photo.get_DateFavorited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateFavoritedSetNullableOfDateTime">
            <summary>Sets the shim of Photo.set_DateFavorited(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateTakenGet">
            <summary>Sets the shim of Photo.get_DateTaken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateTakenSetDateTime">
            <summary>Sets the shim of Photo.set_DateTaken(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateUploadedGet">
            <summary>Sets the shim of Photo.get_DateUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DateUploadedSetDateTime">
            <summary>Sets the shim of Photo.set_DateUploaded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DescriptionGet">
            <summary>Sets the shim of Photo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DescriptionSetString">
            <summary>Sets the shim of Photo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DoesLargeExistGet">
            <summary>Sets the shim of Photo.get_DoesLargeExist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.DoesMediumExistGet">
            <summary>Sets the shim of Photo.get_DoesMediumExist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.FarmGet">
            <summary>Sets the shim of Photo.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.FarmSetString">
            <summary>Sets the shim of Photo.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Photo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.GeoContextGet">
            <summary>Sets the shim of Photo.get_GeoContext()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.GeoContextSetNullableOfGeoContext">
            <summary>Sets the shim of Photo.set_GeoContext(Nullable`1&lt;GeoContext&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.GeoPermissionsGet">
            <summary>Sets the shim of Photo.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.GeoPermissionsSetGeoPermissions">
            <summary>Sets the shim of Photo.set_GeoPermissions(GeoPermissions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IconFarmGet">
            <summary>Sets the shim of Photo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IconFarmSetString">
            <summary>Sets the shim of Photo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IconServerGet">
            <summary>Sets the shim of Photo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IconServerSetString">
            <summary>Sets the shim of Photo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsFamilyGet">
            <summary>Sets the shim of Photo.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsFamilySetBoolean">
            <summary>Sets the shim of Photo.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsFriendGet">
            <summary>Sets the shim of Photo.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsFriendSetBoolean">
            <summary>Sets the shim of Photo.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsPublicGet">
            <summary>Sets the shim of Photo.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.IsPublicSetBoolean">
            <summary>Sets the shim of Photo.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeHeightGet">
            <summary>Sets the shim of Photo.get_LargeHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeSquareThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeSquareThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeSquareThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeSquareThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeSquareThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeSquareThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeSquareThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeUrlGet">
            <summary>Sets the shim of Photo.get_LargeUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeWidthGet">
            <summary>Sets the shim of Photo.get_LargeWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LargeWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LastUpdatedGet">
            <summary>Sets the shim of Photo.get_LastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LastUpdatedSetDateTime">
            <summary>Sets the shim of Photo.set_LastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LatitudeGet">
            <summary>Sets the shim of Photo.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LatitudeSetDouble">
            <summary>Sets the shim of Photo.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LicenseGet">
            <summary>Sets the shim of Photo.get_License()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LicenseSetLicenseType">
            <summary>Sets the shim of Photo.set_License(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LoadXmlReaderBoolean">
            <summary>Sets the shim of Photo.Load(XmlReader reader, Boolean allowExtraAtrributes)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LongitudeGet">
            <summary>Sets the shim of Photo.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.LongitudeSetDouble">
            <summary>Sets the shim of Photo.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MachineTagsGet">
            <summary>Sets the shim of Photo.get_MachineTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MachineTagsSetString">
            <summary>Sets the shim of Photo.set_MachineTags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediaGet">
            <summary>Sets the shim of Photo.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediaSetString">
            <summary>Sets the shim of Photo.set_Media(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediaStatusGet">
            <summary>Sets the shim of Photo.get_MediaStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediaStatusSetString">
            <summary>Sets the shim of Photo.set_MediaStatus(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Medium640HeightGet">
            <summary>Sets the shim of Photo.get_Medium640Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Medium640HeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Medium640Height(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Medium640UrlGet">
            <summary>Sets the shim of Photo.get_Medium640Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Medium640WidthGet">
            <summary>Sets the shim of Photo.get_Medium640Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Medium640WidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Medium640Width(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediumHeightGet">
            <summary>Sets the shim of Photo.get_MediumHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediumHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_MediumHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediumUrlGet">
            <summary>Sets the shim of Photo.get_MediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediumWidthGet">
            <summary>Sets the shim of Photo.get_MediumWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.MediumWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_MediumWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalFormatGet">
            <summary>Sets the shim of Photo.get_OriginalFormat()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalFormatSetString">
            <summary>Sets the shim of Photo.set_OriginalFormat(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalHeightGet">
            <summary>Sets the shim of Photo.get_OriginalHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalHeightSetInt32">
            <summary>Sets the shim of Photo.set_OriginalHeight(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalSecretGet">
            <summary>Sets the shim of Photo.get_OriginalSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalSecretSetString">
            <summary>Sets the shim of Photo.set_OriginalSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalUrlGet">
            <summary>Sets the shim of Photo.get_OriginalUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalWidthGet">
            <summary>Sets the shim of Photo.get_OriginalWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OriginalWidthSetInt32">
            <summary>Sets the shim of Photo.set_OriginalWidth(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OwnerNameGet">
            <summary>Sets the shim of Photo.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.OwnerNameSetString">
            <summary>Sets the shim of Photo.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PathAliasGet">
            <summary>Sets the shim of Photo.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PathAliasSetString">
            <summary>Sets the shim of Photo.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PhotoIdGet">
            <summary>Sets the shim of Photo.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PhotoIdSetString">
            <summary>Sets the shim of Photo.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PlaceIdGet">
            <summary>Sets the shim of Photo.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.PlaceIdSetString">
            <summary>Sets the shim of Photo.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.RotationGet">
            <summary>Sets the shim of Photo.get_Rotation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.RotationSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Rotation(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SecretGet">
            <summary>Sets the shim of Photo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SecretSetString">
            <summary>Sets the shim of Photo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ServerGet">
            <summary>Sets the shim of Photo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ServerSetString">
            <summary>Sets the shim of Photo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Small320HeightGet">
            <summary>Sets the shim of Photo.get_Small320Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Small320HeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Small320Height(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Small320UrlGet">
            <summary>Sets the shim of Photo.get_Small320Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Small320WidthGet">
            <summary>Sets the shim of Photo.get_Small320Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.Small320WidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Small320Width(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SmallHeightGet">
            <summary>Sets the shim of Photo.get_SmallHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SmallHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SmallHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SmallUrlGet">
            <summary>Sets the shim of Photo.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SmallWidthGet">
            <summary>Sets the shim of Photo.get_SmallWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SmallWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SmallWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SquareThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SquareThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SquareThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SquareThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SquareThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.SquareThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SquareThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.TagsGet">
            <summary>Sets the shim of Photo.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.TagsSetCollectionOfString">
            <summary>Sets the shim of Photo.set_Tags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_ThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_ThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_ThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_ThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.TitleGet">
            <summary>Sets the shim of Photo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.TitleSetString">
            <summary>Sets the shim of Photo.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.UserIdGet">
            <summary>Sets the shim of Photo.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.UserIdSetString">
            <summary>Sets the shim of Photo.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ViewsGet">
            <summary>Sets the shim of Photo.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.ViewsSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Views(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.WebUrlGet">
            <summary>Sets the shim of Photo.get_WebUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.WoeIdGet">
            <summary>Sets the shim of Photo.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.WoeIdSetString">
            <summary>Sets the shim of Photo.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhoto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.AccuracyGet">
            <summary>Sets the shim of Photo.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.AccuracySetGeoAccuracy">
            <summary>Sets the shim of Photo.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanAddMetaGet">
            <summary>Sets the shim of Photo.get_CanAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanAddMetaSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanAddMeta(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanBlogGet">
            <summary>Sets the shim of Photo.get_CanBlog()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanBlogSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanBlog(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanCommentGet">
            <summary>Sets the shim of Photo.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanCommentSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanComment(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanDownloadGet">
            <summary>Sets the shim of Photo.get_CanDownload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanDownloadSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanDownload(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanPrintGet">
            <summary>Sets the shim of Photo.get_CanPrint()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanPrintSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanPrint(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanShareGet">
            <summary>Sets the shim of Photo.get_CanShare()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.CanShareSetNullableOfBoolean">
            <summary>Sets the shim of Photo.set_CanShare(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateAddedToGroupGet">
            <summary>Sets the shim of Photo.get_DateAddedToGroup()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateAddedToGroupSetNullableOfDateTime">
            <summary>Sets the shim of Photo.set_DateAddedToGroup(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateFavoritedGet">
            <summary>Sets the shim of Photo.get_DateFavorited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateFavoritedSetNullableOfDateTime">
            <summary>Sets the shim of Photo.set_DateFavorited(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateTakenGet">
            <summary>Sets the shim of Photo.get_DateTaken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateTakenSetDateTime">
            <summary>Sets the shim of Photo.set_DateTaken(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateUploadedGet">
            <summary>Sets the shim of Photo.get_DateUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DateUploadedSetDateTime">
            <summary>Sets the shim of Photo.set_DateUploaded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DescriptionGet">
            <summary>Sets the shim of Photo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Photo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DoesLargeExistGet">
            <summary>Sets the shim of Photo.get_DoesLargeExist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.DoesMediumExistGet">
            <summary>Sets the shim of Photo.get_DoesMediumExist()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.FarmGet">
            <summary>Sets the shim of Photo.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.FarmSetString">
            <summary>Sets the shim of Photo.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Photo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.GeoContextGet">
            <summary>Sets the shim of Photo.get_GeoContext()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.GeoContextSetNullableOfGeoContext">
            <summary>Sets the shim of Photo.set_GeoContext(Nullable`1&lt;GeoContext&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.GeoPermissionsGet">
            <summary>Sets the shim of Photo.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.GeoPermissionsSetGeoPermissions">
            <summary>Sets the shim of Photo.set_GeoPermissions(GeoPermissions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IconFarmGet">
            <summary>Sets the shim of Photo.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IconFarmSetString">
            <summary>Sets the shim of Photo.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IconServerGet">
            <summary>Sets the shim of Photo.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IconServerSetString">
            <summary>Sets the shim of Photo.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsFamilyGet">
            <summary>Sets the shim of Photo.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsFamilySetBoolean">
            <summary>Sets the shim of Photo.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsFriendGet">
            <summary>Sets the shim of Photo.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsFriendSetBoolean">
            <summary>Sets the shim of Photo.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsPublicGet">
            <summary>Sets the shim of Photo.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.IsPublicSetBoolean">
            <summary>Sets the shim of Photo.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeHeightGet">
            <summary>Sets the shim of Photo.get_LargeHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeSquareThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeSquareThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeSquareThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeSquareThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeSquareThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_LargeSquareThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeSquareThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeSquareThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeUrlGet">
            <summary>Sets the shim of Photo.get_LargeUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeWidthGet">
            <summary>Sets the shim of Photo.get_LargeWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LargeWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_LargeWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LastUpdatedGet">
            <summary>Sets the shim of Photo.get_LastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LastUpdatedSetDateTime">
            <summary>Sets the shim of Photo.set_LastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LatitudeGet">
            <summary>Sets the shim of Photo.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LatitudeSetDouble">
            <summary>Sets the shim of Photo.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LicenseGet">
            <summary>Sets the shim of Photo.get_License()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LicenseSetLicenseType">
            <summary>Sets the shim of Photo.set_License(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LoadXmlReaderBoolean">
            <summary>Sets the shim of Photo.Load(XmlReader reader, Boolean allowExtraAtrributes)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LongitudeGet">
            <summary>Sets the shim of Photo.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.LongitudeSetDouble">
            <summary>Sets the shim of Photo.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MachineTagsGet">
            <summary>Sets the shim of Photo.get_MachineTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MachineTagsSetString">
            <summary>Sets the shim of Photo.set_MachineTags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediaGet">
            <summary>Sets the shim of Photo.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediaSetString">
            <summary>Sets the shim of Photo.set_Media(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediaStatusGet">
            <summary>Sets the shim of Photo.get_MediaStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediaStatusSetString">
            <summary>Sets the shim of Photo.set_MediaStatus(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Medium640HeightGet">
            <summary>Sets the shim of Photo.get_Medium640Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Medium640HeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Medium640Height(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Medium640UrlGet">
            <summary>Sets the shim of Photo.get_Medium640Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Medium640WidthGet">
            <summary>Sets the shim of Photo.get_Medium640Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Medium640WidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Medium640Width(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediumHeightGet">
            <summary>Sets the shim of Photo.get_MediumHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediumHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_MediumHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediumUrlGet">
            <summary>Sets the shim of Photo.get_MediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediumWidthGet">
            <summary>Sets the shim of Photo.get_MediumWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.MediumWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_MediumWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalFormatGet">
            <summary>Sets the shim of Photo.get_OriginalFormat()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalFormatSetString">
            <summary>Sets the shim of Photo.set_OriginalFormat(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalHeightGet">
            <summary>Sets the shim of Photo.get_OriginalHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalHeightSetInt32">
            <summary>Sets the shim of Photo.set_OriginalHeight(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalSecretGet">
            <summary>Sets the shim of Photo.get_OriginalSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalSecretSetString">
            <summary>Sets the shim of Photo.set_OriginalSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalUrlGet">
            <summary>Sets the shim of Photo.get_OriginalUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalWidthGet">
            <summary>Sets the shim of Photo.get_OriginalWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OriginalWidthSetInt32">
            <summary>Sets the shim of Photo.set_OriginalWidth(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OwnerNameGet">
            <summary>Sets the shim of Photo.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.OwnerNameSetString">
            <summary>Sets the shim of Photo.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PathAliasGet">
            <summary>Sets the shim of Photo.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PathAliasSetString">
            <summary>Sets the shim of Photo.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PhotoIdGet">
            <summary>Sets the shim of Photo.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of Photo.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PlaceIdGet">
            <summary>Sets the shim of Photo.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of Photo.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.RotationGet">
            <summary>Sets the shim of Photo.get_Rotation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.RotationSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Rotation(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SecretGet">
            <summary>Sets the shim of Photo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SecretSetString">
            <summary>Sets the shim of Photo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ServerGet">
            <summary>Sets the shim of Photo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ServerSetString">
            <summary>Sets the shim of Photo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Small320HeightGet">
            <summary>Sets the shim of Photo.get_Small320Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Small320HeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Small320Height(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Small320UrlGet">
            <summary>Sets the shim of Photo.get_Small320Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Small320WidthGet">
            <summary>Sets the shim of Photo.get_Small320Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.Small320WidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Small320Width(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SmallHeightGet">
            <summary>Sets the shim of Photo.get_SmallHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SmallHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SmallHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SmallUrlGet">
            <summary>Sets the shim of Photo.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SmallWidthGet">
            <summary>Sets the shim of Photo.get_SmallWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SmallWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SmallWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SquareThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SquareThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SquareThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SquareThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SquareThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_SquareThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.SquareThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_SquareThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.TagsGet">
            <summary>Sets the shim of Photo.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.TagsSetCollectionOfString">
            <summary>Sets the shim of Photo.set_Tags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ThumbnailHeightGet">
            <summary>Sets the shim of Photo.get_ThumbnailHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ThumbnailHeightSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_ThumbnailHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ThumbnailUrlGet">
            <summary>Sets the shim of Photo.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ThumbnailWidthGet">
            <summary>Sets the shim of Photo.get_ThumbnailWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ThumbnailWidthSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_ThumbnailWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.TitleGet">
            <summary>Sets the shim of Photo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.TitleSetString">
            <summary>Sets the shim of Photo.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.UserIdGet">
            <summary>Sets the shim of Photo.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.UserIdSetString">
            <summary>Sets the shim of Photo.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ViewsGet">
            <summary>Sets the shim of Photo.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.ViewsSetNullableOfInt32">
            <summary>Sets the shim of Photo.set_Views(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.WebUrlGet">
            <summary>Sets the shim of Photo.get_WebUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.WoeIdGet">
            <summary>Sets the shim of Photo.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhoto.AllInstances.WoeIdSetString">
            <summary>Sets the shim of Photo.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCollection">
            <summary>Shim type of FlickrNet.PhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.#ctor(FlickrNet.PhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCollection.Constructor">
            <summary>Sets the shim of PhotoCollection.PhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoComment">
            <summary>Shim type of FlickrNet.PhotoComment</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoComment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoComment.#ctor(FlickrNet.PhotoComment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoComment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoComment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoComment.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AuthorBuddyIconGet">
            <summary>Sets the shim of PhotoComment.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AuthorUserIdGet">
            <summary>Sets the shim of PhotoComment.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AuthorUserIdSetString">
            <summary>Sets the shim of PhotoComment.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AuthorUserNameGet">
            <summary>Sets the shim of PhotoComment.get_AuthorUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AuthorUserNameSetString">
            <summary>Sets the shim of PhotoComment.set_AuthorUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.CommentHtmlGet">
            <summary>Sets the shim of PhotoComment.get_CommentHtml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.CommentHtmlSetString">
            <summary>Sets the shim of PhotoComment.set_CommentHtml(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.CommentIdGet">
            <summary>Sets the shim of PhotoComment.get_CommentId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.CommentIdSetString">
            <summary>Sets the shim of PhotoComment.set_CommentId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.Constructor">
            <summary>Sets the shim of PhotoComment.PhotoComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.DateCreatedGet">
            <summary>Sets the shim of PhotoComment.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.DateCreatedSetDateTime">
            <summary>Sets the shim of PhotoComment.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoComment.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.IconFarmGet">
            <summary>Sets the shim of PhotoComment.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.IconFarmSetString">
            <summary>Sets the shim of PhotoComment.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.IconServerGet">
            <summary>Sets the shim of PhotoComment.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.IconServerSetString">
            <summary>Sets the shim of PhotoComment.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.PermalinkGet">
            <summary>Sets the shim of PhotoComment.get_Permalink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.PermalinkSetString">
            <summary>Sets the shim of PhotoComment.set_Permalink(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoComment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.AuthorBuddyIconGet">
            <summary>Sets the shim of PhotoComment.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.AuthorUserIdGet">
            <summary>Sets the shim of PhotoComment.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.AuthorUserIdSetString">
            <summary>Sets the shim of PhotoComment.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.AuthorUserNameGet">
            <summary>Sets the shim of PhotoComment.get_AuthorUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.AuthorUserNameSetString">
            <summary>Sets the shim of PhotoComment.set_AuthorUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.CommentHtmlGet">
            <summary>Sets the shim of PhotoComment.get_CommentHtml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.CommentHtmlSetString">
            <summary>Sets the shim of PhotoComment.set_CommentHtml(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.CommentIdGet">
            <summary>Sets the shim of PhotoComment.get_CommentId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.CommentIdSetString">
            <summary>Sets the shim of PhotoComment.set_CommentId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.DateCreatedGet">
            <summary>Sets the shim of PhotoComment.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of PhotoComment.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoComment.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.IconFarmGet">
            <summary>Sets the shim of PhotoComment.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.IconFarmSetString">
            <summary>Sets the shim of PhotoComment.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.IconServerGet">
            <summary>Sets the shim of PhotoComment.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.IconServerSetString">
            <summary>Sets the shim of PhotoComment.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.PermalinkGet">
            <summary>Sets the shim of PhotoComment.get_Permalink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoComment.AllInstances.PermalinkSetString">
            <summary>Sets the shim of PhotoComment.set_Permalink(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCommentCollection">
            <summary>Shim type of FlickrNet.PhotoCommentCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.#ctor(FlickrNet.PhotoCommentCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.Generic.IList{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCommentCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.Constructor">
            <summary>Sets the shim of PhotoCommentCollection.PhotoCommentCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCommentCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.PhotoIdGet">
            <summary>Sets the shim of PhotoCommentCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.PhotoIdSetString">
            <summary>Sets the shim of PhotoCommentCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCommentCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCommentCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.AllInstances.PhotoIdGet">
            <summary>Sets the shim of PhotoCommentCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCommentCollection.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of PhotoCommentCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCount">
            <summary>Shim type of FlickrNet.PhotoCount</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCount.#ctor(FlickrNet.PhotoCount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCount.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.Constructor">
            <summary>Sets the shim of PhotoCount.PhotoCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.CountGet">
            <summary>Sets the shim of PhotoCount.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.CountSetInt32">
            <summary>Sets the shim of PhotoCount.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCount.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.FromDateGet">
            <summary>Sets the shim of PhotoCount.get_FromDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.FromDateSetDateTime">
            <summary>Sets the shim of PhotoCount.set_FromDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.ToDateGet">
            <summary>Sets the shim of PhotoCount.get_ToDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.ToDateSetDateTime">
            <summary>Sets the shim of PhotoCount.set_ToDate(DateTime value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.CountGet">
            <summary>Sets the shim of PhotoCount.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.CountSetInt32">
            <summary>Sets the shim of PhotoCount.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCount.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.FromDateGet">
            <summary>Sets the shim of PhotoCount.get_FromDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.FromDateSetDateTime">
            <summary>Sets the shim of PhotoCount.set_FromDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.ToDateGet">
            <summary>Sets the shim of PhotoCount.get_ToDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCount.AllInstances.ToDateSetDateTime">
            <summary>Sets the shim of PhotoCount.set_ToDate(DateTime value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCountCollection">
            <summary>Shim type of FlickrNet.PhotoCountCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.#ctor(FlickrNet.PhotoCountCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PhotoCount})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PhotoCount})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.Generic.IList{FlickrNet.PhotoCount})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PhotoCount})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoCountCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PhotoCount})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCountCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCountCollection.Constructor">
            <summary>Sets the shim of PhotoCountCollection.PhotoCountCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCountCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCountCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoCountCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoCountCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoCountCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoFavorite">
            <summary>Shim type of FlickrNet.PhotoFavorite</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavorite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavorite.#ctor(FlickrNet.PhotoFavorite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavorite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavorite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavorite.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.Constructor">
            <summary>Sets the shim of PhotoFavorite.PhotoFavorite()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.FavoriteDateGet">
            <summary>Sets the shim of PhotoFavorite.get_FavoriteDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.FavoriteDateSetDateTime">
            <summary>Sets the shim of PhotoFavorite.set_FavoriteDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoFavorite.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.UserIdGet">
            <summary>Sets the shim of PhotoFavorite.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.UserIdSetString">
            <summary>Sets the shim of PhotoFavorite.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.UserNameGet">
            <summary>Sets the shim of PhotoFavorite.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.UserNameSetString">
            <summary>Sets the shim of PhotoFavorite.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.FavoriteDateGet">
            <summary>Sets the shim of PhotoFavorite.get_FavoriteDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.FavoriteDateSetDateTime">
            <summary>Sets the shim of PhotoFavorite.set_FavoriteDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoFavorite.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.UserIdGet">
            <summary>Sets the shim of PhotoFavorite.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.UserIdSetString">
            <summary>Sets the shim of PhotoFavorite.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.UserNameGet">
            <summary>Sets the shim of PhotoFavorite.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavorite.AllInstances.UserNameSetString">
            <summary>Sets the shim of PhotoFavorite.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoFavoriteCollection">
            <summary>Shim type of FlickrNet.PhotoFavoriteCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.#ctor(FlickrNet.PhotoFavoriteCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PhotoFavorite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PhotoFavorite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.Generic.IList{FlickrNet.PhotoFavorite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PhotoFavorite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PhotoFavorite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.Constructor">
            <summary>Sets the shim of PhotoFavoriteCollection.PhotoFavoriteCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoFavoriteCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PageGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PageSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PagesGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PagesSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PerPageGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PerPageSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PhotoIdGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.PhotoIdSetString">
            <summary>Sets the shim of PhotoFavoriteCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.TotalGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.TotalSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoFavoriteCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PageGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PhotoIdGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of PhotoFavoriteCollection.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PhotoFavoriteCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoFavoriteCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PhotoFavoriteCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfo">
            <summary>Shim type of FlickrNet.PhotoInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfo.#ctor(FlickrNet.PhotoInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_CanAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanAddMetaSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanAddMeta(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanBlogGet">
            <summary>Sets the shim of PhotoInfo.get_CanBlog()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanBlogSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanBlog(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanCommentGet">
            <summary>Sets the shim of PhotoInfo.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanCommentSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanComment(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanDownloadGet">
            <summary>Sets the shim of PhotoInfo.get_CanDownload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanDownloadSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanDownload(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPrintGet">
            <summary>Sets the shim of PhotoInfo.get_CanPrint()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPrintSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPrint(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPublicAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_CanPublicAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPublicAddMetaSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPublicAddMeta(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPublicCommentGet">
            <summary>Sets the shim of PhotoInfo.get_CanPublicComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanPublicCommentSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPublicComment(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanShareGet">
            <summary>Sets the shim of PhotoInfo.get_CanShare()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CanShareSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanShare(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CommentsCountGet">
            <summary>Sets the shim of PhotoInfo.get_CommentsCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.CommentsCountSetInt32">
            <summary>Sets the shim of PhotoInfo.set_CommentsCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.Constructor">
            <summary>Sets the shim of PhotoInfo.PhotoInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateLastUpdatedGet">
            <summary>Sets the shim of PhotoInfo.get_DateLastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateLastUpdatedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateLastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DatePostedGet">
            <summary>Sets the shim of PhotoInfo.get_DatePosted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DatePostedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DatePosted(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateTakenGet">
            <summary>Sets the shim of PhotoInfo.get_DateTaken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateTakenGranularityGet">
            <summary>Sets the shim of PhotoInfo.get_DateTakenGranularity()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateTakenGranularitySetDateGranularity">
            <summary>Sets the shim of PhotoInfo.set_DateTakenGranularity(DateGranularity value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateTakenSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateTaken(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateUploadedGet">
            <summary>Sets the shim of PhotoInfo.get_DateUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DateUploadedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateUploaded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DescriptionGet">
            <summary>Sets the shim of PhotoInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.DescriptionSetString">
            <summary>Sets the shim of PhotoInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.FarmGet">
            <summary>Sets the shim of PhotoInfo.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.FarmSetString">
            <summary>Sets the shim of PhotoInfo.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.GeoPermissionsGet">
            <summary>Sets the shim of PhotoInfo.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.GeoPermissionsSetGeoPermissions">
            <summary>Sets the shim of PhotoInfo.set_GeoPermissions(GeoPermissions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.HasPeopleGet">
            <summary>Sets the shim of PhotoInfo.get_HasPeople()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.HasPeopleSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_HasPeople(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFamilyGet">
            <summary>Sets the shim of PhotoInfo.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFamilySetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFavoriteGet">
            <summary>Sets the shim of PhotoInfo.get_IsFavorite()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFavoriteSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFavorite(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFriendGet">
            <summary>Sets the shim of PhotoInfo.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsFriendSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsPublicGet">
            <summary>Sets the shim of PhotoInfo.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.IsPublicSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LargeUrlGet">
            <summary>Sets the shim of PhotoInfo.get_LargeUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LicenseGet">
            <summary>Sets the shim of PhotoInfo.get_License()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LicenseSetLicenseType">
            <summary>Sets the shim of PhotoInfo.set_License(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LoadAttributesXmlReader">
            <summary>Sets the shim of PhotoInfo.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LoadElementsXmlReader">
            <summary>Sets the shim of PhotoInfo.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LocationGet">
            <summary>Sets the shim of PhotoInfo.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.LocationSetPlaceInfo">
            <summary>Sets the shim of PhotoInfo.set_Location(PlaceInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.MediaGet">
            <summary>Sets the shim of PhotoInfo.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.MediaSetMediaType">
            <summary>Sets the shim of PhotoInfo.set_Media(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.MediumUrlGet">
            <summary>Sets the shim of PhotoInfo.get_MediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.NotesGet">
            <summary>Sets the shim of PhotoInfo.get_Notes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.NotesSetCollectionOfPhotoInfoNote">
            <summary>Sets the shim of PhotoInfo.set_Notes(Collection`1&lt;PhotoInfoNote&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OriginalFormatGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalFormat()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OriginalFormatSetString">
            <summary>Sets the shim of PhotoInfo.set_OriginalFormat(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OriginalSecretGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OriginalSecretSetString">
            <summary>Sets the shim of PhotoInfo.set_OriginalSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OriginalUrlGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerBuddyIconGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerIconFarmGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerIconFarmSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerIconServerGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerIconServerSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerLocationGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerLocation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerLocationSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerLocation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerRealNameGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerRealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerRealNameSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerRealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerUserIdGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerUserIdSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerUserNameGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.OwnerUserNameSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseDatesXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseDates(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseEditabilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseEditability(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseNotesXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseNotes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseOwnerXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseOwner(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParsePermissionsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParsePermissions(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParsePublicEditabilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParsePublicEditability(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseTagsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseTags(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseUrlsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseUrls(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseUsageXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseUsage(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ParseVisibilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseVisibility(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PermissionAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_PermissionAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PermissionAddMetaSetNullableOfPermissionAddMeta">
            <summary>Sets the shim of PhotoInfo.set_PermissionAddMeta(Nullable`1&lt;PermissionAddMeta&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PermissionCommentGet">
            <summary>Sets the shim of PhotoInfo.get_PermissionComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PermissionCommentSetNullableOfPermissionComment">
            <summary>Sets the shim of PhotoInfo.set_PermissionComment(Nullable`1&lt;PermissionComment&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PhotoIdGet">
            <summary>Sets the shim of PhotoInfo.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.PhotoIdSetString">
            <summary>Sets the shim of PhotoInfo.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.RotationGet">
            <summary>Sets the shim of PhotoInfo.get_Rotation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.RotationSetInt32">
            <summary>Sets the shim of PhotoInfo.set_Rotation(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SafetyLevelGet">
            <summary>Sets the shim of PhotoInfo.get_SafetyLevel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SafetyLevelSetSafetyLevel">
            <summary>Sets the shim of PhotoInfo.set_SafetyLevel(SafetyLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SecretGet">
            <summary>Sets the shim of PhotoInfo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SecretSetString">
            <summary>Sets the shim of PhotoInfo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ServerGet">
            <summary>Sets the shim of PhotoInfo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ServerSetString">
            <summary>Sets the shim of PhotoInfo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SmallUrlGet">
            <summary>Sets the shim of PhotoInfo.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.SquareThumbnailUrlGet">
            <summary>Sets the shim of PhotoInfo.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.TagsGet">
            <summary>Sets the shim of PhotoInfo.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.TagsSetCollectionOfPhotoInfoTag">
            <summary>Sets the shim of PhotoInfo.set_Tags(Collection`1&lt;PhotoInfoTag&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ThumbnailUrlGet">
            <summary>Sets the shim of PhotoInfo.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.TitleGet">
            <summary>Sets the shim of PhotoInfo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.TitleSetString">
            <summary>Sets the shim of PhotoInfo.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.UrlsGet">
            <summary>Sets the shim of PhotoInfo.get_Urls()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.UrlsSetCollectionOfPhotoInfoUrl">
            <summary>Sets the shim of PhotoInfo.set_Urls(Collection`1&lt;PhotoInfoUrl&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.VideoInfoGet">
            <summary>Sets the shim of PhotoInfo.get_VideoInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.VideoInfoSetVideoInfo">
            <summary>Sets the shim of PhotoInfo.set_VideoInfo(VideoInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ViewCountGet">
            <summary>Sets the shim of PhotoInfo.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.ViewCountSetInt32">
            <summary>Sets the shim of PhotoInfo.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.WebUrlGet">
            <summary>Sets the shim of PhotoInfo.get_WebUrl()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_CanAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanAddMetaSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanAddMeta(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanBlogGet">
            <summary>Sets the shim of PhotoInfo.get_CanBlog()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanBlogSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanBlog(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanCommentGet">
            <summary>Sets the shim of PhotoInfo.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanCommentSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanComment(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanDownloadGet">
            <summary>Sets the shim of PhotoInfo.get_CanDownload()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanDownloadSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanDownload(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPrintGet">
            <summary>Sets the shim of PhotoInfo.get_CanPrint()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPrintSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPrint(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPublicAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_CanPublicAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPublicAddMetaSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPublicAddMeta(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPublicCommentGet">
            <summary>Sets the shim of PhotoInfo.get_CanPublicComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanPublicCommentSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanPublicComment(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanShareGet">
            <summary>Sets the shim of PhotoInfo.get_CanShare()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CanShareSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_CanShare(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CommentsCountGet">
            <summary>Sets the shim of PhotoInfo.get_CommentsCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.CommentsCountSetInt32">
            <summary>Sets the shim of PhotoInfo.set_CommentsCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateLastUpdatedGet">
            <summary>Sets the shim of PhotoInfo.get_DateLastUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateLastUpdatedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateLastUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DatePostedGet">
            <summary>Sets the shim of PhotoInfo.get_DatePosted()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DatePostedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DatePosted(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateTakenGet">
            <summary>Sets the shim of PhotoInfo.get_DateTaken()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateTakenGranularityGet">
            <summary>Sets the shim of PhotoInfo.get_DateTakenGranularity()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateTakenGranularitySetDateGranularity">
            <summary>Sets the shim of PhotoInfo.set_DateTakenGranularity(DateGranularity value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateTakenSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateTaken(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateUploadedGet">
            <summary>Sets the shim of PhotoInfo.get_DateUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DateUploadedSetDateTime">
            <summary>Sets the shim of PhotoInfo.set_DateUploaded(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of PhotoInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.DescriptionSetString">
            <summary>Sets the shim of PhotoInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.FarmGet">
            <summary>Sets the shim of PhotoInfo.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.FarmSetString">
            <summary>Sets the shim of PhotoInfo.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.GeoPermissionsGet">
            <summary>Sets the shim of PhotoInfo.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.GeoPermissionsSetGeoPermissions">
            <summary>Sets the shim of PhotoInfo.set_GeoPermissions(GeoPermissions value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.HasPeopleGet">
            <summary>Sets the shim of PhotoInfo.get_HasPeople()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.HasPeopleSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_HasPeople(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFamilyGet">
            <summary>Sets the shim of PhotoInfo.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFamilySetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFavoriteGet">
            <summary>Sets the shim of PhotoInfo.get_IsFavorite()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFavoriteSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFavorite(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFriendGet">
            <summary>Sets the shim of PhotoInfo.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsFriendSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsPublicGet">
            <summary>Sets the shim of PhotoInfo.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.IsPublicSetBoolean">
            <summary>Sets the shim of PhotoInfo.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LargeUrlGet">
            <summary>Sets the shim of PhotoInfo.get_LargeUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LicenseGet">
            <summary>Sets the shim of PhotoInfo.get_License()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LicenseSetLicenseType">
            <summary>Sets the shim of PhotoInfo.set_License(LicenseType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LoadAttributesXmlReader">
            <summary>Sets the shim of PhotoInfo.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LoadElementsXmlReader">
            <summary>Sets the shim of PhotoInfo.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LocationGet">
            <summary>Sets the shim of PhotoInfo.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.LocationSetPlaceInfo">
            <summary>Sets the shim of PhotoInfo.set_Location(PlaceInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.MediaGet">
            <summary>Sets the shim of PhotoInfo.get_Media()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.MediaSetMediaType">
            <summary>Sets the shim of PhotoInfo.set_Media(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.MediumUrlGet">
            <summary>Sets the shim of PhotoInfo.get_MediumUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.NotesGet">
            <summary>Sets the shim of PhotoInfo.get_Notes()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.NotesSetCollectionOfPhotoInfoNote">
            <summary>Sets the shim of PhotoInfo.set_Notes(Collection`1&lt;PhotoInfoNote&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OriginalFormatGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalFormat()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OriginalFormatSetString">
            <summary>Sets the shim of PhotoInfo.set_OriginalFormat(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OriginalSecretGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalSecret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OriginalSecretSetString">
            <summary>Sets the shim of PhotoInfo.set_OriginalSecret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OriginalUrlGet">
            <summary>Sets the shim of PhotoInfo.get_OriginalUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerBuddyIconGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerIconFarmGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerIconFarmSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerIconServerGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerIconServerSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerLocationGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerLocation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerLocationSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerLocation(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerRealNameGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerRealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerRealNameSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerRealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerUserIdGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerUserIdSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerUserNameGet">
            <summary>Sets the shim of PhotoInfo.get_OwnerUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.OwnerUserNameSetString">
            <summary>Sets the shim of PhotoInfo.set_OwnerUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseDatesXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseDates(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseEditabilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseEditability(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseNotesXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseNotes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseOwnerXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseOwner(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParsePermissionsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParsePermissions(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParsePublicEditabilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParsePublicEditability(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseTagsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseTags(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseUrlsXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseUrls(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseUsageXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseUsage(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ParseVisibilityXmlReader">
            <summary>Sets the shim of PhotoInfo.ParseVisibility(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PermissionAddMetaGet">
            <summary>Sets the shim of PhotoInfo.get_PermissionAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PermissionAddMetaSetNullableOfPermissionAddMeta">
            <summary>Sets the shim of PhotoInfo.set_PermissionAddMeta(Nullable`1&lt;PermissionAddMeta&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PermissionCommentGet">
            <summary>Sets the shim of PhotoInfo.get_PermissionComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PermissionCommentSetNullableOfPermissionComment">
            <summary>Sets the shim of PhotoInfo.set_PermissionComment(Nullable`1&lt;PermissionComment&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PhotoIdGet">
            <summary>Sets the shim of PhotoInfo.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of PhotoInfo.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.RotationGet">
            <summary>Sets the shim of PhotoInfo.get_Rotation()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.RotationSetInt32">
            <summary>Sets the shim of PhotoInfo.set_Rotation(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SafetyLevelGet">
            <summary>Sets the shim of PhotoInfo.get_SafetyLevel()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SafetyLevelSetSafetyLevel">
            <summary>Sets the shim of PhotoInfo.set_SafetyLevel(SafetyLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SecretGet">
            <summary>Sets the shim of PhotoInfo.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SecretSetString">
            <summary>Sets the shim of PhotoInfo.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ServerGet">
            <summary>Sets the shim of PhotoInfo.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ServerSetString">
            <summary>Sets the shim of PhotoInfo.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SmallUrlGet">
            <summary>Sets the shim of PhotoInfo.get_SmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.SquareThumbnailUrlGet">
            <summary>Sets the shim of PhotoInfo.get_SquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.TagsGet">
            <summary>Sets the shim of PhotoInfo.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.TagsSetCollectionOfPhotoInfoTag">
            <summary>Sets the shim of PhotoInfo.set_Tags(Collection`1&lt;PhotoInfoTag&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ThumbnailUrlGet">
            <summary>Sets the shim of PhotoInfo.get_ThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.TitleGet">
            <summary>Sets the shim of PhotoInfo.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.TitleSetString">
            <summary>Sets the shim of PhotoInfo.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.UrlsGet">
            <summary>Sets the shim of PhotoInfo.get_Urls()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.UrlsSetCollectionOfPhotoInfoUrl">
            <summary>Sets the shim of PhotoInfo.set_Urls(Collection`1&lt;PhotoInfoUrl&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.VideoInfoGet">
            <summary>Sets the shim of PhotoInfo.get_VideoInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.VideoInfoSetVideoInfo">
            <summary>Sets the shim of PhotoInfo.set_VideoInfo(VideoInfo value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ViewCountGet">
            <summary>Sets the shim of PhotoInfo.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.ViewCountSetInt32">
            <summary>Sets the shim of PhotoInfo.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfo.AllInstances.WebUrlGet">
            <summary>Sets the shim of PhotoInfo.get_WebUrl()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoNote">
            <summary>Shim type of FlickrNet.PhotoInfoNote</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoNote.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoNote.#ctor(FlickrNet.PhotoInfoNote)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoNote.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoNote.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoNote.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AuthorIdGet">
            <summary>Sets the shim of PhotoInfoNote.get_AuthorId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AuthorIdSetString">
            <summary>Sets the shim of PhotoInfoNote.set_AuthorId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AuthorNameGet">
            <summary>Sets the shim of PhotoInfoNote.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AuthorNameSetString">
            <summary>Sets the shim of PhotoInfoNote.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.Constructor">
            <summary>Sets the shim of PhotoInfoNote.PhotoInfoNote()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoNote.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.HeightGet">
            <summary>Sets the shim of PhotoInfoNote.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.HeightSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.LocationGet">
            <summary>Sets the shim of PhotoInfoNote.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.NoteIdGet">
            <summary>Sets the shim of PhotoInfoNote.get_NoteId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.NoteIdSetString">
            <summary>Sets the shim of PhotoInfoNote.set_NoteId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.NoteTextGet">
            <summary>Sets the shim of PhotoInfoNote.get_NoteText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.NoteTextSetString">
            <summary>Sets the shim of PhotoInfoNote.set_NoteText(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.SizeGet">
            <summary>Sets the shim of PhotoInfoNote.get_Size()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.WidthGet">
            <summary>Sets the shim of PhotoInfoNote.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.WidthSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_Width(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.XPositionGet">
            <summary>Sets the shim of PhotoInfoNote.get_XPosition()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.XPositionSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_XPosition(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.YPositionGet">
            <summary>Sets the shim of PhotoInfoNote.get_YPosition()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.YPositionSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_YPosition(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.AuthorIdGet">
            <summary>Sets the shim of PhotoInfoNote.get_AuthorId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.AuthorIdSetString">
            <summary>Sets the shim of PhotoInfoNote.set_AuthorId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.AuthorNameGet">
            <summary>Sets the shim of PhotoInfoNote.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.AuthorNameSetString">
            <summary>Sets the shim of PhotoInfoNote.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoNote.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.HeightGet">
            <summary>Sets the shim of PhotoInfoNote.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.HeightSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.LocationGet">
            <summary>Sets the shim of PhotoInfoNote.get_Location()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.NoteIdGet">
            <summary>Sets the shim of PhotoInfoNote.get_NoteId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.NoteIdSetString">
            <summary>Sets the shim of PhotoInfoNote.set_NoteId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.NoteTextGet">
            <summary>Sets the shim of PhotoInfoNote.get_NoteText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.NoteTextSetString">
            <summary>Sets the shim of PhotoInfoNote.set_NoteText(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.SizeGet">
            <summary>Sets the shim of PhotoInfoNote.get_Size()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.WidthGet">
            <summary>Sets the shim of PhotoInfoNote.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.WidthSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_Width(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.XPositionGet">
            <summary>Sets the shim of PhotoInfoNote.get_XPosition()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.XPositionSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_XPosition(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.YPositionGet">
            <summary>Sets the shim of PhotoInfoNote.get_YPosition()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoNote.AllInstances.YPositionSetInt32">
            <summary>Sets the shim of PhotoInfoNote.set_YPosition(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoTag">
            <summary>Shim type of FlickrNet.PhotoInfoTag</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoTag.#ctor(FlickrNet.PhotoInfoTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoTag.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AuthorIdGet">
            <summary>Sets the shim of PhotoInfoTag.get_AuthorId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AuthorIdSetString">
            <summary>Sets the shim of PhotoInfoTag.set_AuthorId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AuthorNameGet">
            <summary>Sets the shim of PhotoInfoTag.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AuthorNameSetString">
            <summary>Sets the shim of PhotoInfoTag.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.Constructor">
            <summary>Sets the shim of PhotoInfoTag.PhotoInfoTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.IsMachineTagGet">
            <summary>Sets the shim of PhotoInfoTag.get_IsMachineTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.IsMachineTagSetBoolean">
            <summary>Sets the shim of PhotoInfoTag.set_IsMachineTag(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.RawGet">
            <summary>Sets the shim of PhotoInfoTag.get_Raw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.RawSetString">
            <summary>Sets the shim of PhotoInfoTag.set_Raw(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.TagIdGet">
            <summary>Sets the shim of PhotoInfoTag.get_TagId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.TagIdSetString">
            <summary>Sets the shim of PhotoInfoTag.set_TagId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.TagTextGet">
            <summary>Sets the shim of PhotoInfoTag.get_TagText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.TagTextSetString">
            <summary>Sets the shim of PhotoInfoTag.set_TagText(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.AuthorIdGet">
            <summary>Sets the shim of PhotoInfoTag.get_AuthorId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.AuthorIdSetString">
            <summary>Sets the shim of PhotoInfoTag.set_AuthorId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.AuthorNameGet">
            <summary>Sets the shim of PhotoInfoTag.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.AuthorNameSetString">
            <summary>Sets the shim of PhotoInfoTag.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.IsMachineTagGet">
            <summary>Sets the shim of PhotoInfoTag.get_IsMachineTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.IsMachineTagSetBoolean">
            <summary>Sets the shim of PhotoInfoTag.set_IsMachineTag(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.RawGet">
            <summary>Sets the shim of PhotoInfoTag.get_Raw()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.RawSetString">
            <summary>Sets the shim of PhotoInfoTag.set_Raw(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.TagIdGet">
            <summary>Sets the shim of PhotoInfoTag.get_TagId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.TagIdSetString">
            <summary>Sets the shim of PhotoInfoTag.set_TagId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.TagTextGet">
            <summary>Sets the shim of PhotoInfoTag.get_TagText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoTag.AllInstances.TagTextSetString">
            <summary>Sets the shim of PhotoInfoTag.set_TagText(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoUrl">
            <summary>Shim type of FlickrNet.PhotoInfoUrl</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoUrl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoUrl.#ctor(FlickrNet.PhotoInfoUrl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoUrl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoUrl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoInfoUrl.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.Constructor">
            <summary>Sets the shim of PhotoInfoUrl.PhotoInfoUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoUrl.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.UrlGet">
            <summary>Sets the shim of PhotoInfoUrl.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.UrlSetString">
            <summary>Sets the shim of PhotoInfoUrl.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.UrlTypeGet">
            <summary>Sets the shim of PhotoInfoUrl.get_UrlType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.UrlTypeSetString">
            <summary>Sets the shim of PhotoInfoUrl.set_UrlType(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoInfoUrl.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances.UrlGet">
            <summary>Sets the shim of PhotoInfoUrl.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances.UrlSetString">
            <summary>Sets the shim of PhotoInfoUrl.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances.UrlTypeGet">
            <summary>Sets the shim of PhotoInfoUrl.get_UrlType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoInfoUrl.AllInstances.UrlTypeSetString">
            <summary>Sets the shim of PhotoInfoUrl.set_UrlType(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPermissions">
            <summary>Shim type of FlickrNet.PhotoPermissions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPermissions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPermissions.#ctor(FlickrNet.PhotoPermissions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPermissions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPermissions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPermissions.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.Constructor">
            <summary>Sets the shim of PhotoPermissions.PhotoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsFamilyGet">
            <summary>Sets the shim of PhotoPermissions.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsFamilySetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsFriendGet">
            <summary>Sets the shim of PhotoPermissions.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsFriendSetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsPublicGet">
            <summary>Sets the shim of PhotoPermissions.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.IsPublicSetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PermissionAddMetaGet">
            <summary>Sets the shim of PhotoPermissions.get_PermissionAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PermissionAddMetaSetPermissionAddMeta">
            <summary>Sets the shim of PhotoPermissions.set_PermissionAddMeta(PermissionAddMeta value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PermissionCommentGet">
            <summary>Sets the shim of PhotoPermissions.get_PermissionComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PermissionCommentSetPermissionComment">
            <summary>Sets the shim of PhotoPermissions.set_PermissionComment(PermissionComment value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PhotoIdGet">
            <summary>Sets the shim of PhotoPermissions.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.PhotoIdSetString">
            <summary>Sets the shim of PhotoPermissions.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsFamilyGet">
            <summary>Sets the shim of PhotoPermissions.get_IsFamily()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsFamilySetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsFamily(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsFriendGet">
            <summary>Sets the shim of PhotoPermissions.get_IsFriend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsFriendSetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsFriend(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsPublicGet">
            <summary>Sets the shim of PhotoPermissions.get_IsPublic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.IsPublicSetBoolean">
            <summary>Sets the shim of PhotoPermissions.set_IsPublic(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PermissionAddMetaGet">
            <summary>Sets the shim of PhotoPermissions.get_PermissionAddMeta()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PermissionAddMetaSetPermissionAddMeta">
            <summary>Sets the shim of PhotoPermissions.set_PermissionAddMeta(PermissionAddMeta value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PermissionCommentGet">
            <summary>Sets the shim of PhotoPermissions.get_PermissionComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PermissionCommentSetPermissionComment">
            <summary>Sets the shim of PhotoPermissions.set_PermissionComment(PermissionComment value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PhotoIdGet">
            <summary>Sets the shim of PhotoPermissions.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPermissions.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of PhotoPermissions.set_PhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPerson">
            <summary>Shim type of FlickrNet.PhotoPerson</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPerson.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPerson.#ctor(FlickrNet.PhotoPerson)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPerson.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPerson.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPerson.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AddedByUserIdGet">
            <summary>Sets the shim of PhotoPerson.get_AddedByUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AddedByUserIdSetString">
            <summary>Sets the shim of PhotoPerson.set_AddedByUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.BuddyIconUrlGet">
            <summary>Sets the shim of PhotoPerson.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.Constructor">
            <summary>Sets the shim of PhotoPerson.PhotoPerson()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPerson.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.IconFarmGet">
            <summary>Sets the shim of PhotoPerson.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.IconFarmSetString">
            <summary>Sets the shim of PhotoPerson.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.IconServerGet">
            <summary>Sets the shim of PhotoPerson.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.IconServerSetString">
            <summary>Sets the shim of PhotoPerson.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PathAliasGet">
            <summary>Sets the shim of PhotoPerson.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PathAliasSetString">
            <summary>Sets the shim of PhotoPerson.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PhotostreamUrlGet">
            <summary>Sets the shim of PhotoPerson.get_PhotostreamUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionHeightGet">
            <summary>Sets the shim of PhotoPerson.get_PositionHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionHeightSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionWidthGet">
            <summary>Sets the shim of PhotoPerson.get_PositionWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionWidthSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionXGet">
            <summary>Sets the shim of PhotoPerson.get_PositionX()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionXSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionX(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionYGet">
            <summary>Sets the shim of PhotoPerson.get_PositionY()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.PositionYSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionY(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.RealNameGet">
            <summary>Sets the shim of PhotoPerson.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.RealNameSetString">
            <summary>Sets the shim of PhotoPerson.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.UserIdGet">
            <summary>Sets the shim of PhotoPerson.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.UserIdSetString">
            <summary>Sets the shim of PhotoPerson.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.UserNameGet">
            <summary>Sets the shim of PhotoPerson.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.UserNameSetString">
            <summary>Sets the shim of PhotoPerson.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPerson.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.AddedByUserIdGet">
            <summary>Sets the shim of PhotoPerson.get_AddedByUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.AddedByUserIdSetString">
            <summary>Sets the shim of PhotoPerson.set_AddedByUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.BuddyIconUrlGet">
            <summary>Sets the shim of PhotoPerson.get_BuddyIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPerson.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.IconFarmGet">
            <summary>Sets the shim of PhotoPerson.get_IconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.IconFarmSetString">
            <summary>Sets the shim of PhotoPerson.set_IconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.IconServerGet">
            <summary>Sets the shim of PhotoPerson.get_IconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.IconServerSetString">
            <summary>Sets the shim of PhotoPerson.set_IconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PathAliasGet">
            <summary>Sets the shim of PhotoPerson.get_PathAlias()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PathAliasSetString">
            <summary>Sets the shim of PhotoPerson.set_PathAlias(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PhotostreamUrlGet">
            <summary>Sets the shim of PhotoPerson.get_PhotostreamUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionHeightGet">
            <summary>Sets the shim of PhotoPerson.get_PositionHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionHeightSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionHeight(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionWidthGet">
            <summary>Sets the shim of PhotoPerson.get_PositionWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionWidthSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionWidth(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionXGet">
            <summary>Sets the shim of PhotoPerson.get_PositionX()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionXSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionX(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionYGet">
            <summary>Sets the shim of PhotoPerson.get_PositionY()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.PositionYSetNullableOfInt32">
            <summary>Sets the shim of PhotoPerson.set_PositionY(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.RealNameGet">
            <summary>Sets the shim of PhotoPerson.get_RealName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.RealNameSetString">
            <summary>Sets the shim of PhotoPerson.set_RealName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.UserIdGet">
            <summary>Sets the shim of PhotoPerson.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.UserIdSetString">
            <summary>Sets the shim of PhotoPerson.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.UserNameGet">
            <summary>Sets the shim of PhotoPerson.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPerson.AllInstances.UserNameSetString">
            <summary>Sets the shim of PhotoPerson.set_UserName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPersonCollection">
            <summary>Shim type of FlickrNet.PhotoPersonCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.#ctor(FlickrNet.PhotoPersonCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PhotoPerson})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PhotoPerson})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.Generic.IList{FlickrNet.PhotoPerson})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PhotoPerson})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoPersonCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PhotoPerson})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.Constructor">
            <summary>Sets the shim of PhotoPersonCollection.PhotoPersonCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPersonCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.PhotoHeightGet">
            <summary>Sets the shim of PhotoPersonCollection.get_PhotoHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.PhotoHeightSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_PhotoHeight(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.PhotoWidthGet">
            <summary>Sets the shim of PhotoPersonCollection.get_PhotoWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.PhotoWidthSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_PhotoWidth(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.TotalGet">
            <summary>Sets the shim of PhotoPersonCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.TotalSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotoPersonCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.PhotoHeightGet">
            <summary>Sets the shim of PhotoPersonCollection.get_PhotoHeight()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.PhotoHeightSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_PhotoHeight(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.PhotoWidthGet">
            <summary>Sets the shim of PhotoPersonCollection.get_PhotoWidth()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.PhotoWidthSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_PhotoWidth(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PhotoPersonCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoPersonCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PhotoPersonCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoSearchOptions">
            <summary>Shim type of FlickrNet.PhotoSearchOptions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoSearchOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoSearchOptions.#ctor(FlickrNet.PhotoSearchOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoSearchOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoSearchOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AccuracyGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AccuracySetGeoAccuracy">
            <summary>Sets the shim of PhotoSearchOptions.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AddToDictionaryDictionaryOfStringString">
            <summary>Sets the shim of PhotoSearchOptions.AddToDictionary(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.BoundaryBoxGet">
            <summary>Sets the shim of PhotoSearchOptions.get_BoundaryBox()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.BoundaryBoxSetBoundaryBox">
            <summary>Sets the shim of PhotoSearchOptions.set_BoundaryBox(BoundaryBox value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.CalculateSlideshowUrl">
            <summary>Sets the shim of PhotoSearchOptions.CalculateSlideshowUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.CameraGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Camera()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.CameraSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Camera(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.Constructor">
            <summary>Sets the shim of PhotoSearchOptions.PhotoSearchOptions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ConstructorString">
            <summary>Sets the shim of PhotoSearchOptions.PhotoSearchOptions(String userId)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ConstructorStringString">
            <summary>Sets the shim of PhotoSearchOptions.PhotoSearchOptions(String userId, String tags)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ConstructorStringStringTagMode">
            <summary>Sets the shim of PhotoSearchOptions.PhotoSearchOptions(String userId, String tags, TagMode tagMode)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ConstructorStringStringTagModeString">
            <summary>Sets the shim of PhotoSearchOptions.PhotoSearchOptions(String userId, String tags, TagMode tagMode, String text)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ContactsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Contacts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ContactsSetContactSearch">
            <summary>Sets the shim of PhotoSearchOptions.set_Contacts(ContactSearch value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ContentTypeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_ContentType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ContentTypeSetContentTypeSearch">
            <summary>Sets the shim of PhotoSearchOptions.set_ContentType(ContentTypeSearch value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ExtrasGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Extras()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ExtrasSetPhotoSearchExtras">
            <summary>Sets the shim of PhotoSearchOptions.set_Extras(PhotoSearchExtras value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.ExtrasStringGet">
            <summary>Sets the shim of PhotoSearchOptions.get_ExtrasString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.FavesGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Faves()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.FavesSetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_Faves(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.GeoContextGet">
            <summary>Sets the shim of PhotoSearchOptions.get_GeoContext()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.GeoContextSetGeoContext">
            <summary>Sets the shim of PhotoSearchOptions.set_GeoContext(GeoContext value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.GroupIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.GroupIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.HasGeoGet">
            <summary>Sets the shim of PhotoSearchOptions.get_HasGeo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.HasGeoSetNullableOfBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_HasGeo(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.InGalleryGet">
            <summary>Sets the shim of PhotoSearchOptions.get_InGallery()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.InGallerySetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_InGallery(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.IsCommonsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_IsCommons()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.IsCommonsSetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_IsCommons(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.IsGettyGet">
            <summary>Sets the shim of PhotoSearchOptions.get_IsGetty()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.IsGettySetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_IsGetty(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.JumpToGet">
            <summary>Sets the shim of PhotoSearchOptions.get_JumpTo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.JumpToSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_JumpTo(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.LatitudeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.LatitudeSetNullableOfDouble">
            <summary>Sets the shim of PhotoSearchOptions.set_Latitude(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.LicensesGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Licenses()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.LongitudeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.LongitudeSetNullableOfDouble">
            <summary>Sets the shim of PhotoSearchOptions.set_Longitude(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MachineTagModeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MachineTagMode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MachineTagModeSetMachineTagMode">
            <summary>Sets the shim of PhotoSearchOptions.set_MachineTagMode(MachineTagMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MachineTagsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MachineTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MachineTagsSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_MachineTags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MaxTakenDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MaxTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MaxTakenDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MaxTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MaxUploadDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MaxUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MaxUploadDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MaxUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MediaTypeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MediaTypeSetMediaType">
            <summary>Sets the shim of PhotoSearchOptions.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MinTakenDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MinTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MinTakenDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MinTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MinUploadDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MinUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.MinUploadDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MinUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PageGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PageSetInt32">
            <summary>Sets the shim of PhotoSearchOptions.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PerPageGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PerPageSetInt32">
            <summary>Sets the shim of PhotoSearchOptions.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PersonIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PersonId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PersonIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_PersonId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PlaceIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PlaceIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PrivacyFilterGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PrivacyFilter()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.PrivacyFilterSetPrivacyFilter">
            <summary>Sets the shim of PhotoSearchOptions.set_PrivacyFilter(PrivacyFilter value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.RadiusGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Radius()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.RadiusSetNullableOfSingle">
            <summary>Sets the shim of PhotoSearchOptions.set_Radius(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.RadiusUnitsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_RadiusUnits()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.RadiusUnitsSetRadiusUnit">
            <summary>Sets the shim of PhotoSearchOptions.set_RadiusUnits(RadiusUnit value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.SafeSearchGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SafeSearch()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.SafeSearchSetSafetyLevel">
            <summary>Sets the shim of PhotoSearchOptions.set_SafeSearch(SafetyLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.SortOrderGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SortOrder()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.SortOrderSetPhotoSearchSortOrder">
            <summary>Sets the shim of PhotoSearchOptions.set_SortOrder(PhotoSearchSortOrder value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.SortOrderStringGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SortOrderString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TagModeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_TagMode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TagModeSetTagMode">
            <summary>Sets the shim of PhotoSearchOptions.set_TagMode(TagMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TagsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TagsSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Tags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TextGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Text()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.TextSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Text(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.UserIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.UserIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.WoeIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.WoeIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.AccuracyGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.AccuracySetGeoAccuracy">
            <summary>Sets the shim of PhotoSearchOptions.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.AddToDictionaryDictionaryOfStringString">
            <summary>Sets the shim of PhotoSearchOptions.AddToDictionary(Dictionary`2&lt;String,String&gt; parameters)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.BoundaryBoxGet">
            <summary>Sets the shim of PhotoSearchOptions.get_BoundaryBox()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.BoundaryBoxSetBoundaryBox">
            <summary>Sets the shim of PhotoSearchOptions.set_BoundaryBox(BoundaryBox value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.CalculateSlideshowUrl">
            <summary>Sets the shim of PhotoSearchOptions.CalculateSlideshowUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.CameraGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Camera()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.CameraSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Camera(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ContactsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Contacts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ContactsSetContactSearch">
            <summary>Sets the shim of PhotoSearchOptions.set_Contacts(ContactSearch value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ContentTypeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_ContentType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ContentTypeSetContentTypeSearch">
            <summary>Sets the shim of PhotoSearchOptions.set_ContentType(ContentTypeSearch value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ExtrasGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Extras()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ExtrasSetPhotoSearchExtras">
            <summary>Sets the shim of PhotoSearchOptions.set_Extras(PhotoSearchExtras value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.ExtrasStringGet">
            <summary>Sets the shim of PhotoSearchOptions.get_ExtrasString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.FavesGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Faves()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.FavesSetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_Faves(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.GeoContextGet">
            <summary>Sets the shim of PhotoSearchOptions.get_GeoContext()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.GeoContextSetGeoContext">
            <summary>Sets the shim of PhotoSearchOptions.set_GeoContext(GeoContext value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.GroupIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.GroupIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.HasGeoGet">
            <summary>Sets the shim of PhotoSearchOptions.get_HasGeo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.HasGeoSetNullableOfBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_HasGeo(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.InGalleryGet">
            <summary>Sets the shim of PhotoSearchOptions.get_InGallery()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.InGallerySetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_InGallery(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.IsCommonsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_IsCommons()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.IsCommonsSetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_IsCommons(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.IsGettyGet">
            <summary>Sets the shim of PhotoSearchOptions.get_IsGetty()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.IsGettySetBoolean">
            <summary>Sets the shim of PhotoSearchOptions.set_IsGetty(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.JumpToGet">
            <summary>Sets the shim of PhotoSearchOptions.get_JumpTo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.JumpToSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_JumpTo(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.LatitudeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.LatitudeSetNullableOfDouble">
            <summary>Sets the shim of PhotoSearchOptions.set_Latitude(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.LicensesGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Licenses()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.LongitudeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.LongitudeSetNullableOfDouble">
            <summary>Sets the shim of PhotoSearchOptions.set_Longitude(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MachineTagModeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MachineTagMode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MachineTagModeSetMachineTagMode">
            <summary>Sets the shim of PhotoSearchOptions.set_MachineTagMode(MachineTagMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MachineTagsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MachineTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MachineTagsSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_MachineTags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MaxTakenDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MaxTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MaxTakenDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MaxTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MaxUploadDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MaxUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MaxUploadDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MaxUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MediaTypeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MediaTypeSetMediaType">
            <summary>Sets the shim of PhotoSearchOptions.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MinTakenDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MinTakenDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MinTakenDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MinTakenDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MinUploadDateGet">
            <summary>Sets the shim of PhotoSearchOptions.get_MinUploadDate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.MinUploadDateSetDateTime">
            <summary>Sets the shim of PhotoSearchOptions.set_MinUploadDate(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PageGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PageSetInt32">
            <summary>Sets the shim of PhotoSearchOptions.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PerPageGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PhotoSearchOptions.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PersonIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PersonId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PersonIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_PersonId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PlaceIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PrivacyFilterGet">
            <summary>Sets the shim of PhotoSearchOptions.get_PrivacyFilter()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.PrivacyFilterSetPrivacyFilter">
            <summary>Sets the shim of PhotoSearchOptions.set_PrivacyFilter(PrivacyFilter value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.RadiusGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Radius()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.RadiusSetNullableOfSingle">
            <summary>Sets the shim of PhotoSearchOptions.set_Radius(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.RadiusUnitsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_RadiusUnits()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.RadiusUnitsSetRadiusUnit">
            <summary>Sets the shim of PhotoSearchOptions.set_RadiusUnits(RadiusUnit value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.SafeSearchGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SafeSearch()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.SafeSearchSetSafetyLevel">
            <summary>Sets the shim of PhotoSearchOptions.set_SafeSearch(SafetyLevel value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.SortOrderGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SortOrder()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.SortOrderSetPhotoSearchSortOrder">
            <summary>Sets the shim of PhotoSearchOptions.set_SortOrder(PhotoSearchSortOrder value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.SortOrderStringGet">
            <summary>Sets the shim of PhotoSearchOptions.get_SortOrderString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TagModeGet">
            <summary>Sets the shim of PhotoSearchOptions.get_TagMode()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TagModeSetTagMode">
            <summary>Sets the shim of PhotoSearchOptions.set_TagMode(TagMode value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TagsGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Tags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TagsSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Tags(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TextGet">
            <summary>Sets the shim of PhotoSearchOptions.get_Text()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.TextSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_Text(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.UserIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.UserIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.WoeIdGet">
            <summary>Sets the shim of PhotoSearchOptions.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoSearchOptions.AllInstances.WoeIdSetString">
            <summary>Sets the shim of PhotoSearchOptions.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoset">
            <summary>Shim type of FlickrNet.Photoset</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoset.#ctor(FlickrNet.Photoset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotoset.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.CanCommentGet">
            <summary>Sets the shim of Photoset.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.CanCommentSetNullableOfBoolean">
            <summary>Sets the shim of Photoset.set_CanComment(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.CommentCountGet">
            <summary>Sets the shim of Photoset.get_CommentCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.CommentCountSetInt32">
            <summary>Sets the shim of Photoset.set_CommentCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.Constructor">
            <summary>Sets the shim of Photoset.Photoset()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DateCreatedGet">
            <summary>Sets the shim of Photoset.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DateCreatedSetDateTime">
            <summary>Sets the shim of Photoset.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DateUpdatedGet">
            <summary>Sets the shim of Photoset.get_DateUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DateUpdatedSetDateTime">
            <summary>Sets the shim of Photoset.set_DateUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DescriptionGet">
            <summary>Sets the shim of Photoset.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.DescriptionSetString">
            <summary>Sets the shim of Photoset.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.FarmGet">
            <summary>Sets the shim of Photoset.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.FarmSetString">
            <summary>Sets the shim of Photoset.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Photoset.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.NumberOfPhotosGet">
            <summary>Sets the shim of Photoset.get_NumberOfPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.NumberOfPhotosSetInt32">
            <summary>Sets the shim of Photoset.set_NumberOfPhotos(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.NumberOfVideosGet">
            <summary>Sets the shim of Photoset.get_NumberOfVideos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.NumberOfVideosSetInt32">
            <summary>Sets the shim of Photoset.set_NumberOfVideos(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.OwnerIdGet">
            <summary>Sets the shim of Photoset.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.OwnerIdSetString">
            <summary>Sets the shim of Photoset.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PhotosetIdGet">
            <summary>Sets the shim of Photoset.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PhotosetIdSetString">
            <summary>Sets the shim of Photoset.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PhotosetSmallUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetSmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PhotosetSquareThumbnailUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PhotosetThumbnailUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PrimaryPhotoIdGet">
            <summary>Sets the shim of Photoset.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.PrimaryPhotoIdSetString">
            <summary>Sets the shim of Photoset.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.SecretGet">
            <summary>Sets the shim of Photoset.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.SecretSetString">
            <summary>Sets the shim of Photoset.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.ServerGet">
            <summary>Sets the shim of Photoset.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.ServerSetString">
            <summary>Sets the shim of Photoset.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.TitleGet">
            <summary>Sets the shim of Photoset.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.TitleSetString">
            <summary>Sets the shim of Photoset.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.UrlGet">
            <summary>Sets the shim of Photoset.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.UrlSetString">
            <summary>Sets the shim of Photoset.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.ViewCountGet">
            <summary>Sets the shim of Photoset.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.ViewCountSetInt32">
            <summary>Sets the shim of Photoset.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotoset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.CanCommentGet">
            <summary>Sets the shim of Photoset.get_CanComment()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.CanCommentSetNullableOfBoolean">
            <summary>Sets the shim of Photoset.set_CanComment(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.CommentCountGet">
            <summary>Sets the shim of Photoset.get_CommentCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.CommentCountSetInt32">
            <summary>Sets the shim of Photoset.set_CommentCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DateCreatedGet">
            <summary>Sets the shim of Photoset.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of Photoset.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DateUpdatedGet">
            <summary>Sets the shim of Photoset.get_DateUpdated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DateUpdatedSetDateTime">
            <summary>Sets the shim of Photoset.set_DateUpdated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DescriptionGet">
            <summary>Sets the shim of Photoset.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Photoset.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.FarmGet">
            <summary>Sets the shim of Photoset.get_Farm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.FarmSetString">
            <summary>Sets the shim of Photoset.set_Farm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Photoset.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.NumberOfPhotosGet">
            <summary>Sets the shim of Photoset.get_NumberOfPhotos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.NumberOfPhotosSetInt32">
            <summary>Sets the shim of Photoset.set_NumberOfPhotos(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.NumberOfVideosGet">
            <summary>Sets the shim of Photoset.get_NumberOfVideos()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.NumberOfVideosSetInt32">
            <summary>Sets the shim of Photoset.set_NumberOfVideos(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.OwnerIdGet">
            <summary>Sets the shim of Photoset.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.OwnerIdSetString">
            <summary>Sets the shim of Photoset.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PhotosetIdGet">
            <summary>Sets the shim of Photoset.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PhotosetIdSetString">
            <summary>Sets the shim of Photoset.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PhotosetSmallUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetSmallUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PhotosetSquareThumbnailUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetSquareThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PhotosetThumbnailUrlGet">
            <summary>Sets the shim of Photoset.get_PhotosetThumbnailUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PrimaryPhotoIdGet">
            <summary>Sets the shim of Photoset.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.PrimaryPhotoIdSetString">
            <summary>Sets the shim of Photoset.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.SecretGet">
            <summary>Sets the shim of Photoset.get_Secret()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.SecretSetString">
            <summary>Sets the shim of Photoset.set_Secret(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.ServerGet">
            <summary>Sets the shim of Photoset.get_Server()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.ServerSetString">
            <summary>Sets the shim of Photoset.set_Server(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.TitleGet">
            <summary>Sets the shim of Photoset.get_Title()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.TitleSetString">
            <summary>Sets the shim of Photoset.set_Title(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.UrlGet">
            <summary>Sets the shim of Photoset.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.UrlSetString">
            <summary>Sets the shim of Photoset.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.ViewCountGet">
            <summary>Sets the shim of Photoset.get_ViewCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotoset.AllInstances.ViewCountSetInt32">
            <summary>Sets the shim of Photoset.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetCollection">
            <summary>Shim type of FlickrNet.PhotosetCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.#ctor(FlickrNet.PhotosetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photoset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photoset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photoset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photoset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photoset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.CanCreateGet">
            <summary>Sets the shim of PhotosetCollection.get_CanCreate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.CanCreateSetBoolean">
            <summary>Sets the shim of PhotosetCollection.set_CanCreate(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.Constructor">
            <summary>Sets the shim of PhotosetCollection.PhotosetCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PageGet">
            <summary>Sets the shim of PhotosetCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PageSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PagesGet">
            <summary>Sets the shim of PhotosetCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PagesSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PerPageGet">
            <summary>Sets the shim of PhotosetCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.PerPageSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.TotalGet">
            <summary>Sets the shim of PhotosetCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.TotalSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.CanCreateGet">
            <summary>Sets the shim of PhotosetCollection.get_CanCreate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.CanCreateSetBoolean">
            <summary>Sets the shim of PhotosetCollection.set_CanCreate(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PageGet">
            <summary>Sets the shim of PhotosetCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PhotosetCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PhotosetCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PhotosetCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PhotosetCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetCommentCollection">
            <summary>Shim type of FlickrNet.PhotosetCommentCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.#ctor(FlickrNet.PhotosetCommentCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.Generic.IList{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetCommentCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PhotoComment})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.Constructor">
            <summary>Sets the shim of PhotosetCommentCollection.PhotosetCommentCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetCommentCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.PhotosetIdGet">
            <summary>Sets the shim of PhotosetCommentCollection.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.PhotosetIdSetString">
            <summary>Sets the shim of PhotosetCommentCollection.set_PhotosetId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetCommentCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetCommentCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.AllInstances.PhotosetIdGet">
            <summary>Sets the shim of PhotosetCommentCollection.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetCommentCollection.AllInstances.PhotosetIdSetString">
            <summary>Sets the shim of PhotosetCommentCollection.set_PhotosetId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetPhotoCollection">
            <summary>Shim type of FlickrNet.PhotosetPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.#ctor(FlickrNet.PhotosetPhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Photo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.Constructor">
            <summary>Sets the shim of PhotosetPhotoCollection.PhotosetPhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.OwnerIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.OwnerIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.OwnerNameGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.OwnerNameSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.PhotosetIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.PhotosetIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.PrimaryPhotoIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.PrimaryPhotoIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PhotosetPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.OwnerIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_OwnerId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.OwnerIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_OwnerId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.OwnerNameGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_OwnerName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.OwnerNameSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_OwnerName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.PhotosetIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_PhotosetId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.PhotosetIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_PhotosetId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.PrimaryPhotoIdGet">
            <summary>Sets the shim of PhotosetPhotoCollection.get_PrimaryPhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPhotosetPhotoCollection.AllInstances.PrimaryPhotoIdSetString">
            <summary>Sets the shim of PhotosetPhotoCollection.set_PrimaryPhotoId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlace">
            <summary>Shim type of FlickrNet.Place</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlace.#ctor(FlickrNet.Place)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlace.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.Constructor">
            <summary>Sets the shim of Place.Place()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.DescriptionGet">
            <summary>Sets the shim of Place.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.DescriptionSetString">
            <summary>Sets the shim of Place.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Place.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.LatitudeGet">
            <summary>Sets the shim of Place.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.LatitudeSetDouble">
            <summary>Sets the shim of Place.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.LongitudeGet">
            <summary>Sets the shim of Place.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.LongitudeSetDouble">
            <summary>Sets the shim of Place.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PhotoCountGet">
            <summary>Sets the shim of Place.get_PhotoCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PhotoCountSetNullableOfInt32">
            <summary>Sets the shim of Place.set_PhotoCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceIdGet">
            <summary>Sets the shim of Place.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceIdSetString">
            <summary>Sets the shim of Place.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceTypeGet">
            <summary>Sets the shim of Place.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceTypeSetPlaceType">
            <summary>Sets the shim of Place.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceUrlGet">
            <summary>Sets the shim of Place.get_PlaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.PlaceUrlSetString">
            <summary>Sets the shim of Place.set_PlaceUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.TimeZoneGet">
            <summary>Sets the shim of Place.get_TimeZone()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.TimeZoneSetString">
            <summary>Sets the shim of Place.set_TimeZone(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.WoeIdGet">
            <summary>Sets the shim of Place.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.WoeIdSetString">
            <summary>Sets the shim of Place.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlace.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.DescriptionGet">
            <summary>Sets the shim of Place.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Place.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Place.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.LatitudeGet">
            <summary>Sets the shim of Place.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.LatitudeSetDouble">
            <summary>Sets the shim of Place.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.LongitudeGet">
            <summary>Sets the shim of Place.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.LongitudeSetDouble">
            <summary>Sets the shim of Place.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PhotoCountGet">
            <summary>Sets the shim of Place.get_PhotoCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PhotoCountSetNullableOfInt32">
            <summary>Sets the shim of Place.set_PhotoCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceIdGet">
            <summary>Sets the shim of Place.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of Place.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceTypeGet">
            <summary>Sets the shim of Place.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceTypeSetPlaceType">
            <summary>Sets the shim of Place.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceUrlGet">
            <summary>Sets the shim of Place.get_PlaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.PlaceUrlSetString">
            <summary>Sets the shim of Place.set_PlaceUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.TimeZoneGet">
            <summary>Sets the shim of Place.get_TimeZone()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.TimeZoneSetString">
            <summary>Sets the shim of Place.set_TimeZone(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.WoeIdGet">
            <summary>Sets the shim of Place.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlace.AllInstances.WoeIdSetString">
            <summary>Sets the shim of Place.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceCollection">
            <summary>Shim type of FlickrNet.PlaceCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.#ctor(FlickrNet.PlaceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Place})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Place})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.Generic.IList{FlickrNet.Place})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Place})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Place})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceCollection.Constructor">
            <summary>Sets the shim of PlaceCollection.PlaceCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceInfo">
            <summary>Shim type of FlickrNet.PlaceInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceInfo.#ctor(FlickrNet.PlaceInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AccuracyGet">
            <summary>Sets the shim of PlaceInfo.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AccuracySetNullableOfGeoAccuracy">
            <summary>Sets the shim of PlaceInfo.set_Accuracy(Nullable`1&lt;GeoAccuracy&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.Constructor">
            <summary>Sets the shim of PlaceInfo.PlaceInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.ContextGet">
            <summary>Sets the shim of PlaceInfo.get_Context()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.ContextSetNullableOfGeoContext">
            <summary>Sets the shim of PlaceInfo.set_Context(Nullable`1&lt;GeoContext&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.CountryGet">
            <summary>Sets the shim of PlaceInfo.get_Country()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.CountrySetPlace">
            <summary>Sets the shim of PlaceInfo.set_Country(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.CountyGet">
            <summary>Sets the shim of PlaceInfo.get_County()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.CountySetPlace">
            <summary>Sets the shim of PlaceInfo.set_County(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.DescriptionGet">
            <summary>Sets the shim of PlaceInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.DescriptionSetString">
            <summary>Sets the shim of PlaceInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.HasShapeDataGet">
            <summary>Sets the shim of PlaceInfo.get_HasShapeData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.HasShapeDataSetBoolean">
            <summary>Sets the shim of PlaceInfo.set_HasShapeData(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LatitudeGet">
            <summary>Sets the shim of PlaceInfo.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LatitudeSetDouble">
            <summary>Sets the shim of PlaceInfo.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LoadAttributesXmlReader">
            <summary>Sets the shim of PlaceInfo.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LoadElementsXmlReader">
            <summary>Sets the shim of PlaceInfo.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LocalityGet">
            <summary>Sets the shim of PlaceInfo.get_Locality()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LocalitySetPlace">
            <summary>Sets the shim of PlaceInfo.set_Locality(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LongitudeGet">
            <summary>Sets the shim of PlaceInfo.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.LongitudeSetDouble">
            <summary>Sets the shim of PlaceInfo.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.NeighbourhoodGet">
            <summary>Sets the shim of PlaceInfo.get_Neighbourhood()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.NeighbourhoodSetPlace">
            <summary>Sets the shim of PlaceInfo.set_Neighbourhood(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceFlickrUrlGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceFlickrUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceIdGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceIdSetString">
            <summary>Sets the shim of PlaceInfo.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceTypeGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceTypeSetPlaceType">
            <summary>Sets the shim of PlaceInfo.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceUrlGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.PlaceUrlSetString">
            <summary>Sets the shim of PlaceInfo.set_PlaceUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.RegionGet">
            <summary>Sets the shim of PlaceInfo.get_Region()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.RegionSetPlace">
            <summary>Sets the shim of PlaceInfo.set_Region(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.ShapeDataGet">
            <summary>Sets the shim of PlaceInfo.get_ShapeData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.ShapeDataSetShapeData">
            <summary>Sets the shim of PlaceInfo.set_ShapeData(ShapeData value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.TimeZoneGet">
            <summary>Sets the shim of PlaceInfo.get_TimeZone()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.TimeZoneSetString">
            <summary>Sets the shim of PlaceInfo.set_TimeZone(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.WoeIdGet">
            <summary>Sets the shim of PlaceInfo.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.WoeIdSetString">
            <summary>Sets the shim of PlaceInfo.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.AccuracyGet">
            <summary>Sets the shim of PlaceInfo.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.AccuracySetNullableOfGeoAccuracy">
            <summary>Sets the shim of PlaceInfo.set_Accuracy(Nullable`1&lt;GeoAccuracy&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.ContextGet">
            <summary>Sets the shim of PlaceInfo.get_Context()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.ContextSetNullableOfGeoContext">
            <summary>Sets the shim of PlaceInfo.set_Context(Nullable`1&lt;GeoContext&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.CountryGet">
            <summary>Sets the shim of PlaceInfo.get_Country()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.CountrySetPlace">
            <summary>Sets the shim of PlaceInfo.set_Country(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.CountyGet">
            <summary>Sets the shim of PlaceInfo.get_County()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.CountySetPlace">
            <summary>Sets the shim of PlaceInfo.set_County(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of PlaceInfo.get_Description()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.DescriptionSetString">
            <summary>Sets the shim of PlaceInfo.set_Description(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.HasShapeDataGet">
            <summary>Sets the shim of PlaceInfo.get_HasShapeData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.HasShapeDataSetBoolean">
            <summary>Sets the shim of PlaceInfo.set_HasShapeData(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LatitudeGet">
            <summary>Sets the shim of PlaceInfo.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LatitudeSetDouble">
            <summary>Sets the shim of PlaceInfo.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LoadAttributesXmlReader">
            <summary>Sets the shim of PlaceInfo.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LoadElementsXmlReader">
            <summary>Sets the shim of PlaceInfo.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LocalityGet">
            <summary>Sets the shim of PlaceInfo.get_Locality()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LocalitySetPlace">
            <summary>Sets the shim of PlaceInfo.set_Locality(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LongitudeGet">
            <summary>Sets the shim of PlaceInfo.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.LongitudeSetDouble">
            <summary>Sets the shim of PlaceInfo.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.NeighbourhoodGet">
            <summary>Sets the shim of PlaceInfo.get_Neighbourhood()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.NeighbourhoodSetPlace">
            <summary>Sets the shim of PlaceInfo.set_Neighbourhood(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceFlickrUrlGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceFlickrUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceIdGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of PlaceInfo.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceTypeGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceTypeSetPlaceType">
            <summary>Sets the shim of PlaceInfo.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceUrlGet">
            <summary>Sets the shim of PlaceInfo.get_PlaceUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.PlaceUrlSetString">
            <summary>Sets the shim of PlaceInfo.set_PlaceUrl(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.RegionGet">
            <summary>Sets the shim of PlaceInfo.get_Region()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.RegionSetPlace">
            <summary>Sets the shim of PlaceInfo.set_Region(Place value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.ShapeDataGet">
            <summary>Sets the shim of PlaceInfo.get_ShapeData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.ShapeDataSetShapeData">
            <summary>Sets the shim of PlaceInfo.set_ShapeData(ShapeData value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.TimeZoneGet">
            <summary>Sets the shim of PlaceInfo.get_TimeZone()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.TimeZoneSetString">
            <summary>Sets the shim of PlaceInfo.set_TimeZone(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.WoeIdGet">
            <summary>Sets the shim of PlaceInfo.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceInfo.AllInstances.WoeIdSetString">
            <summary>Sets the shim of PlaceInfo.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceTypeInfo">
            <summary>Shim type of FlickrNet.PlaceTypeInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfo.#ctor(FlickrNet.PlaceTypeInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.Constructor">
            <summary>Sets the shim of PlaceTypeInfo.PlaceTypeInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceTypeInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.IdGet">
            <summary>Sets the shim of PlaceTypeInfo.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.IdSetInt32">
            <summary>Sets the shim of PlaceTypeInfo.set_Id(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.NameGet">
            <summary>Sets the shim of PlaceTypeInfo.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.NameSetString">
            <summary>Sets the shim of PlaceTypeInfo.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceTypeInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances.IdGet">
            <summary>Sets the shim of PlaceTypeInfo.get_Id()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances.IdSetInt32">
            <summary>Sets the shim of PlaceTypeInfo.set_Id(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances.NameGet">
            <summary>Sets the shim of PlaceTypeInfo.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfo.AllInstances.NameSetString">
            <summary>Sets the shim of PlaceTypeInfo.set_Name(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceTypeInfoCollection">
            <summary>Shim type of FlickrNet.PlaceTypeInfoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.#ctor(FlickrNet.PlaceTypeInfoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PlaceTypeInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PlaceTypeInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.Generic.IList{FlickrNet.PlaceTypeInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PlaceTypeInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PlaceTypeInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.Constructor">
            <summary>Sets the shim of PlaceTypeInfoCollection.PlaceTypeInfoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceTypeInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPlaceTypeInfoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PlaceTypeInfoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPointD">
            <summary>Shim type of FlickrNet.PointD</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPointD.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPointD.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPointD.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPointD.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPointD.EqualityOpPointDPointD">
            <summary>Sets the shim of PointD.op_Equality(PointD point1, PointD point2)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPointD.InequalityOpPointDPointD">
            <summary>Sets the shim of PointD.op_Inequality(PointD point1, PointD point2)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPointD.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPopularPhoto">
            <summary>Shim type of FlickrNet.PopularPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhoto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhoto.#ctor(FlickrNet.PopularPhoto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhoto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhoto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhoto.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.Constructor">
            <summary>Sets the shim of PopularPhoto.PopularPhoto()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PopularPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatCommentsGet">
            <summary>Sets the shim of PopularPhoto.get_StatComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatCommentsSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatFavoritesGet">
            <summary>Sets the shim of PopularPhoto.get_StatFavorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatFavoritesSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatFavorites(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatViewsGet">
            <summary>Sets the shim of PopularPhoto.get_StatViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.StatViewsSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatViews(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPopularPhoto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PopularPhoto.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatCommentsGet">
            <summary>Sets the shim of PopularPhoto.get_StatComments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatCommentsSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatComments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatFavoritesGet">
            <summary>Sets the shim of PopularPhoto.get_StatFavorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatFavoritesSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatFavorites(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatViewsGet">
            <summary>Sets the shim of PopularPhoto.get_StatViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhoto.AllInstances.StatViewsSetInt32">
            <summary>Sets the shim of PopularPhoto.set_StatViews(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPopularPhotoCollection">
            <summary>Shim type of FlickrNet.PopularPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.#ctor(FlickrNet.PopularPhotoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.PopularPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.PopularPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.Generic.IList{FlickrNet.PopularPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.PopularPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPopularPhotoCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.PopularPhoto})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.Constructor">
            <summary>Sets the shim of PopularPhotoCollection.PopularPhotoCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PopularPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PageGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PageSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PagesGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PagesSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PerPageGet">
            <summary>Sets the shim of PopularPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.PerPageSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.TotalGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.TotalSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PopularPhotoCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PageGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PopularPhotoCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PopularPhotoCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPopularPhotoCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PopularPhotoCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPredicate">
            <summary>Shim type of FlickrNet.Predicate</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicate.#ctor(FlickrNet.Predicate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicate.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.Constructor">
            <summary>Sets the shim of Predicate.Predicate()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Predicate.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.NamespacesGet">
            <summary>Sets the shim of Predicate.get_Namespaces()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.NamespacesSetInt32">
            <summary>Sets the shim of Predicate.set_Namespaces(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.PredicateNameGet">
            <summary>Sets the shim of Predicate.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.PredicateNameSetString">
            <summary>Sets the shim of Predicate.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.UsageGet">
            <summary>Sets the shim of Predicate.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.UsageSetInt32">
            <summary>Sets the shim of Predicate.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPredicate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Predicate.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.NamespacesGet">
            <summary>Sets the shim of Predicate.get_Namespaces()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.NamespacesSetInt32">
            <summary>Sets the shim of Predicate.set_Namespaces(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.PredicateNameGet">
            <summary>Sets the shim of Predicate.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.PredicateNameSetString">
            <summary>Sets the shim of Predicate.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.UsageGet">
            <summary>Sets the shim of Predicate.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicate.AllInstances.UsageSetInt32">
            <summary>Sets the shim of Predicate.set_Usage(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPredicateCollection">
            <summary>Shim type of FlickrNet.PredicateCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.#ctor(FlickrNet.PredicateCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Predicate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Predicate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.Generic.IList{FlickrNet.Predicate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Predicate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimPredicateCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Predicate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.Constructor">
            <summary>Sets the shim of PredicateCollection.PredicateCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PredicateCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PageGet">
            <summary>Sets the shim of PredicateCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PageSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PagesGet">
            <summary>Sets the shim of PredicateCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PagesSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PerPageGet">
            <summary>Sets the shim of PredicateCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.PerPageSetInt32">
            <summary>Sets the shim of PredicateCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.TotalGet">
            <summary>Sets the shim of PredicateCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.TotalSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimPredicateCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of PredicateCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PageGet">
            <summary>Sets the shim of PredicateCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PagesGet">
            <summary>Sets the shim of PredicateCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of PredicateCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of PredicateCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.TotalGet">
            <summary>Sets the shim of PredicateCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimPredicateCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of PredicateCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimRawTag">
            <summary>Shim type of FlickrNet.RawTag</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTag.#ctor(FlickrNet.RawTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTag.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.CleanTagGet">
            <summary>Sets the shim of RawTag.get_CleanTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.CleanTagSetString">
            <summary>Sets the shim of RawTag.set_CleanTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.Constructor">
            <summary>Sets the shim of RawTag.RawTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of RawTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.RawTagsGet">
            <summary>Sets the shim of RawTag.get_RawTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.RawTagsSetCollectionOfString">
            <summary>Sets the shim of RawTag.set_RawTags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimRawTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.AllInstances.CleanTagGet">
            <summary>Sets the shim of RawTag.get_CleanTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.AllInstances.CleanTagSetString">
            <summary>Sets the shim of RawTag.set_CleanTag(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of RawTag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.AllInstances.RawTagsGet">
            <summary>Sets the shim of RawTag.get_RawTags()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTag.AllInstances.RawTagsSetCollectionOfString">
            <summary>Sets the shim of RawTag.set_RawTags(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimRawTagCollection">
            <summary>Shim type of FlickrNet.RawTagCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.#ctor(FlickrNet.RawTagCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.RawTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.RawTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.Generic.IList{FlickrNet.RawTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.RawTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimRawTagCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.RawTag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTagCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTagCollection.Constructor">
            <summary>Sets the shim of RawTagCollection.RawTagCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTagCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of RawTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimRawTagCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimRawTagCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of RawTagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimResponseCacheItem">
            <summary>Shim type of FlickrNet.ResponseCacheItem</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseCacheItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseCacheItem.#ctor(FlickrNet.ResponseCacheItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseCacheItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseCacheItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseCacheItem.Bind(FlickrNet.ICacheItem)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.ConstructorUriStringDateTime">
            <summary>Sets the shim of ResponseCacheItem.ResponseCacheItem(Uri url, String response, DateTime creationTime)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.CreationTimeGet">
            <summary>Sets the shim of ResponseCacheItem.get_CreationTime()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.CreationTimeSetDateTime">
            <summary>Sets the shim of ResponseCacheItem.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.FileSizeGet">
            <summary>Sets the shim of ResponseCacheItem.get_FileSize()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.FlickrNetICacheItemOnItemFlushed">
            <summary>Sets the shim of ResponseCacheItem.FlickrNet.ICacheItem.OnItemFlushed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.ResponseGet">
            <summary>Sets the shim of ResponseCacheItem.get_Response()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.ResponseSetString">
            <summary>Sets the shim of ResponseCacheItem.set_Response(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.UrlGet">
            <summary>Sets the shim of ResponseCacheItem.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.UrlSetUri">
            <summary>Sets the shim of ResponseCacheItem.set_Url(Uri value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.CreationTimeGet">
            <summary>Sets the shim of ResponseCacheItem.get_CreationTime()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of ResponseCacheItem.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.FileSizeGet">
            <summary>Sets the shim of ResponseCacheItem.get_FileSize()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.FlickrNetICacheItemOnItemFlushed">
            <summary>Sets the shim of ResponseCacheItem.FlickrNet.ICacheItem.OnItemFlushed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.ResponseGet">
            <summary>Sets the shim of ResponseCacheItem.get_Response()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.ResponseSetString">
            <summary>Sets the shim of ResponseCacheItem.set_Response(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.UrlGet">
            <summary>Sets the shim of ResponseCacheItem.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseCacheItem.AllInstances.UrlSetUri">
            <summary>Sets the shim of ResponseCacheItem.set_Url(Uri value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimResponseXmlException">
            <summary>Shim type of FlickrNet.ResponseXmlException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseXmlException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseXmlException.#ctor(FlickrNet.ResponseXmlException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseXmlException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseXmlException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimResponseXmlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseXmlException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseXmlException.Constructor">
            <summary>Sets the shim of ResponseXmlException.ResponseXmlException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseXmlException.ConstructorString">
            <summary>Sets the shim of ResponseXmlException.ResponseXmlException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimResponseXmlException.ConstructorStringException">
            <summary>Sets the shim of ResponseXmlException.ResponseXmlException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimResponseXmlException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimShapeData">
            <summary>Shim type of FlickrNet.ShapeData</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeData.#ctor(FlickrNet.ShapeData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeData.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AlphaGet">
            <summary>Sets the shim of ShapeData.get_Alpha()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AlphaSetDouble">
            <summary>Sets the shim of ShapeData.set_Alpha(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.Constructor">
            <summary>Sets the shim of ShapeData.ShapeData()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.DateCreatedGet">
            <summary>Sets the shim of ShapeData.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.DateCreatedSetDateTime">
            <summary>Sets the shim of ShapeData.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.EdgeCountGet">
            <summary>Sets the shim of ShapeData.get_EdgeCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.EdgeCountSetInt32">
            <summary>Sets the shim of ShapeData.set_EdgeCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ShapeData.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.HasDonutHoleGet">
            <summary>Sets the shim of ShapeData.get_HasDonutHole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.HasDonutHoleSetBoolean">
            <summary>Sets the shim of ShapeData.set_HasDonutHole(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.IsDonutHoleGet">
            <summary>Sets the shim of ShapeData.get_IsDonutHole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.IsDonutHoleSetBoolean">
            <summary>Sets the shim of ShapeData.set_IsDonutHole(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.PointCountGet">
            <summary>Sets the shim of ShapeData.get_PointCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.PointCountSetInt32">
            <summary>Sets the shim of ShapeData.set_PointCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.PolyLinesGet">
            <summary>Sets the shim of ShapeData.get_PolyLines()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.PolyLinesSetCollectionOfCollectionOfPointD">
            <summary>Sets the shim of ShapeData.set_PolyLines(Collection`1&lt;Collection`1&lt;PointD&gt;&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.UrlsGet">
            <summary>Sets the shim of ShapeData.get_Urls()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.UrlsSetCollectionOfString">
            <summary>Sets the shim of ShapeData.set_Urls(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimShapeData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.AlphaGet">
            <summary>Sets the shim of ShapeData.get_Alpha()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.AlphaSetDouble">
            <summary>Sets the shim of ShapeData.set_Alpha(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.DateCreatedGet">
            <summary>Sets the shim of ShapeData.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of ShapeData.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.EdgeCountGet">
            <summary>Sets the shim of ShapeData.get_EdgeCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.EdgeCountSetInt32">
            <summary>Sets the shim of ShapeData.set_EdgeCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ShapeData.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.HasDonutHoleGet">
            <summary>Sets the shim of ShapeData.get_HasDonutHole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.HasDonutHoleSetBoolean">
            <summary>Sets the shim of ShapeData.set_HasDonutHole(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.IsDonutHoleGet">
            <summary>Sets the shim of ShapeData.get_IsDonutHole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.IsDonutHoleSetBoolean">
            <summary>Sets the shim of ShapeData.set_IsDonutHole(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.PointCountGet">
            <summary>Sets the shim of ShapeData.get_PointCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.PointCountSetInt32">
            <summary>Sets the shim of ShapeData.set_PointCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.PolyLinesGet">
            <summary>Sets the shim of ShapeData.get_PolyLines()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.PolyLinesSetCollectionOfCollectionOfPointD">
            <summary>Sets the shim of ShapeData.set_PolyLines(Collection`1&lt;Collection`1&lt;PointD&gt;&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.UrlsGet">
            <summary>Sets the shim of ShapeData.get_Urls()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeData.AllInstances.UrlsSetCollectionOfString">
            <summary>Sets the shim of ShapeData.set_Urls(Collection`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimShapeDataCollection">
            <summary>Shim type of FlickrNet.ShapeDataCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.#ctor(FlickrNet.ShapeDataCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.ShapeData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.ShapeData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.Generic.IList{FlickrNet.ShapeData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.ShapeData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimShapeDataCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.ShapeData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.Constructor">
            <summary>Sets the shim of ShapeDataCollection.ShapeDataCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ShapeDataCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PageGet">
            <summary>Sets the shim of ShapeDataCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PageSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PagesGet">
            <summary>Sets the shim of ShapeDataCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PagesSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PerPageGet">
            <summary>Sets the shim of ShapeDataCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PerPageSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PlaceIdGet">
            <summary>Sets the shim of ShapeDataCollection.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PlaceIdSetString">
            <summary>Sets the shim of ShapeDataCollection.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PlaceTypeGet">
            <summary>Sets the shim of ShapeDataCollection.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.PlaceTypeSetPlaceType">
            <summary>Sets the shim of ShapeDataCollection.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.TotalGet">
            <summary>Sets the shim of ShapeDataCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.TotalSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.WoeIdGet">
            <summary>Sets the shim of ShapeDataCollection.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.WoeIdSetString">
            <summary>Sets the shim of ShapeDataCollection.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ShapeDataCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PageGet">
            <summary>Sets the shim of ShapeDataCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PagesGet">
            <summary>Sets the shim of ShapeDataCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of ShapeDataCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PlaceIdGet">
            <summary>Sets the shim of ShapeDataCollection.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of ShapeDataCollection.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PlaceTypeGet">
            <summary>Sets the shim of ShapeDataCollection.get_PlaceType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.PlaceTypeSetPlaceType">
            <summary>Sets the shim of ShapeDataCollection.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.TotalGet">
            <summary>Sets the shim of ShapeDataCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of ShapeDataCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.WoeIdGet">
            <summary>Sets the shim of ShapeDataCollection.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimShapeDataCollection.AllInstances.WoeIdSetString">
            <summary>Sets the shim of ShapeDataCollection.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSignatureRequiredException">
            <summary>Shim type of FlickrNet.SignatureRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSignatureRequiredException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSignatureRequiredException.#ctor(FlickrNet.SignatureRequiredException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSignatureRequiredException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSignatureRequiredException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSignatureRequiredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSignatureRequiredException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSignatureRequiredException.Constructor">
            <summary>Sets the shim of SignatureRequiredException.SignatureRequiredException()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSignatureRequiredException.ConstructorString">
            <summary>Sets the shim of SignatureRequiredException.SignatureRequiredException(String message)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSignatureRequiredException.ConstructorStringException">
            <summary>Sets the shim of SignatureRequiredException.SignatureRequiredException(String message, Exception innerException)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSignatureRequiredException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSize">
            <summary>Shim type of FlickrNet.Size</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSize.#ctor(FlickrNet.Size)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSize.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.Constructor">
            <summary>Sets the shim of Size.Size()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Size.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.HeightGet">
            <summary>Sets the shim of Size.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.HeightSetInt32">
            <summary>Sets the shim of Size.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.LabelGet">
            <summary>Sets the shim of Size.get_Label()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.LabelSetString">
            <summary>Sets the shim of Size.set_Label(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.MediaTypeGet">
            <summary>Sets the shim of Size.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.MediaTypeSetMediaType">
            <summary>Sets the shim of Size.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.SourceGet">
            <summary>Sets the shim of Size.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.SourceSetString">
            <summary>Sets the shim of Size.set_Source(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.UrlGet">
            <summary>Sets the shim of Size.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.UrlSetString">
            <summary>Sets the shim of Size.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.WidthGet">
            <summary>Sets the shim of Size.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.WidthSetInt32">
            <summary>Sets the shim of Size.set_Width(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Size.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.HeightGet">
            <summary>Sets the shim of Size.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.HeightSetInt32">
            <summary>Sets the shim of Size.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.LabelGet">
            <summary>Sets the shim of Size.get_Label()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.LabelSetString">
            <summary>Sets the shim of Size.set_Label(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.MediaTypeGet">
            <summary>Sets the shim of Size.get_MediaType()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.MediaTypeSetMediaType">
            <summary>Sets the shim of Size.set_MediaType(MediaType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.SourceGet">
            <summary>Sets the shim of Size.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.SourceSetString">
            <summary>Sets the shim of Size.set_Source(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.UrlGet">
            <summary>Sets the shim of Size.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.UrlSetString">
            <summary>Sets the shim of Size.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.WidthGet">
            <summary>Sets the shim of Size.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSize.AllInstances.WidthSetInt32">
            <summary>Sets the shim of Size.set_Width(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSizeCollection">
            <summary>Shim type of FlickrNet.SizeCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.#ctor(FlickrNet.SizeCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Size})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Size})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.Generic.IList{FlickrNet.Size})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Size})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSizeCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Size})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSizeCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSizeCollection.Constructor">
            <summary>Sets the shim of SizeCollection.SizeCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSizeCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SizeCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSizeCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSizeCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SizeCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatDomain">
            <summary>Shim type of FlickrNet.StatDomain</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomain.#ctor(FlickrNet.StatDomain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomain.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.Constructor">
            <summary>Sets the shim of StatDomain.StatDomain()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatDomain.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.NameGet">
            <summary>Sets the shim of StatDomain.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.NameSetString">
            <summary>Sets the shim of StatDomain.set_Name(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.ViewsGet">
            <summary>Sets the shim of StatDomain.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.ViewsSetInt32">
            <summary>Sets the shim of StatDomain.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatDomain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatDomain.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.AllInstances.NameGet">
            <summary>Sets the shim of StatDomain.get_Name()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.AllInstances.NameSetString">
            <summary>Sets the shim of StatDomain.set_Name(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.AllInstances.ViewsGet">
            <summary>Sets the shim of StatDomain.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomain.AllInstances.ViewsSetInt32">
            <summary>Sets the shim of StatDomain.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatDomainCollection">
            <summary>Shim type of FlickrNet.StatDomainCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.#ctor(FlickrNet.StatDomainCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.StatDomain})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.StatDomain})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.Generic.IList{FlickrNet.StatDomain})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.StatDomain})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatDomainCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.StatDomain})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.Constructor">
            <summary>Sets the shim of StatDomainCollection.StatDomainCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatDomainCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PageGet">
            <summary>Sets the shim of StatDomainCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PageSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PagesGet">
            <summary>Sets the shim of StatDomainCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PagesSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PerPageGet">
            <summary>Sets the shim of StatDomainCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.PerPageSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.TotalGet">
            <summary>Sets the shim of StatDomainCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.TotalSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatDomainCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PageGet">
            <summary>Sets the shim of StatDomainCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PagesGet">
            <summary>Sets the shim of StatDomainCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of StatDomainCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.TotalGet">
            <summary>Sets the shim of StatDomainCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatDomainCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of StatDomainCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatReferrer">
            <summary>Shim type of FlickrNet.StatReferrer</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrer.#ctor(FlickrNet.StatReferrer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrer.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.Constructor">
            <summary>Sets the shim of StatReferrer.StatReferrer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatReferrer.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.SearchTermGet">
            <summary>Sets the shim of StatReferrer.get_SearchTerm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.SearchTermSetString">
            <summary>Sets the shim of StatReferrer.set_SearchTerm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.UrlGet">
            <summary>Sets the shim of StatReferrer.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.UrlSetString">
            <summary>Sets the shim of StatReferrer.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.ViewsGet">
            <summary>Sets the shim of StatReferrer.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.ViewsSetInt32">
            <summary>Sets the shim of StatReferrer.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatReferrer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatReferrer.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.SearchTermGet">
            <summary>Sets the shim of StatReferrer.get_SearchTerm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.SearchTermSetString">
            <summary>Sets the shim of StatReferrer.set_SearchTerm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.UrlGet">
            <summary>Sets the shim of StatReferrer.get_Url()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.UrlSetString">
            <summary>Sets the shim of StatReferrer.set_Url(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.ViewsGet">
            <summary>Sets the shim of StatReferrer.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrer.AllInstances.ViewsSetInt32">
            <summary>Sets the shim of StatReferrer.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatReferrerCollection">
            <summary>Shim type of FlickrNet.StatReferrerCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.#ctor(FlickrNet.StatReferrerCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.StatReferrer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.StatReferrer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.Generic.IList{FlickrNet.StatReferrer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.StatReferrer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatReferrerCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.StatReferrer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.Constructor">
            <summary>Sets the shim of StatReferrerCollection.StatReferrerCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.DomainNameGet">
            <summary>Sets the shim of StatReferrerCollection.get_DomainName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.DomainNameSetString">
            <summary>Sets the shim of StatReferrerCollection.set_DomainName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatReferrerCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PageGet">
            <summary>Sets the shim of StatReferrerCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PageSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PagesGet">
            <summary>Sets the shim of StatReferrerCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PagesSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PerPageGet">
            <summary>Sets the shim of StatReferrerCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.PerPageSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.TotalGet">
            <summary>Sets the shim of StatReferrerCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.TotalSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.DomainNameGet">
            <summary>Sets the shim of StatReferrerCollection.get_DomainName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.DomainNameSetString">
            <summary>Sets the shim of StatReferrerCollection.set_DomainName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatReferrerCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PageGet">
            <summary>Sets the shim of StatReferrerCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PagesGet">
            <summary>Sets the shim of StatReferrerCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of StatReferrerCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.TotalGet">
            <summary>Sets the shim of StatReferrerCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatReferrerCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of StatReferrerCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatViews">
            <summary>Shim type of FlickrNet.StatViews</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatViews.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatViews.#ctor(FlickrNet.StatViews)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatViews.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatViews.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStatViews.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.CollectionViewsGet">
            <summary>Sets the shim of StatViews.get_CollectionViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.CollectionViewsSetInt32">
            <summary>Sets the shim of StatViews.set_CollectionViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.Constructor">
            <summary>Sets the shim of StatViews.StatViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatViews.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.GalleryViewsGet">
            <summary>Sets the shim of StatViews.get_GalleryViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.GalleryViewsSetInt32">
            <summary>Sets the shim of StatViews.set_GalleryViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotoViewsGet">
            <summary>Sets the shim of StatViews.get_PhotoViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotoViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotoViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotosetViewsGet">
            <summary>Sets the shim of StatViews.get_PhotosetViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotosetViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotosetViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotostreamViewsGet">
            <summary>Sets the shim of StatViews.get_PhotostreamViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.PhotostreamViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotostreamViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.TotalViewsGet">
            <summary>Sets the shim of StatViews.get_TotalViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.TotalViewsSetInt32">
            <summary>Sets the shim of StatViews.set_TotalViews(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStatViews.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.CollectionViewsGet">
            <summary>Sets the shim of StatViews.get_CollectionViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.CollectionViewsSetInt32">
            <summary>Sets the shim of StatViews.set_CollectionViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of StatViews.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.GalleryViewsGet">
            <summary>Sets the shim of StatViews.get_GalleryViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.GalleryViewsSetInt32">
            <summary>Sets the shim of StatViews.set_GalleryViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotoViewsGet">
            <summary>Sets the shim of StatViews.get_PhotoViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotoViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotoViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotosetViewsGet">
            <summary>Sets the shim of StatViews.get_PhotosetViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotosetViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotosetViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotostreamViewsGet">
            <summary>Sets the shim of StatViews.get_PhotostreamViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.PhotostreamViewsSetInt32">
            <summary>Sets the shim of StatViews.set_PhotostreamViews(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.TotalViewsGet">
            <summary>Sets the shim of StatViews.get_TotalViews()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStatViews.AllInstances.TotalViewsSetInt32">
            <summary>Sets the shim of StatViews.set_TotalViews(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStats">
            <summary>Shim type of FlickrNet.Stats</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStats.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStats.#ctor(FlickrNet.Stats)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStats.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStats.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimStats.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.CommentsGet">
            <summary>Sets the shim of Stats.get_Comments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.CommentsSetInt32">
            <summary>Sets the shim of Stats.set_Comments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.Constructor">
            <summary>Sets the shim of Stats.Stats()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.FavoritesGet">
            <summary>Sets the shim of Stats.get_Favorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.FavoritesSetInt32">
            <summary>Sets the shim of Stats.set_Favorites(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Stats.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.ViewsGet">
            <summary>Sets the shim of Stats.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.ViewsSetInt32">
            <summary>Sets the shim of Stats.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimStats.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.CommentsGet">
            <summary>Sets the shim of Stats.get_Comments()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.CommentsSetInt32">
            <summary>Sets the shim of Stats.set_Comments(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.FavoritesGet">
            <summary>Sets the shim of Stats.get_Favorites()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.FavoritesSetInt32">
            <summary>Sets the shim of Stats.set_Favorites(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Stats.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.ViewsGet">
            <summary>Sets the shim of Stats.get_Views()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimStats.AllInstances.ViewsSetInt32">
            <summary>Sets the shim of Stats.set_Views(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubcategory">
            <summary>Shim type of FlickrNet.Subcategory</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubcategory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubcategory.#ctor(FlickrNet.Subcategory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubcategory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubcategory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubcategory.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.Constructor">
            <summary>Sets the shim of Subcategory.Subcategory()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Subcategory.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.GroupCountGet">
            <summary>Sets the shim of Subcategory.get_GroupCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.GroupCountSetInt32">
            <summary>Sets the shim of Subcategory.set_GroupCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.SubcategoryIdGet">
            <summary>Sets the shim of Subcategory.get_SubcategoryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.SubcategoryIdSetString">
            <summary>Sets the shim of Subcategory.set_SubcategoryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.SubcategoryNameGet">
            <summary>Sets the shim of Subcategory.get_SubcategoryName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.SubcategoryNameSetString">
            <summary>Sets the shim of Subcategory.set_SubcategoryName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubcategory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Subcategory.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.GroupCountGet">
            <summary>Sets the shim of Subcategory.get_GroupCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.GroupCountSetInt32">
            <summary>Sets the shim of Subcategory.set_GroupCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.SubcategoryIdGet">
            <summary>Sets the shim of Subcategory.get_SubcategoryId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.SubcategoryIdSetString">
            <summary>Sets the shim of Subcategory.set_SubcategoryId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.SubcategoryNameGet">
            <summary>Sets the shim of Subcategory.get_SubcategoryName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubcategory.AllInstances.SubcategoryNameSetString">
            <summary>Sets the shim of Subcategory.set_SubcategoryName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubscription">
            <summary>Shim type of FlickrNet.Subscription</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscription.#ctor(FlickrNet.Subscription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscription.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.CallbackGet">
            <summary>Sets the shim of Subscription.get_Callback()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.CallbackSetString">
            <summary>Sets the shim of Subscription.set_Callback(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.Constructor">
            <summary>Sets the shim of Subscription.Subscription()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.DateCreatedGet">
            <summary>Sets the shim of Subscription.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.DateCreatedSetDateTime">
            <summary>Sets the shim of Subscription.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.ExpiryGet">
            <summary>Sets the shim of Subscription.get_Expiry()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.ExpirySetDateTime">
            <summary>Sets the shim of Subscription.set_Expiry(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Subscription.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.IsPendingGet">
            <summary>Sets the shim of Subscription.get_IsPending()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.IsPendingSetBoolean">
            <summary>Sets the shim of Subscription.set_IsPending(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.LeaseSecondsGet">
            <summary>Sets the shim of Subscription.get_LeaseSeconds()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.LeaseSecondsSetInt32">
            <summary>Sets the shim of Subscription.set_LeaseSeconds(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.TopicGet">
            <summary>Sets the shim of Subscription.get_Topic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.TopicSetString">
            <summary>Sets the shim of Subscription.set_Topic(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.VerifyAttemptsGet">
            <summary>Sets the shim of Subscription.get_VerifyAttempts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.VerifyAttemptsSetInt32">
            <summary>Sets the shim of Subscription.set_VerifyAttempts(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubscription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.CallbackGet">
            <summary>Sets the shim of Subscription.get_Callback()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.CallbackSetString">
            <summary>Sets the shim of Subscription.set_Callback(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.DateCreatedGet">
            <summary>Sets the shim of Subscription.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of Subscription.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.ExpiryGet">
            <summary>Sets the shim of Subscription.get_Expiry()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.ExpirySetDateTime">
            <summary>Sets the shim of Subscription.set_Expiry(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Subscription.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.IsPendingGet">
            <summary>Sets the shim of Subscription.get_IsPending()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.IsPendingSetBoolean">
            <summary>Sets the shim of Subscription.set_IsPending(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.LeaseSecondsGet">
            <summary>Sets the shim of Subscription.get_LeaseSeconds()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.LeaseSecondsSetInt32">
            <summary>Sets the shim of Subscription.set_LeaseSeconds(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.TopicGet">
            <summary>Sets the shim of Subscription.get_Topic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.TopicSetString">
            <summary>Sets the shim of Subscription.set_Topic(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.VerifyAttemptsGet">
            <summary>Sets the shim of Subscription.get_VerifyAttempts()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscription.AllInstances.VerifyAttemptsSetInt32">
            <summary>Sets the shim of Subscription.set_VerifyAttempts(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubscriptionCollection">
            <summary>Shim type of FlickrNet.SubscriptionCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.#ctor(FlickrNet.SubscriptionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Subscription})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Subscription})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.Generic.IList{FlickrNet.Subscription})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Subscription})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSubscriptionCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Subscription})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscriptionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscriptionCollection.Constructor">
            <summary>Sets the shim of SubscriptionCollection.SubscriptionCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscriptionCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SubscriptionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSubscriptionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSubscriptionCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SubscriptionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSuggestion">
            <summary>Shim type of FlickrNet.Suggestion</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestion.#ctor(FlickrNet.Suggestion)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestion.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AccuracyGet">
            <summary>Sets the shim of Suggestion.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AccuracySetGeoAccuracy">
            <summary>Sets the shim of Suggestion.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.Constructor">
            <summary>Sets the shim of Suggestion.Suggestion()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.DateSuggestedGet">
            <summary>Sets the shim of Suggestion.get_DateSuggested()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.DateSuggestedSetDateTime">
            <summary>Sets the shim of Suggestion.set_DateSuggested(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Suggestion.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.LatitudeGet">
            <summary>Sets the shim of Suggestion.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.LatitudeSetDouble">
            <summary>Sets the shim of Suggestion.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.LongitudeGet">
            <summary>Sets the shim of Suggestion.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.LongitudeSetDouble">
            <summary>Sets the shim of Suggestion.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.NoteGet">
            <summary>Sets the shim of Suggestion.get_Note()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.NoteSetString">
            <summary>Sets the shim of Suggestion.set_Note(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.PhotoIdGet">
            <summary>Sets the shim of Suggestion.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.PhotoIdSetString">
            <summary>Sets the shim of Suggestion.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.PlaceIdGet">
            <summary>Sets the shim of Suggestion.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.PlaceIdSetString">
            <summary>Sets the shim of Suggestion.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestedByUserIdGet">
            <summary>Sets the shim of Suggestion.get_SuggestedByUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestedByUserIdSetString">
            <summary>Sets the shim of Suggestion.set_SuggestedByUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestedByUserNameGet">
            <summary>Sets the shim of Suggestion.get_SuggestedByUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestedByUserNameSetString">
            <summary>Sets the shim of Suggestion.set_SuggestedByUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestionIdGet">
            <summary>Sets the shim of Suggestion.get_SuggestionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.SuggestionIdSetString">
            <summary>Sets the shim of Suggestion.set_SuggestionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.WoeIdGet">
            <summary>Sets the shim of Suggestion.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.WoeIdSetString">
            <summary>Sets the shim of Suggestion.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSuggestion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.AccuracyGet">
            <summary>Sets the shim of Suggestion.get_Accuracy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.AccuracySetGeoAccuracy">
            <summary>Sets the shim of Suggestion.set_Accuracy(GeoAccuracy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.DateSuggestedGet">
            <summary>Sets the shim of Suggestion.get_DateSuggested()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.DateSuggestedSetDateTime">
            <summary>Sets the shim of Suggestion.set_DateSuggested(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Suggestion.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.LatitudeGet">
            <summary>Sets the shim of Suggestion.get_Latitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.LatitudeSetDouble">
            <summary>Sets the shim of Suggestion.set_Latitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.LongitudeGet">
            <summary>Sets the shim of Suggestion.get_Longitude()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.LongitudeSetDouble">
            <summary>Sets the shim of Suggestion.set_Longitude(Double value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.NoteGet">
            <summary>Sets the shim of Suggestion.get_Note()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.NoteSetString">
            <summary>Sets the shim of Suggestion.set_Note(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.PhotoIdGet">
            <summary>Sets the shim of Suggestion.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of Suggestion.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.PlaceIdGet">
            <summary>Sets the shim of Suggestion.get_PlaceId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.PlaceIdSetString">
            <summary>Sets the shim of Suggestion.set_PlaceId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestedByUserIdGet">
            <summary>Sets the shim of Suggestion.get_SuggestedByUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestedByUserIdSetString">
            <summary>Sets the shim of Suggestion.set_SuggestedByUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestedByUserNameGet">
            <summary>Sets the shim of Suggestion.get_SuggestedByUserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestedByUserNameSetString">
            <summary>Sets the shim of Suggestion.set_SuggestedByUserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestionIdGet">
            <summary>Sets the shim of Suggestion.get_SuggestionId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.SuggestionIdSetString">
            <summary>Sets the shim of Suggestion.set_SuggestionId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.WoeIdGet">
            <summary>Sets the shim of Suggestion.get_WoeId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestion.AllInstances.WoeIdSetString">
            <summary>Sets the shim of Suggestion.set_WoeId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSuggestionCollection">
            <summary>Shim type of FlickrNet.SuggestionCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.#ctor(FlickrNet.SuggestionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Suggestion})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Suggestion})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.Generic.IList{FlickrNet.Suggestion})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Suggestion})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimSuggestionCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Suggestion})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.Constructor">
            <summary>Sets the shim of SuggestionCollection.SuggestionCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SuggestionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PageGet">
            <summary>Sets the shim of SuggestionCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PageSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PagesGet">
            <summary>Sets the shim of SuggestionCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PagesSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PerPageGet">
            <summary>Sets the shim of SuggestionCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.PerPageSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.TotalGet">
            <summary>Sets the shim of SuggestionCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.TotalSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of SuggestionCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PageGet">
            <summary>Sets the shim of SuggestionCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PagesGet">
            <summary>Sets the shim of SuggestionCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of SuggestionCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.TotalGet">
            <summary>Sets the shim of SuggestionCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimSuggestionCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of SuggestionCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTag">
            <summary>Shim type of FlickrNet.Tag</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTag.#ctor(FlickrNet.Tag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTag.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.Constructor">
            <summary>Sets the shim of Tag.Tag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.CountGet">
            <summary>Sets the shim of Tag.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.CountSetInt32">
            <summary>Sets the shim of Tag.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Tag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.TagNameGet">
            <summary>Sets the shim of Tag.get_TagName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.TagNameSetString">
            <summary>Sets the shim of Tag.set_TagName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.AllInstances.CountGet">
            <summary>Sets the shim of Tag.get_Count()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.AllInstances.CountSetInt32">
            <summary>Sets the shim of Tag.set_Count(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Tag.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.AllInstances.TagNameGet">
            <summary>Sets the shim of Tag.get_TagName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTag.AllInstances.TagNameSetString">
            <summary>Sets the shim of Tag.set_TagName(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTagCollection">
            <summary>Shim type of FlickrNet.TagCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.#ctor(FlickrNet.TagCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.Generic.IList{FlickrNet.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTagCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTagCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTagCollection.Constructor">
            <summary>Sets the shim of TagCollection.TagCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTagCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTagCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTagCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TagCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTicket">
            <summary>Shim type of FlickrNet.Ticket</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicket.#ctor(FlickrNet.Ticket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicket.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.CompleteStatusGet">
            <summary>Sets the shim of Ticket.get_CompleteStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.CompleteStatusSetInt32">
            <summary>Sets the shim of Ticket.set_CompleteStatus(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.Constructor">
            <summary>Sets the shim of Ticket.Ticket()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Ticket.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.InvalidTicketIdGet">
            <summary>Sets the shim of Ticket.get_InvalidTicketId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.InvalidTicketIdSetBoolean">
            <summary>Sets the shim of Ticket.set_InvalidTicketId(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.PhotoIdGet">
            <summary>Sets the shim of Ticket.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.PhotoIdSetString">
            <summary>Sets the shim of Ticket.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.TicketIdGet">
            <summary>Sets the shim of Ticket.get_TicketId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.TicketIdSetString">
            <summary>Sets the shim of Ticket.set_TicketId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTicket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.CompleteStatusGet">
            <summary>Sets the shim of Ticket.get_CompleteStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.CompleteStatusSetInt32">
            <summary>Sets the shim of Ticket.set_CompleteStatus(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Ticket.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.InvalidTicketIdGet">
            <summary>Sets the shim of Ticket.get_InvalidTicketId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.InvalidTicketIdSetBoolean">
            <summary>Sets the shim of Ticket.set_InvalidTicketId(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.PhotoIdGet">
            <summary>Sets the shim of Ticket.get_PhotoId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.PhotoIdSetString">
            <summary>Sets the shim of Ticket.set_PhotoId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.TicketIdGet">
            <summary>Sets the shim of Ticket.get_TicketId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicket.AllInstances.TicketIdSetString">
            <summary>Sets the shim of Ticket.set_TicketId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTicketCollection">
            <summary>Shim type of FlickrNet.TicketCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.#ctor(FlickrNet.TicketCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Ticket})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Ticket})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.Generic.IList{FlickrNet.Ticket})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Ticket})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTicketCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Ticket})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicketCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicketCollection.Constructor">
            <summary>Sets the shim of TicketCollection.TicketCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicketCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TicketCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTicketCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTicketCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TicketCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopic">
            <summary>Shim type of FlickrNet.Topic</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopic.#ctor(FlickrNet.Topic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopic.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorBuddyIconGet">
            <summary>Sets the shim of Topic.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIconFarmGet">
            <summary>Sets the shim of Topic.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIconFarmSetString">
            <summary>Sets the shim of Topic.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIconServerGet">
            <summary>Sets the shim of Topic.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIconServerSetString">
            <summary>Sets the shim of Topic.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIsProGet">
            <summary>Sets the shim of Topic.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorIsProSetBoolean">
            <summary>Sets the shim of Topic.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorNameGet">
            <summary>Sets the shim of Topic.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorNameSetString">
            <summary>Sets the shim of Topic.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorRoleGet">
            <summary>Sets the shim of Topic.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of Topic.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorUserIdGet">
            <summary>Sets the shim of Topic.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AuthorUserIdSetString">
            <summary>Sets the shim of Topic.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanDeleteGet">
            <summary>Sets the shim of Topic.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanDeleteSetBoolean">
            <summary>Sets the shim of Topic.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanEditGet">
            <summary>Sets the shim of Topic.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanEditSetBoolean">
            <summary>Sets the shim of Topic.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanReplyGet">
            <summary>Sets the shim of Topic.get_CanReply()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.CanReplySetBoolean">
            <summary>Sets the shim of Topic.set_CanReply(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.Constructor">
            <summary>Sets the shim of Topic.Topic()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.DateCreatedGet">
            <summary>Sets the shim of Topic.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.DateCreatedSetDateTime">
            <summary>Sets the shim of Topic.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.DateLastPostGet">
            <summary>Sets the shim of Topic.get_DateLastPost()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.DateLastPostSetDateTime">
            <summary>Sets the shim of Topic.set_DateLastPost(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Topic.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.GroupIdGet">
            <summary>Sets the shim of Topic.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.GroupIdSetString">
            <summary>Sets the shim of Topic.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.IsLockedGet">
            <summary>Sets the shim of Topic.get_IsLocked()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.IsLockedSetBoolean">
            <summary>Sets the shim of Topic.set_IsLocked(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.IsStickyGet">
            <summary>Sets the shim of Topic.get_IsSticky()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.IsStickySetBoolean">
            <summary>Sets the shim of Topic.set_IsSticky(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.LastReplyIdGet">
            <summary>Sets the shim of Topic.get_LastReplyId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.LastReplyIdSetString">
            <summary>Sets the shim of Topic.set_LastReplyId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.MessageGet">
            <summary>Sets the shim of Topic.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.MessageSetString">
            <summary>Sets the shim of Topic.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.RepliesCountGet">
            <summary>Sets the shim of Topic.get_RepliesCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.RepliesCountSetInt32">
            <summary>Sets the shim of Topic.set_RepliesCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.SubjectGet">
            <summary>Sets the shim of Topic.get_Subject()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.SubjectSetString">
            <summary>Sets the shim of Topic.set_Subject(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.TopicIdGet">
            <summary>Sets the shim of Topic.get_TopicId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.TopicIdSetString">
            <summary>Sets the shim of Topic.set_TopicId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorBuddyIconGet">
            <summary>Sets the shim of Topic.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIconFarmGet">
            <summary>Sets the shim of Topic.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIconFarmSetString">
            <summary>Sets the shim of Topic.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIconServerGet">
            <summary>Sets the shim of Topic.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIconServerSetString">
            <summary>Sets the shim of Topic.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIsProGet">
            <summary>Sets the shim of Topic.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorIsProSetBoolean">
            <summary>Sets the shim of Topic.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorNameGet">
            <summary>Sets the shim of Topic.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorNameSetString">
            <summary>Sets the shim of Topic.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorRoleGet">
            <summary>Sets the shim of Topic.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of Topic.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorUserIdGet">
            <summary>Sets the shim of Topic.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.AuthorUserIdSetString">
            <summary>Sets the shim of Topic.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanDeleteGet">
            <summary>Sets the shim of Topic.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanDeleteSetBoolean">
            <summary>Sets the shim of Topic.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanEditGet">
            <summary>Sets the shim of Topic.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanEditSetBoolean">
            <summary>Sets the shim of Topic.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanReplyGet">
            <summary>Sets the shim of Topic.get_CanReply()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.CanReplySetBoolean">
            <summary>Sets the shim of Topic.set_CanReply(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.DateCreatedGet">
            <summary>Sets the shim of Topic.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of Topic.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.DateLastPostGet">
            <summary>Sets the shim of Topic.get_DateLastPost()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.DateLastPostSetDateTime">
            <summary>Sets the shim of Topic.set_DateLastPost(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Topic.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.GroupIdGet">
            <summary>Sets the shim of Topic.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.GroupIdSetString">
            <summary>Sets the shim of Topic.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.IsLockedGet">
            <summary>Sets the shim of Topic.get_IsLocked()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.IsLockedSetBoolean">
            <summary>Sets the shim of Topic.set_IsLocked(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.IsStickyGet">
            <summary>Sets the shim of Topic.get_IsSticky()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.IsStickySetBoolean">
            <summary>Sets the shim of Topic.set_IsSticky(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.LastReplyIdGet">
            <summary>Sets the shim of Topic.get_LastReplyId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.LastReplyIdSetString">
            <summary>Sets the shim of Topic.set_LastReplyId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.MessageGet">
            <summary>Sets the shim of Topic.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.MessageSetString">
            <summary>Sets the shim of Topic.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.RepliesCountGet">
            <summary>Sets the shim of Topic.get_RepliesCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.RepliesCountSetInt32">
            <summary>Sets the shim of Topic.set_RepliesCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.SubjectGet">
            <summary>Sets the shim of Topic.get_Subject()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.SubjectSetString">
            <summary>Sets the shim of Topic.set_Subject(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.TopicIdGet">
            <summary>Sets the shim of Topic.get_TopicId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopic.AllInstances.TopicIdSetString">
            <summary>Sets the shim of Topic.set_TopicId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicCollection">
            <summary>Shim type of FlickrNet.TopicCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.#ctor(FlickrNet.TopicCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Topic})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Topic})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.Generic.IList{FlickrNet.Topic})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Topic})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Topic})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.Constructor">
            <summary>Sets the shim of TopicCollection.TopicCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIconFarmGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIconFarmSetString">
            <summary>Sets the shim of TopicCollection.set_GroupIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIconServerGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIconServerSetString">
            <summary>Sets the shim of TopicCollection.set_GroupIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIconUrlGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIdGet">
            <summary>Sets the shim of TopicCollection.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupIdSetString">
            <summary>Sets the shim of TopicCollection.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupNameGet">
            <summary>Sets the shim of TopicCollection.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.GroupNameSetString">
            <summary>Sets the shim of TopicCollection.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.IsPoolModeratedGet">
            <summary>Sets the shim of TopicCollection.get_IsPoolModerated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.IsPoolModeratedSetBoolean">
            <summary>Sets the shim of TopicCollection.set_IsPoolModerated(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.LanguageGet">
            <summary>Sets the shim of TopicCollection.get_Language()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.LanguageSetString">
            <summary>Sets the shim of TopicCollection.set_Language(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.MemberCountGet">
            <summary>Sets the shim of TopicCollection.get_MemberCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.MemberCountSetInt32">
            <summary>Sets the shim of TopicCollection.set_MemberCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PageGet">
            <summary>Sets the shim of TopicCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PageSetInt32">
            <summary>Sets the shim of TopicCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PagesGet">
            <summary>Sets the shim of TopicCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PagesSetInt32">
            <summary>Sets the shim of TopicCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PerPageGet">
            <summary>Sets the shim of TopicCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PerPageSetInt32">
            <summary>Sets the shim of TopicCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PrivacyGet">
            <summary>Sets the shim of TopicCollection.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.PrivacySetPoolPrivacy">
            <summary>Sets the shim of TopicCollection.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.TotalGet">
            <summary>Sets the shim of TopicCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.TotalSetInt32">
            <summary>Sets the shim of TopicCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIconFarmGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIconFarmSetString">
            <summary>Sets the shim of TopicCollection.set_GroupIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIconServerGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIconServerSetString">
            <summary>Sets the shim of TopicCollection.set_GroupIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of TopicCollection.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIdGet">
            <summary>Sets the shim of TopicCollection.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupIdSetString">
            <summary>Sets the shim of TopicCollection.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupNameGet">
            <summary>Sets the shim of TopicCollection.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.GroupNameSetString">
            <summary>Sets the shim of TopicCollection.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.IsPoolModeratedGet">
            <summary>Sets the shim of TopicCollection.get_IsPoolModerated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.IsPoolModeratedSetBoolean">
            <summary>Sets the shim of TopicCollection.set_IsPoolModerated(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.LanguageGet">
            <summary>Sets the shim of TopicCollection.get_Language()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.LanguageSetString">
            <summary>Sets the shim of TopicCollection.set_Language(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.MemberCountGet">
            <summary>Sets the shim of TopicCollection.get_MemberCount()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.MemberCountSetInt32">
            <summary>Sets the shim of TopicCollection.set_MemberCount(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PageGet">
            <summary>Sets the shim of TopicCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of TopicCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PagesGet">
            <summary>Sets the shim of TopicCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of TopicCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of TopicCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of TopicCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PrivacyGet">
            <summary>Sets the shim of TopicCollection.get_Privacy()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.PrivacySetPoolPrivacy">
            <summary>Sets the shim of TopicCollection.set_Privacy(PoolPrivacy value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.TotalGet">
            <summary>Sets the shim of TopicCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of TopicCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicReply">
            <summary>Shim type of FlickrNet.TopicReply</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReply.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReply.#ctor(FlickrNet.TopicReply)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReply.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReply.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReply.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorBuddyIconGet">
            <summary>Sets the shim of TopicReply.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIconFarmGet">
            <summary>Sets the shim of TopicReply.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIconFarmSetString">
            <summary>Sets the shim of TopicReply.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIconServerGet">
            <summary>Sets the shim of TopicReply.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIconServerSetString">
            <summary>Sets the shim of TopicReply.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIsProGet">
            <summary>Sets the shim of TopicReply.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorIsProSetBoolean">
            <summary>Sets the shim of TopicReply.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorNameGet">
            <summary>Sets the shim of TopicReply.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorNameSetString">
            <summary>Sets the shim of TopicReply.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorRoleGet">
            <summary>Sets the shim of TopicReply.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of TopicReply.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorUserIdGet">
            <summary>Sets the shim of TopicReply.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AuthorUserIdSetString">
            <summary>Sets the shim of TopicReply.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.CanDeleteGet">
            <summary>Sets the shim of TopicReply.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.CanDeleteSetBoolean">
            <summary>Sets the shim of TopicReply.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.CanEditGet">
            <summary>Sets the shim of TopicReply.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.CanEditSetBoolean">
            <summary>Sets the shim of TopicReply.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.Constructor">
            <summary>Sets the shim of TopicReply.TopicReply()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.DateCreatedGet">
            <summary>Sets the shim of TopicReply.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.DateCreatedSetDateTime">
            <summary>Sets the shim of TopicReply.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.DateLastEditedGet">
            <summary>Sets the shim of TopicReply.get_DateLastEdited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.DateLastEditedSetDateTime">
            <summary>Sets the shim of TopicReply.set_DateLastEdited(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicReply.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.MessageGet">
            <summary>Sets the shim of TopicReply.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.MessageSetString">
            <summary>Sets the shim of TopicReply.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.ReplyIdGet">
            <summary>Sets the shim of TopicReply.get_ReplyId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.ReplyIdSetString">
            <summary>Sets the shim of TopicReply.set_ReplyId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicReply.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorBuddyIconGet">
            <summary>Sets the shim of TopicReply.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIconFarmGet">
            <summary>Sets the shim of TopicReply.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIconFarmSetString">
            <summary>Sets the shim of TopicReply.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIconServerGet">
            <summary>Sets the shim of TopicReply.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIconServerSetString">
            <summary>Sets the shim of TopicReply.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIsProGet">
            <summary>Sets the shim of TopicReply.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorIsProSetBoolean">
            <summary>Sets the shim of TopicReply.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorNameGet">
            <summary>Sets the shim of TopicReply.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorNameSetString">
            <summary>Sets the shim of TopicReply.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorRoleGet">
            <summary>Sets the shim of TopicReply.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of TopicReply.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorUserIdGet">
            <summary>Sets the shim of TopicReply.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.AuthorUserIdSetString">
            <summary>Sets the shim of TopicReply.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.CanDeleteGet">
            <summary>Sets the shim of TopicReply.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.CanDeleteSetBoolean">
            <summary>Sets the shim of TopicReply.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.CanEditGet">
            <summary>Sets the shim of TopicReply.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.CanEditSetBoolean">
            <summary>Sets the shim of TopicReply.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.DateCreatedGet">
            <summary>Sets the shim of TopicReply.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of TopicReply.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.DateLastEditedGet">
            <summary>Sets the shim of TopicReply.get_DateLastEdited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.DateLastEditedSetDateTime">
            <summary>Sets the shim of TopicReply.set_DateLastEdited(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicReply.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.MessageGet">
            <summary>Sets the shim of TopicReply.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.MessageSetString">
            <summary>Sets the shim of TopicReply.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.ReplyIdGet">
            <summary>Sets the shim of TopicReply.get_ReplyId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReply.AllInstances.ReplyIdSetString">
            <summary>Sets the shim of TopicReply.set_ReplyId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicReplyCollection">
            <summary>Shim type of FlickrNet.TopicReplyCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.#ctor(FlickrNet.TopicReplyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.TopicReply})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.TopicReply})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.Generic.IList{FlickrNet.TopicReply})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.TopicReply})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimTopicReplyCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.TopicReply})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorBuddyIconGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIconFarmGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIconFarmSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIconServerGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIconServerSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIsProGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorIsProSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorNameGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorNameSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorRoleGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorUserIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AuthorUserIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanDeleteGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanDeleteSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanEditGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanEditSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanReplyGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanReply()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.CanReplySetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanReply(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.Constructor">
            <summary>Sets the shim of TopicReplyCollection.TopicReplyCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.DateCreatedGet">
            <summary>Sets the shim of TopicReplyCollection.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.DateCreatedSetDateTime">
            <summary>Sets the shim of TopicReplyCollection.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.DateLastPostGet">
            <summary>Sets the shim of TopicReplyCollection.get_DateLastPost()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.DateLastPostSetDateTime">
            <summary>Sets the shim of TopicReplyCollection.set_DateLastPost(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicReplyCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIconFarmGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIconFarmSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIconServerGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIconServerSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIconUrlGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupNameGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.GroupNameSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.IsLockedGet">
            <summary>Sets the shim of TopicReplyCollection.get_IsLocked()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.IsLockedSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_IsLocked(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.IsStickyGet">
            <summary>Sets the shim of TopicReplyCollection.get_IsSticky()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.IsStickySetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_IsSticky(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.MessageGet">
            <summary>Sets the shim of TopicReplyCollection.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.MessageSetString">
            <summary>Sets the shim of TopicReplyCollection.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PageGet">
            <summary>Sets the shim of TopicReplyCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PageSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PagesGet">
            <summary>Sets the shim of TopicReplyCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PagesSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PerPageGet">
            <summary>Sets the shim of TopicReplyCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.PerPageSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.SubjectGet">
            <summary>Sets the shim of TopicReplyCollection.get_Subject()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.SubjectSetString">
            <summary>Sets the shim of TopicReplyCollection.set_Subject(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.TopicIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_TopicId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.TopicIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_TopicId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.TotalGet">
            <summary>Sets the shim of TopicReplyCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.TotalSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorBuddyIconGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorBuddyIcon()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIconFarmGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIconFarmSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIconServerGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIconServerSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIsProGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorIsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorIsProSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorIsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorNameGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorNameSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorRoleGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorRole()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorRoleSetMemberTypes">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorRole(MemberTypes value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorUserIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_AuthorUserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.AuthorUserIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_AuthorUserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanDeleteGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanDelete()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanDeleteSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanDelete(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanEditGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanEdit()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanEditSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanReplyGet">
            <summary>Sets the shim of TopicReplyCollection.get_CanReply()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.CanReplySetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_CanReply(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.DateCreatedGet">
            <summary>Sets the shim of TopicReplyCollection.get_DateCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.DateCreatedSetDateTime">
            <summary>Sets the shim of TopicReplyCollection.set_DateCreated(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.DateLastPostGet">
            <summary>Sets the shim of TopicReplyCollection.get_DateLastPost()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.DateLastPostSetDateTime">
            <summary>Sets the shim of TopicReplyCollection.set_DateLastPost(DateTime value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of TopicReplyCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIconFarmGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconFarm()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIconFarmSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupIconFarm(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIconServerGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconServer()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIconServerSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupIconServer(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIconUrlGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupIconUrl()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupNameGet">
            <summary>Sets the shim of TopicReplyCollection.get_GroupName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.GroupNameSetString">
            <summary>Sets the shim of TopicReplyCollection.set_GroupName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.IsLockedGet">
            <summary>Sets the shim of TopicReplyCollection.get_IsLocked()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.IsLockedSetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_IsLocked(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.IsStickyGet">
            <summary>Sets the shim of TopicReplyCollection.get_IsSticky()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.IsStickySetBoolean">
            <summary>Sets the shim of TopicReplyCollection.set_IsSticky(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.MessageGet">
            <summary>Sets the shim of TopicReplyCollection.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.MessageSetString">
            <summary>Sets the shim of TopicReplyCollection.set_Message(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PageGet">
            <summary>Sets the shim of TopicReplyCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PagesGet">
            <summary>Sets the shim of TopicReplyCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of TopicReplyCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.SubjectGet">
            <summary>Sets the shim of TopicReplyCollection.get_Subject()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.SubjectSetString">
            <summary>Sets the shim of TopicReplyCollection.set_Subject(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.TopicIdGet">
            <summary>Sets the shim of TopicReplyCollection.get_TopicId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.TopicIdSetString">
            <summary>Sets the shim of TopicReplyCollection.set_TopicId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.TotalGet">
            <summary>Sets the shim of TopicReplyCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimTopicReplyCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of TopicReplyCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUnknownResponse">
            <summary>Shim type of FlickrNet.UnknownResponse</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUnknownResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUnknownResponse.#ctor(FlickrNet.UnknownResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUnknownResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUnknownResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUnknownResponse.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.Constructor">
            <summary>Sets the shim of UnknownResponse.UnknownResponse()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UnknownResponse.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.GetAttributeValueStringString">
            <summary>Sets the shim of UnknownResponse.GetAttributeValue(String element, String attribute)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.GetElementArrayString">
            <summary>Sets the shim of UnknownResponse.GetElementArray(String elementName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.GetElementArrayStringString">
            <summary>Sets the shim of UnknownResponse.GetElementArray(String elementName, String attributeName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.GetElementValueString">
            <summary>Sets the shim of UnknownResponse.GetElementValue(String element)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.GetXmlDocument">
            <summary>Sets the shim of UnknownResponse.GetXmlDocument()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.ResponseXmlGet">
            <summary>Sets the shim of UnknownResponse.get_ResponseXml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.ResponseXmlSetString">
            <summary>Sets the shim of UnknownResponse.set_ResponseXml(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUnknownResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UnknownResponse.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.GetAttributeValueStringString">
            <summary>Sets the shim of UnknownResponse.GetAttributeValue(String element, String attribute)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.GetElementArrayString">
            <summary>Sets the shim of UnknownResponse.GetElementArray(String elementName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.GetElementArrayStringString">
            <summary>Sets the shim of UnknownResponse.GetElementArray(String elementName, String attributeName)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.GetElementValueString">
            <summary>Sets the shim of UnknownResponse.GetElementValue(String element)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.GetXmlDocument">
            <summary>Sets the shim of UnknownResponse.GetXmlDocument()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.ResponseXmlGet">
            <summary>Sets the shim of UnknownResponse.get_ResponseXml()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUnknownResponse.AllInstances.ResponseXmlSetString">
            <summary>Sets the shim of UnknownResponse.set_ResponseXml(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUploadProgressEventArgs">
            <summary>Shim type of FlickrNet.UploadProgressEventArgs</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUploadProgressEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUploadProgressEventArgs.#ctor(FlickrNet.UploadProgressEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUploadProgressEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUploadProgressEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.BytesSentGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_BytesSent()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.BytesSentSetInt64">
            <summary>Sets the shim of UploadProgressEventArgs.set_BytesSent(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.Constructor">
            <summary>Sets the shim of UploadProgressEventArgs.UploadProgressEventArgs()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.ConstructorInt64Int64">
            <summary>Sets the shim of UploadProgressEventArgs.UploadProgressEventArgs(Int64 bytes, Int64 totalBytes)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.ProcessPercentageGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_ProcessPercentage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.TotalBytesToSendGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_TotalBytesToSend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.TotalBytesToSendSetInt64">
            <summary>Sets the shim of UploadProgressEventArgs.set_TotalBytesToSend(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.UploadCompleteGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_UploadComplete()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.BytesSentGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_BytesSent()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.BytesSentSetInt64">
            <summary>Sets the shim of UploadProgressEventArgs.set_BytesSent(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.ProcessPercentageGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_ProcessPercentage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.TotalBytesToSendGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_TotalBytesToSend()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.TotalBytesToSendSetInt64">
            <summary>Sets the shim of UploadProgressEventArgs.set_TotalBytesToSend(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUploadProgressEventArgs.AllInstances.UploadCompleteGet">
            <summary>Sets the shim of UploadProgressEventArgs.get_UploadComplete()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUserGeoPermissions">
            <summary>Shim type of FlickrNet.UserGeoPermissions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserGeoPermissions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserGeoPermissions.#ctor(FlickrNet.UserGeoPermissions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserGeoPermissions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserGeoPermissions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserGeoPermissions.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.Constructor">
            <summary>Sets the shim of UserGeoPermissions.UserGeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UserGeoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.GeoPermissionsGet">
            <summary>Sets the shim of UserGeoPermissions.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.GeoPermissionsSetGeoPermissionType">
            <summary>Sets the shim of UserGeoPermissions.set_GeoPermissions(GeoPermissionType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.ImportGeoExifGet">
            <summary>Sets the shim of UserGeoPermissions.get_ImportGeoExif()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.ImportGeoExifSetBoolean">
            <summary>Sets the shim of UserGeoPermissions.set_ImportGeoExif(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.UserIdGet">
            <summary>Sets the shim of UserGeoPermissions.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.UserIdSetString">
            <summary>Sets the shim of UserGeoPermissions.set_UserId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UserGeoPermissions.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.GeoPermissionsGet">
            <summary>Sets the shim of UserGeoPermissions.get_GeoPermissions()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.GeoPermissionsSetGeoPermissionType">
            <summary>Sets the shim of UserGeoPermissions.set_GeoPermissions(GeoPermissionType value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.ImportGeoExifGet">
            <summary>Sets the shim of UserGeoPermissions.get_ImportGeoExif()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.ImportGeoExifSetBoolean">
            <summary>Sets the shim of UserGeoPermissions.set_ImportGeoExif(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.UserIdGet">
            <summary>Sets the shim of UserGeoPermissions.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserGeoPermissions.AllInstances.UserIdSetString">
            <summary>Sets the shim of UserGeoPermissions.set_UserId(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUserStatus">
            <summary>Shim type of FlickrNet.UserStatus</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserStatus.#ctor(FlickrNet.UserStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimUserStatus.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthMaxGet">
            <summary>Sets the shim of UserStatus.get_BandwidthMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthMaxKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthRemainingGet">
            <summary>Sets the shim of UserStatus.get_BandwidthRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthRemainingKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthRemainingKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthRemainingKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthRemainingKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthRemainingSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthRemaining(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthUsedGet">
            <summary>Sets the shim of UserStatus.get_BandwidthUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthUsedKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthUsedKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthUsedKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthUsedKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.BandwidthUsedSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthUsed(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.Constructor">
            <summary>Sets the shim of UserStatus.UserStatus()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxKBGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxMBGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMaxMB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxMBSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMaxMB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FileSizeMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UserStatus.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.IsProGet">
            <summary>Sets the shim of UserStatus.get_IsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.IsProSetBoolean">
            <summary>Sets the shim of UserStatus.set_IsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.IsUnlimitedGet">
            <summary>Sets the shim of UserStatus.get_IsUnlimited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.IsUnlimitedSetBoolean">
            <summary>Sets the shim of UserStatus.set_IsUnlimited(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.LoadAttributesXmlReader">
            <summary>Sets the shim of UserStatus.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.LoadElementsXmlReader">
            <summary>Sets the shim of UserStatus.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.ParseBandwidthXmlReader">
            <summary>Sets the shim of UserStatus.ParseBandwidth(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.ParseFileSizeXmlReader">
            <summary>Sets the shim of UserStatus.ParseFileSize(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.ParseSetsXmlReader">
            <summary>Sets the shim of UserStatus.ParseSets(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.ParseVideoSizeXmlReader">
            <summary>Sets the shim of UserStatus.ParseVideoSize(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.ParseVideosXmlReader">
            <summary>Sets the shim of UserStatus.ParseVideos(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.PercentageUsedGet">
            <summary>Sets the shim of UserStatus.get_PercentageUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.SetsCreatedGet">
            <summary>Sets the shim of UserStatus.get_SetsCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.SetsCreatedSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_SetsCreated(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.SetsRemainingGet">
            <summary>Sets the shim of UserStatus.get_SetsRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.SetsRemainingSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_SetsRemaining(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.UserIdGet">
            <summary>Sets the shim of UserStatus.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.UserIdSetString">
            <summary>Sets the shim of UserStatus.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.UserNameGet">
            <summary>Sets the shim of UserStatus.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.UserNameSetString">
            <summary>Sets the shim of UserStatus.set_UserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxKBGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxMBGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMaxMB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxMBSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMaxMB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideoSizeMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideosRemainingGet">
            <summary>Sets the shim of UserStatus.get_VideosRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideosRemainingSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_VideosRemaining(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideosUploadedGet">
            <summary>Sets the shim of UserStatus.get_VideosUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.VideosUploadedSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_VideosUploaded(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimUserStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthMaxGet">
            <summary>Sets the shim of UserStatus.get_BandwidthMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthMaxKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthRemainingGet">
            <summary>Sets the shim of UserStatus.get_BandwidthRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthRemainingKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthRemainingKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthRemainingKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthRemainingKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthRemainingSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthRemaining(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthUsedGet">
            <summary>Sets the shim of UserStatus.get_BandwidthUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthUsedKBGet">
            <summary>Sets the shim of UserStatus.get_BandwidthUsedKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthUsedKBSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthUsedKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.BandwidthUsedSetInt64">
            <summary>Sets the shim of UserStatus.set_BandwidthUsed(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxKBGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxMBGet">
            <summary>Sets the shim of UserStatus.get_FileSizeMaxMB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxMBSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMaxMB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FileSizeMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_FileSizeMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of UserStatus.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.IsProGet">
            <summary>Sets the shim of UserStatus.get_IsPro()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.IsProSetBoolean">
            <summary>Sets the shim of UserStatus.set_IsPro(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.IsUnlimitedGet">
            <summary>Sets the shim of UserStatus.get_IsUnlimited()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.IsUnlimitedSetBoolean">
            <summary>Sets the shim of UserStatus.set_IsUnlimited(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.LoadAttributesXmlReader">
            <summary>Sets the shim of UserStatus.LoadAttributes(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.LoadElementsXmlReader">
            <summary>Sets the shim of UserStatus.LoadElements(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.ParseBandwidthXmlReader">
            <summary>Sets the shim of UserStatus.ParseBandwidth(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.ParseFileSizeXmlReader">
            <summary>Sets the shim of UserStatus.ParseFileSize(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.ParseSetsXmlReader">
            <summary>Sets the shim of UserStatus.ParseSets(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.ParseVideoSizeXmlReader">
            <summary>Sets the shim of UserStatus.ParseVideoSize(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.ParseVideosXmlReader">
            <summary>Sets the shim of UserStatus.ParseVideos(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.PercentageUsedGet">
            <summary>Sets the shim of UserStatus.get_PercentageUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.SetsCreatedGet">
            <summary>Sets the shim of UserStatus.get_SetsCreated()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.SetsCreatedSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_SetsCreated(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.SetsRemainingGet">
            <summary>Sets the shim of UserStatus.get_SetsRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.SetsRemainingSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_SetsRemaining(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.UserIdGet">
            <summary>Sets the shim of UserStatus.get_UserId()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.UserIdSetString">
            <summary>Sets the shim of UserStatus.set_UserId(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.UserNameGet">
            <summary>Sets the shim of UserStatus.get_UserName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.UserNameSetString">
            <summary>Sets the shim of UserStatus.set_UserName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMax()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxKBGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMaxKB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxKBSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMaxKB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxMBGet">
            <summary>Sets the shim of UserStatus.get_VideoSizeMaxMB()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxMBSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMaxMB(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideoSizeMaxSetInt64">
            <summary>Sets the shim of UserStatus.set_VideoSizeMax(Int64 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideosRemainingGet">
            <summary>Sets the shim of UserStatus.get_VideosRemaining()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideosRemainingSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_VideosRemaining(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideosUploadedGet">
            <summary>Sets the shim of UserStatus.get_VideosUploaded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimUserStatus.AllInstances.VideosUploadedSetNullableOfInt32">
            <summary>Sets the shim of UserStatus.set_VideosUploaded(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimValue">
            <summary>Shim type of FlickrNet.Value</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValue.#ctor(FlickrNet.Value)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValue.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.Constructor">
            <summary>Sets the shim of Value.Value()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.DateFirstAddedGet">
            <summary>Sets the shim of Value.get_DateFirstAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.DateFirstAddedSetNullableOfDateTime">
            <summary>Sets the shim of Value.set_DateFirstAdded(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.DateLastUsedGet">
            <summary>Sets the shim of Value.get_DateLastUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.DateLastUsedSetNullableOfDateTime">
            <summary>Sets the shim of Value.set_DateLastUsed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Value.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.MachineTagGet">
            <summary>Sets the shim of Value.get_MachineTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.NamespaceNameGet">
            <summary>Sets the shim of Value.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.NamespaceNameSetString">
            <summary>Sets the shim of Value.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.PredicateNameGet">
            <summary>Sets the shim of Value.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.PredicateNameSetString">
            <summary>Sets the shim of Value.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.UsageGet">
            <summary>Sets the shim of Value.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.UsageSetInt32">
            <summary>Sets the shim of Value.set_Usage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.ValueTextGet">
            <summary>Sets the shim of Value.get_ValueText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.ValueTextSetString">
            <summary>Sets the shim of Value.set_ValueText(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.DateFirstAddedGet">
            <summary>Sets the shim of Value.get_DateFirstAdded()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.DateFirstAddedSetNullableOfDateTime">
            <summary>Sets the shim of Value.set_DateFirstAdded(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.DateLastUsedGet">
            <summary>Sets the shim of Value.get_DateLastUsed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.DateLastUsedSetNullableOfDateTime">
            <summary>Sets the shim of Value.set_DateLastUsed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of Value.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.MachineTagGet">
            <summary>Sets the shim of Value.get_MachineTag()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of Value.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of Value.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.PredicateNameGet">
            <summary>Sets the shim of Value.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.PredicateNameSetString">
            <summary>Sets the shim of Value.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.UsageGet">
            <summary>Sets the shim of Value.get_Usage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.UsageSetInt32">
            <summary>Sets the shim of Value.set_Usage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.ValueTextGet">
            <summary>Sets the shim of Value.get_ValueText()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValue.AllInstances.ValueTextSetString">
            <summary>Sets the shim of Value.set_ValueText(String value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimValueCollection">
            <summary>Shim type of FlickrNet.ValueCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.#ctor(FlickrNet.ValueCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.Generic.ICollection{FlickrNet.Value})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.Generic.IEnumerable{FlickrNet.Value})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.Generic.IList{FlickrNet.Value})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.Generic.IReadOnlyCollection{FlickrNet.Value})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimValueCollection.Bind(System.Collections.Generic.IReadOnlyList{FlickrNet.Value})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.Constructor">
            <summary>Sets the shim of ValueCollection.ValueCollection()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.DateAddedSinceGet">
            <summary>Sets the shim of ValueCollection.get_DateAddedSince()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.DateAddedSinceSetNullableOfDateTime">
            <summary>Sets the shim of ValueCollection.set_DateAddedSince(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ValueCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.NamespaceNameGet">
            <summary>Sets the shim of ValueCollection.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.NamespaceNameSetString">
            <summary>Sets the shim of ValueCollection.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PageGet">
            <summary>Sets the shim of ValueCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PageSetInt32">
            <summary>Sets the shim of ValueCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PagesGet">
            <summary>Sets the shim of ValueCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PagesSetInt32">
            <summary>Sets the shim of ValueCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PerPageGet">
            <summary>Sets the shim of ValueCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PerPageSetInt32">
            <summary>Sets the shim of ValueCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PredicateNameGet">
            <summary>Sets the shim of ValueCollection.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.PredicateNameSetString">
            <summary>Sets the shim of ValueCollection.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.TotalGet">
            <summary>Sets the shim of ValueCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.TotalSetInt32">
            <summary>Sets the shim of ValueCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimValueCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.DateAddedSinceGet">
            <summary>Sets the shim of ValueCollection.get_DateAddedSince()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.DateAddedSinceSetNullableOfDateTime">
            <summary>Sets the shim of ValueCollection.set_DateAddedSince(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of ValueCollection.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of ValueCollection.get_NamespaceName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of ValueCollection.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PageGet">
            <summary>Sets the shim of ValueCollection.get_Page()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PageSetInt32">
            <summary>Sets the shim of ValueCollection.set_Page(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PagesGet">
            <summary>Sets the shim of ValueCollection.get_Pages()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PagesSetInt32">
            <summary>Sets the shim of ValueCollection.set_Pages(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PerPageGet">
            <summary>Sets the shim of ValueCollection.get_PerPage()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PerPageSetInt32">
            <summary>Sets the shim of ValueCollection.set_PerPage(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PredicateNameGet">
            <summary>Sets the shim of ValueCollection.get_PredicateName()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.PredicateNameSetString">
            <summary>Sets the shim of ValueCollection.set_PredicateName(String value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.TotalGet">
            <summary>Sets the shim of ValueCollection.get_Total()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimValueCollection.AllInstances.TotalSetInt32">
            <summary>Sets the shim of ValueCollection.set_Total(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimVideoInfo">
            <summary>Shim type of FlickrNet.VideoInfo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimVideoInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimVideoInfo.#ctor(FlickrNet.VideoInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimVideoInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimVideoInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:FlickrNet.Fakes.ShimVideoInfo.Bind(FlickrNet.IFlickrParsable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.Constructor">
            <summary>Sets the shim of VideoInfo.VideoInfo()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.DurationGet">
            <summary>Sets the shim of VideoInfo.get_Duration()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.DurationSetInt32">
            <summary>Sets the shim of VideoInfo.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.FailedGet">
            <summary>Sets the shim of VideoInfo.get_Failed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.FailedSetBoolean">
            <summary>Sets the shim of VideoInfo.set_Failed(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of VideoInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.HeightGet">
            <summary>Sets the shim of VideoInfo.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.HeightSetInt32">
            <summary>Sets the shim of VideoInfo.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.PendingGet">
            <summary>Sets the shim of VideoInfo.get_Pending()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.PendingSetBoolean">
            <summary>Sets the shim of VideoInfo.set_Pending(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.ReadyGet">
            <summary>Sets the shim of VideoInfo.get_Ready()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.ReadySetBoolean">
            <summary>Sets the shim of VideoInfo.set_Ready(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.WidthGet">
            <summary>Sets the shim of VideoInfo.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.WidthSetInt32">
            <summary>Sets the shim of VideoInfo.set_Width(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.ShimVideoInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.DurationGet">
            <summary>Sets the shim of VideoInfo.get_Duration()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.DurationSetInt32">
            <summary>Sets the shim of VideoInfo.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.FailedGet">
            <summary>Sets the shim of VideoInfo.get_Failed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.FailedSetBoolean">
            <summary>Sets the shim of VideoInfo.set_Failed(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.FlickrNetIFlickrParsableLoadXmlReader">
            <summary>Sets the shim of VideoInfo.FlickrNet.IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.HeightGet">
            <summary>Sets the shim of VideoInfo.get_Height()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.HeightSetInt32">
            <summary>Sets the shim of VideoInfo.set_Height(Int32 value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.PendingGet">
            <summary>Sets the shim of VideoInfo.get_Pending()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.PendingSetBoolean">
            <summary>Sets the shim of VideoInfo.set_Pending(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.ReadyGet">
            <summary>Sets the shim of VideoInfo.get_Ready()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.ReadySetBoolean">
            <summary>Sets the shim of VideoInfo.set_Ready(Boolean value)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.WidthGet">
            <summary>Sets the shim of VideoInfo.get_Width()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.ShimVideoInfo.AllInstances.WidthSetInt32">
            <summary>Sets the shim of VideoInfo.set_Width(Int32 value)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubApiKeyRequiredException">
            <summary>Stub type of FlickrNet.ApiKeyRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubApiKeyRequiredException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubApiKeyRequiredException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.InitializeStub">
            <summary>Initializes a new instance of type StubApiKeyRequiredException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubApiKeyRequiredException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubApiKeyRequiredException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubApiKeyRequiredException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubAuthenticationRequiredException">
            <summary>Stub type of FlickrNet.AuthenticationRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAuthenticationRequiredException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAuthenticationRequiredException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationRequiredException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubAuthenticationRequiredException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubAuthenticationRequiredException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubAuthenticationRequiredException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubBoundaryBox">
            <summary>Stub type of FlickrNet.BoundaryBox</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor(FlickrNet.GeoAccuracy)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor(System.String,FlickrNet.GeoAccuracy)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.#ctor(System.Double,System.Double,System.Double,System.Double,FlickrNet.GeoAccuracy)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.InitializeStub">
            <summary>Initializes a new instance of type StubBoundaryBox</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubBoundaryBox.ToString">
            <summary>Sets the stub of BoundaryBox.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubBoundaryBox.ToString01">
            <summary>Sets the stub of BoundaryBox.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubBoundaryBox.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubBoundaryBox.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubBoundaryBox.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubCacheException">
            <summary>Stub type of FlickrNet.CacheException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCacheException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCacheException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.InitializeStub">
            <summary>Initializes a new instance of type StubCacheException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubCacheItemPersister">
            <summary>Stub type of FlickrNet.CacheItemPersister</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheItemPersister.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheItemPersister.InitializeStub">
            <summary>Initializes a new instance of type StubCacheItemPersister</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheItemPersister.Read(System.IO.Stream)">
            <summary>Sets the stub of CacheItemPersister.Read(Stream inputStream)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheItemPersister.ReadStream">
            <summary>Sets the stub of CacheItemPersister.Read(Stream inputStream)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubCacheItemPersister.Write(System.IO.Stream,FlickrNet.ICacheItem)">
            <summary>Sets the stub of CacheItemPersister.Write(Stream outputStream, ICacheItem cacheItem)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubCacheItemPersister.WriteStreamICacheItem">
            <summary>Sets the stub of CacheItemPersister.Write(Stream outputStream, ICacheItem cacheItem)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheItemPersister.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheItemPersister.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubCacheItemPersister.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubContextGroup">
            <summary>Stub type of FlickrNet.ContextGroup</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubContextGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubContextGroup.InitializeStub">
            <summary>Initializes a new instance of type StubContextGroup</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubContextSet">
            <summary>Stub type of FlickrNet.ContextSet</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubContextSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubContextSet.InitializeStub">
            <summary>Initializes a new instance of type StubContextSet</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubContextSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubFlickr">
            <summary>Stub type of FlickrNet.Flickr</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickr.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickr.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickr.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickr.InitializeStub">
            <summary>Initializes a new instance of type StubFlickr</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubFlickrApiException">
            <summary>Stub type of FlickrNet.FlickrApiException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFlickrApiException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFlickrApiException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.InitializeStub">
            <summary>Initializes a new instance of type StubFlickrApiException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.MessageGet">
            <summary>Sets the stub of FlickrApiException.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrApiException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrApiException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.Message">
            <summary>Sets the stub of FlickrApiException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrApiException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubFlickrException">
            <summary>Stub type of FlickrNet.FlickrException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFlickrException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFlickrException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.InitializeStub">
            <summary>Initializes a new instance of type StubFlickrException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubFlickrResult`1">
            <summary>Stub type of FlickrNet.FlickrResult`1</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrResult`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrResult`1.InitializeStub">
            <summary>Initializes a new instance of type StubFlickrResult</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrResult`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrResult`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrResult`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubFlickrWebException">
            <summary>Stub type of FlickrNet.FlickrWebException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFlickrWebException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFlickrWebException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.InitializeStub">
            <summary>Initializes a new instance of type StubFlickrWebException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubFlickrWebException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubFlickrWebException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubFlickrWebException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubGalleryPhoto">
            <summary>Stub type of FlickrNet.GalleryPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubGalleryPhoto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubGalleryPhoto.InitializeStub">
            <summary>Initializes a new instance of type StubGalleryPhoto</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGalleryPhoto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGalleryPhoto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGalleryPhoto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubGroup">
            <summary>Stub type of FlickrNet.Group</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubGroup.InitializeStub">
            <summary>Initializes a new instance of type StubGroup</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubICacheItem">
            <summary>Stub type of FlickrNet.ICacheItem</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubICacheItem.#ctor">
            <summary>Initializes a new instance of type StubICacheItem</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubICacheItem.CreationTimeGet">
            <summary>Sets the stub of ICacheItem.get_CreationTime()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubICacheItem.FileSizeGet">
            <summary>Sets the stub of ICacheItem.get_FileSize()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubICacheItem.fn::FlickrNet#ICacheItem#OnItemFlushed">
            <summary>Sets the stub of ICacheItem.OnItemFlushed()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubICacheItem.OnItemFlushed">
            <summary>Sets the stub of ICacheItem.OnItemFlushed()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubICacheItem.fn::FlickrNet#ICacheItem#CreationTime">
            <summary>Sets the stub of ICacheItem.get_CreationTime()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubICacheItem.fn::FlickrNet#ICacheItem#FileSize">
            <summary>Sets the stub of ICacheItem.get_FileSize()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubIFlickrParsable">
            <summary>Stub type of FlickrNet.IFlickrParsable</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubIFlickrParsable.#ctor">
            <summary>Initializes a new instance of type StubIFlickrParsable</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubIFlickrParsable.fn::FlickrNet#IFlickrParsable#Load(System.Xml.XmlReader)">
            <summary>Sets the stub of IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubIFlickrParsable.LoadXmlReader">
            <summary>Sets the stub of IFlickrParsable.Load(XmlReader reader)</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubOAuthAccessToken">
            <summary>Stub type of FlickrNet.OAuthAccessToken</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthAccessToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthAccessToken.InitializeStub">
            <summary>Initializes a new instance of type StubOAuthAccessToken</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthAccessToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthAccessToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthAccessToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubOAuthException">
            <summary>Stub type of FlickrNet.OAuthException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubOAuthException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubOAuthException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.InitializeStub">
            <summary>Initializes a new instance of type StubOAuthException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.MessageGet">
            <summary>Sets the stub of OAuthException.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubOAuthException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.Message">
            <summary>Sets the stub of OAuthException.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubOAuthRequestToken">
            <summary>Stub type of FlickrNet.OAuthRequestToken</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthRequestToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubOAuthRequestToken.InitializeStub">
            <summary>Initializes a new instance of type StubOAuthRequestToken</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthRequestToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthRequestToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubOAuthRequestToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPagedPhotoCollection">
            <summary>Stub type of FlickrNet.PagedPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubPagedPhotoCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.InitializeStub">
            <summary>Initializes a new instance of type StubPagedPhotoCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.InsertItem(System.Int32,FlickrNet.Photo)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubPagedPhotoCollection.InsertItemInt32Photo">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubPagedPhotoCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPagedPhotoCollection.SetItem(System.Int32,FlickrNet.Photo)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubPagedPhotoCollection.SetItemInt32Photo">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPagedPhotoCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPagedPhotoCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPagedPhotoCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubParsingException">
            <summary>Stub type of FlickrNet.ParsingException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubParsingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubParsingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.InitializeStub">
            <summary>Initializes a new instance of type StubParsingException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubParsingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubParsingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubParsingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPartialSearchOptions">
            <summary>Stub type of FlickrNet.PartialSearchOptions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPartialSearchOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPartialSearchOptions.#ctor(FlickrNet.PhotoSearchExtras)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPartialSearchOptions.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPartialSearchOptions.#ctor(System.Int32,System.Int32,FlickrNet.PhotoSearchExtras)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPartialSearchOptions.InitializeStub">
            <summary>Initializes a new instance of type StubPartialSearchOptions</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPartialSearchOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPartialSearchOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPartialSearchOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPersonLimits">
            <summary>Stub type of FlickrNet.PersonLimits</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPersonLimits.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPersonLimits.InitializeStub">
            <summary>Initializes a new instance of type StubPersonLimits</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPersonLimits.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPersonLimits.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPersonLimits.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPhoto">
            <summary>Stub type of FlickrNet.Photo</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhoto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhoto.InitializeStub">
            <summary>Initializes a new instance of type StubPhoto</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhoto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhoto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhoto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPhotoSearchOptions">
            <summary>Stub type of FlickrNet.PhotoSearchOptions</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.#ctor(System.String,System.String,FlickrNet.TagMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.#ctor(System.String,System.String,FlickrNet.TagMode,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPhotoSearchOptions.InitializeStub">
            <summary>Initializes a new instance of type StubPhotoSearchOptions</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhotoSearchOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhotoSearchOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPhotoSearchOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubPopularPhoto">
            <summary>Stub type of FlickrNet.PopularPhoto</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPopularPhoto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubPopularPhoto.InitializeStub">
            <summary>Initializes a new instance of type StubPopularPhoto</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPopularPhoto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPopularPhoto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubPopularPhoto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubResponseXmlException">
            <summary>Stub type of FlickrNet.ResponseXmlException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubResponseXmlException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubResponseXmlException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.InitializeStub">
            <summary>Initializes a new instance of type StubResponseXmlException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubResponseXmlException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubResponseXmlException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubResponseXmlException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubSignatureRequiredException">
            <summary>Stub type of FlickrNet.SignatureRequiredException</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSignatureRequiredException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSignatureRequiredException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.InitializeStub">
            <summary>Initializes a new instance of type StubSignatureRequiredException</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubSignatureRequiredException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubSignatureRequiredException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubSignatureRequiredException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubTopic">
            <summary>Stub type of FlickrNet.Topic</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopic.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopic.InitializeStub">
            <summary>Initializes a new instance of type StubTopic</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopic.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopic.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopic.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubTopicCollection">
            <summary>Stub type of FlickrNet.TopicCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.InitializeStub">
            <summary>Initializes a new instance of type StubTopicCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.InsertItem(System.Int32,FlickrNet.Topic)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicCollection.InsertItemInt32Topic">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicCollection.SetItem(System.Int32,FlickrNet.Topic)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicCollection.SetItemInt32Topic">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubTopicReply">
            <summary>Stub type of FlickrNet.TopicReply</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReply.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReply.InitializeStub">
            <summary>Initializes a new instance of type StubTopicReply</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReply.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReply.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReply.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:FlickrNet.Fakes.StubTopicReplyCollection">
            <summary>Stub type of FlickrNet.TopicReplyCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicReplyCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.InitializeStub">
            <summary>Initializes a new instance of type StubTopicReplyCollection</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.InsertItem(System.Int32,FlickrNet.TopicReply)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicReplyCollection.InsertItemInt32TopicReply">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicReplyCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:FlickrNet.Fakes.StubTopicReplyCollection.SetItem(System.Int32,FlickrNet.TopicReply)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:FlickrNet.Fakes.StubTopicReplyCollection.SetItemInt32TopicReply">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReplyCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReplyCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FlickrNet.Fakes.StubTopicReplyCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
